
PingPongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000150  00800100  00001aca  00001b5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001aca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800250  00800250  00001cae  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00001d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001af5  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c30  00000000  00000000  00003975  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bca  00000000  00000000  000045a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  00005170  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000079d  00000000  00000000  000054e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c1f  00000000  00000000  00005c81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000068a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__ctors_end>
       4:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__vector_1>
       8:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
       c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      10:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      14:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      18:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      1c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      20:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      24:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      28:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      2c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      30:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      34:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      38:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      3c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      40:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      44:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      48:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      4c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      50:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      54:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      58:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      5c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      60:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      64:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      68:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>
      6c:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font5>:
     1ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     1fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     20c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     21c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     22c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     23c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     24c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     25c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     26c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     27c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     28c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     29c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     2ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     2bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     2ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     2fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     30c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     31c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     32c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     33c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     34c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     35c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     36c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     37c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     38c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     39c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     3ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     3bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000003c7 <font8>:
	...
     3cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     3df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     3ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     3ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     40f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     41f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     42f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     43f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     44f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     45f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     46f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     47f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     48f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     49f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     4af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     4bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     4cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     4df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     4ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     4ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     50f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     51f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     52f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     53f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     54f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     55f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     56f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     57f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     58f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     59f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     5af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     5bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     5cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     5df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     5ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     5ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     60f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     61f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     62f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     63f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     64f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     65f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     66f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     67f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     68f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     69f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     6af:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000006c0 <__ctors_end>:
     6c0:	11 24       	eor	r1, r1
     6c2:	1f be       	out	0x3f, r1	; 63
     6c4:	cf ef       	ldi	r28, 0xFF	; 255
     6c6:	d4 e0       	ldi	r29, 0x04	; 4
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	cd bf       	out	0x3d, r28	; 61

000006cc <__do_copy_data>:
     6cc:	12 e0       	ldi	r17, 0x02	; 2
     6ce:	a0 e0       	ldi	r26, 0x00	; 0
     6d0:	b1 e0       	ldi	r27, 0x01	; 1
     6d2:	ea ec       	ldi	r30, 0xCA	; 202
     6d4:	fa e1       	ldi	r31, 0x1A	; 26
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__do_copy_data+0x10>
     6d8:	05 90       	lpm	r0, Z+
     6da:	0d 92       	st	X+, r0
     6dc:	a0 35       	cpi	r26, 0x50	; 80
     6de:	b1 07       	cpc	r27, r17
     6e0:	d9 f7       	brne	.-10     	; 0x6d8 <__do_copy_data+0xc>

000006e2 <__do_clear_bss>:
     6e2:	22 e0       	ldi	r18, 0x02	; 2
     6e4:	a0 e5       	ldi	r26, 0x50	; 80
     6e6:	b2 e0       	ldi	r27, 0x02	; 2
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <.do_clear_bss_start>

000006ea <.do_clear_bss_loop>:
     6ea:	1d 92       	st	X+, r1

000006ec <.do_clear_bss_start>:
     6ec:	a0 36       	cpi	r26, 0x60	; 96
     6ee:	b2 07       	cpc	r27, r18
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <.do_clear_bss_loop>
     6f2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <main>
     6f6:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <_exit>

000006fa <__bad_interrupt>:
     6fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006fe <initPWM>:
void initPWM() {
	
	// PD4 OC3A (Timer/Counter3 Output Compare A Match Output
	
	// Set pP as an output pin
	DDRD |= (1 << PD4);
     6fe:	81 b3       	in	r24, 0x11	; 17
     700:	80 61       	ori	r24, 0x10	; 16
     702:	81 bb       	out	0x11, r24	; 17
	
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
     704:	89 e6       	ldi	r24, 0x69	; 105
     706:	83 bf       	out	0x33, r24	; 51

	// Set non-inverting mode for OC3A (Clear on Compare Match)
	// Set Fast PWM mode with TOP value at ICR3
	
	TCCR3A |= (1 << WGM31) | (0 << WGM30) | (1 << COM3A1);
     708:	eb e8       	ldi	r30, 0x8B	; 139
     70a:	f0 e0       	ldi	r31, 0x00	; 0
     70c:	80 81       	ld	r24, Z
     70e:	82 68       	ori	r24, 0x82	; 130
     710:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM33) | (1 << WGM32) | (1 << CS30);
     712:	ea e8       	ldi	r30, 0x8A	; 138
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	80 81       	ld	r24, Z
     718:	89 61       	ori	r24, 0x19	; 25
     71a:	80 83       	st	Z, r24
	
	ICR3 = 5;
     71c:	85 e0       	ldi	r24, 0x05	; 5
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     724:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7fc080>
	OCR3A = 2;
     728:	82 e0       	ldi	r24, 0x02	; 2
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     730:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     734:	08 95       	ret

00000736 <adc_read>:

struct adc_output adc_read()
{
	
	volatile char *adc = (char *) 0x1400; // Start address for the ADC
	adc[0] = 0x01;
     736:	e0 e0       	ldi	r30, 0x00	; 0
     738:	f4 e1       	ldi	r31, 0x14	; 20
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     73e:	86 ea       	ldi	r24, 0xA6	; 166
     740:	8a 95       	dec	r24
     742:	f1 f7       	brne	.-4      	; 0x740 <adc_read+0xa>
     744:	00 c0       	rjmp	.+0      	; 0x746 <adc_read+0x10>
	// tCONV = (9 x N x 2)/fCLK
	// (9*8*2)/819138 = 175.79455e-6
	_delay_us(500);
	uint8_t joystick_x = adc[0];
     746:	60 81       	ld	r22, Z
	uint8_t joystick_y = adc[0];
     748:	70 81       	ld	r23, Z
	uint8_t left_slider = adc[0];
     74a:	80 81       	ld	r24, Z
	uint8_t right_slider = adc[0];
     74c:	90 81       	ld	r25, Z
	struct adc_output output = {joystick_x, joystick_y, left_slider, right_slider};
	
	return output;
	//return 0;
	
}
     74e:	08 95       	ret

00000750 <setup_joystick>:
uint8_t originJoystickPositionY = 0;


void setup_joystick()
{
	struct adc_output initValues = adc_read();
     750:	0e 94 9b 03 	call	0x736	; 0x736 <adc_read>
	originJoystickPositionX = initValues.joystick_x;
     754:	70 93 51 02 	sts	0x0251, r23	; 0x800251 <originJoystickPositionX>
	originJoystickPositionY = initValues.joystick_y;
     758:	60 93 50 02 	sts	0x0250, r22	; 0x800250 <__data_end>
     75c:	08 95       	ret

0000075e <normalize_position>:

int normalize_position(uint8_t currentValue, uint8_t centerValue, uint8_t minValue, uint8_t maxValue)
{
	int result;
	
	if (currentValue > centerValue){
     75e:	68 17       	cp	r22, r24
     760:	a8 f4       	brcc	.+42     	; 0x78c <normalize_position+0x2e>
		result = 50 + ((currentValue - centerValue)*50) / (255 - centerValue);
     762:	46 2f       	mov	r20, r22
     764:	50 e0       	ldi	r21, 0x00	; 0
     766:	28 2f       	mov	r18, r24
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	24 1b       	sub	r18, r20
     76c:	35 0b       	sbc	r19, r21
     76e:	62 e3       	ldi	r22, 0x32	; 50
     770:	62 9f       	mul	r22, r18
     772:	c0 01       	movw	r24, r0
     774:	63 9f       	mul	r22, r19
     776:	90 0d       	add	r25, r0
     778:	11 24       	eor	r1, r1
     77a:	6f ef       	ldi	r22, 0xFF	; 255
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	64 1b       	sub	r22, r20
     780:	75 0b       	sbc	r23, r21
     782:	0e 94 df 07 	call	0xfbe	; 0xfbe <__divmodhi4>
		return result;
     786:	cb 01       	movw	r24, r22
     788:	c2 96       	adiw	r24, 0x32	; 50
     78a:	08 95       	ret
	}
	if (currentValue < centerValue){
     78c:	86 17       	cp	r24, r22
     78e:	48 f4       	brcc	.+18     	; 0x7a2 <normalize_position+0x44>
		result = (currentValue * 50) / centerValue;
     790:	22 e3       	ldi	r18, 0x32	; 50
     792:	82 9f       	mul	r24, r18
     794:	c0 01       	movw	r24, r0
     796:	11 24       	eor	r1, r1
     798:	70 e0       	ldi	r23, 0x00	; 0
		return result;
     79a:	0e 94 df 07 	call	0xfbe	; 0xfbe <__divmodhi4>
     79e:	cb 01       	movw	r24, r22
     7a0:	08 95       	ret
	}
	
	
	return 50;
     7a2:	82 e3       	ldi	r24, 0x32	; 50
     7a4:	90 e0       	ldi	r25, 0x00	; 0
}
     7a6:	08 95       	ret

000007a8 <get_joystick_position>:



get_joystick_position(struct joystickPosition* position)
{
     7a8:	8f 92       	push	r8
     7aa:	9f 92       	push	r9
     7ac:	af 92       	push	r10
     7ae:	bf 92       	push	r11
     7b0:	cf 92       	push	r12
     7b2:	df 92       	push	r13
     7b4:	ef 92       	push	r14
     7b6:	ff 92       	push	r15
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	ec 01       	movw	r28, r24
	struct adc_output newValues;
	double angle;
	
	newValues = adc_read();
     7be:	0e 94 9b 03 	call	0x736	; 0x736 <adc_read>
     7c2:	b6 2e       	mov	r11, r22
     7c4:	87 2f       	mov	r24, r23
	
	position->xNormalized = normalize_position(newValues.joystick_x, originJoystickPositionX, 0, 255);
     7c6:	2f ef       	ldi	r18, 0xFF	; 255
     7c8:	40 e0       	ldi	r20, 0x00	; 0
     7ca:	60 91 51 02 	lds	r22, 0x0251	; 0x800251 <originJoystickPositionX>
     7ce:	0e 94 af 03 	call	0x75e	; 0x75e <normalize_position>
     7d2:	bc 01       	movw	r22, r24
     7d4:	99 0f       	add	r25, r25
     7d6:	88 0b       	sbc	r24, r24
     7d8:	99 0b       	sbc	r25, r25
     7da:	0e 94 7b 07 	call	0xef6	; 0xef6 <__floatsisf>
     7de:	6b 01       	movw	r12, r22
     7e0:	7c 01       	movw	r14, r24
     7e2:	68 83       	st	Y, r22
     7e4:	79 83       	std	Y+1, r23	; 0x01
     7e6:	8a 83       	std	Y+2, r24	; 0x02
     7e8:	9b 83       	std	Y+3, r25	; 0x03
	position->yNormalized = normalize_position(newValues.joystick_y, originJoystickPositionY, 0, 255);
     7ea:	2f ef       	ldi	r18, 0xFF	; 255
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	60 91 50 02 	lds	r22, 0x0250	; 0x800250 <__data_end>
     7f2:	8b 2d       	mov	r24, r11
     7f4:	0e 94 af 03 	call	0x75e	; 0x75e <normalize_position>
     7f8:	bc 01       	movw	r22, r24
     7fa:	99 0f       	add	r25, r25
     7fc:	88 0b       	sbc	r24, r24
     7fe:	99 0b       	sbc	r25, r25
     800:	0e 94 7b 07 	call	0xef6	; 0xef6 <__floatsisf>
     804:	4b 01       	movw	r8, r22
     806:	5c 01       	movw	r10, r24
     808:	6c 83       	std	Y+4, r22	; 0x04
     80a:	7d 83       	std	Y+5, r23	; 0x05
     80c:	8e 83       	std	Y+6, r24	; 0x06
     80e:	9f 83       	std	Y+7, r25	; 0x07


	position->position = NEUTRAL;
     810:	84 e0       	ldi	r24, 0x04	; 4
     812:	88 8b       	std	Y+16, r24	; 0x10
	
	
	
	if( position->xNormalized > 75 || position->xNormalized < 25 || position->yNormalized > 75 || position->yNormalized < 25)
     814:	20 e0       	ldi	r18, 0x00	; 0
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	46 e9       	ldi	r20, 0x96	; 150
     81a:	52 e4       	ldi	r21, 0x42	; 66
     81c:	c7 01       	movw	r24, r14
     81e:	b6 01       	movw	r22, r12
     820:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     824:	18 16       	cp	r1, r24
     826:	fc f0       	brlt	.+62     	; 0x866 <get_joystick_position+0xbe>
     828:	20 e0       	ldi	r18, 0x00	; 0
     82a:	30 e0       	ldi	r19, 0x00	; 0
     82c:	48 ec       	ldi	r20, 0xC8	; 200
     82e:	51 e4       	ldi	r21, 0x41	; 65
     830:	c7 01       	movw	r24, r14
     832:	b6 01       	movw	r22, r12
     834:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     838:	88 23       	and	r24, r24
     83a:	ac f0       	brlt	.+42     	; 0x866 <get_joystick_position+0xbe>
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	46 e9       	ldi	r20, 0x96	; 150
     842:	52 e4       	ldi	r21, 0x42	; 66
     844:	c5 01       	movw	r24, r10
     846:	b4 01       	movw	r22, r8
     848:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     84c:	18 16       	cp	r1, r24
     84e:	5c f0       	brlt	.+22     	; 0x866 <get_joystick_position+0xbe>
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	48 ec       	ldi	r20, 0xC8	; 200
     856:	51 e4       	ldi	r21, 0x41	; 65
     858:	c5 01       	movw	r24, r10
     85a:	b4 01       	movw	r22, r8
     85c:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     860:	88 23       	and	r24, r24
     862:	0c f0       	brlt	.+2      	; 0x866 <get_joystick_position+0xbe>
     864:	64 c0       	rjmp	.+200    	; 0x92e <get_joystick_position+0x186>
	{
		if(position->yNormalized > 50 && (position->xNormalized > 25 && position->xNormalized < 75))
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	48 e4       	ldi	r20, 0x48	; 72
     86c:	52 e4       	ldi	r21, 0x42	; 66
     86e:	c5 01       	movw	r24, r10
     870:	b4 01       	movw	r22, r8
     872:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     876:	18 16       	cp	r1, r24
     878:	bc f4       	brge	.+46     	; 0x8a8 <get_joystick_position+0x100>
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	30 e0       	ldi	r19, 0x00	; 0
     87e:	48 ec       	ldi	r20, 0xC8	; 200
     880:	51 e4       	ldi	r21, 0x41	; 65
     882:	c7 01       	movw	r24, r14
     884:	b6 01       	movw	r22, r12
     886:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     88a:	18 16       	cp	r1, r24
     88c:	6c f4       	brge	.+26     	; 0x8a8 <get_joystick_position+0x100>
     88e:	20 e0       	ldi	r18, 0x00	; 0
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	46 e9       	ldi	r20, 0x96	; 150
     894:	52 e4       	ldi	r21, 0x42	; 66
     896:	c7 01       	movw	r24, r14
     898:	b6 01       	movw	r22, r12
     89a:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     89e:	88 23       	and	r24, r24
     8a0:	1c f4       	brge	.+6      	; 0x8a8 <get_joystick_position+0x100>
		{
			position->position = UP;
     8a2:	82 e0       	ldi	r24, 0x02	; 2
     8a4:	88 8b       	std	Y+16, r24	; 0x10
     8a6:	43 c0       	rjmp	.+134    	; 0x92e <get_joystick_position+0x186>
		}
		else if(position->xNormalized < 50 && (position->yNormalized > 25 && position->yNormalized < 75))
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	48 e4       	ldi	r20, 0x48	; 72
     8ae:	52 e4       	ldi	r21, 0x42	; 66
     8b0:	c7 01       	movw	r24, r14
     8b2:	b6 01       	movw	r22, r12
     8b4:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     8b8:	88 23       	and	r24, r24
     8ba:	b4 f4       	brge	.+44     	; 0x8e8 <get_joystick_position+0x140>
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	48 ec       	ldi	r20, 0xC8	; 200
     8c2:	51 e4       	ldi	r21, 0x41	; 65
     8c4:	c5 01       	movw	r24, r10
     8c6:	b4 01       	movw	r22, r8
     8c8:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     8cc:	18 16       	cp	r1, r24
     8ce:	64 f4       	brge	.+24     	; 0x8e8 <get_joystick_position+0x140>
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	46 e9       	ldi	r20, 0x96	; 150
     8d6:	52 e4       	ldi	r21, 0x42	; 66
     8d8:	c5 01       	movw	r24, r10
     8da:	b4 01       	movw	r22, r8
     8dc:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     8e0:	88 23       	and	r24, r24
     8e2:	14 f4       	brge	.+4      	; 0x8e8 <get_joystick_position+0x140>
		{
			position->position = LEFT;
     8e4:	18 8a       	std	Y+16, r1	; 0x10
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <get_joystick_position+0x186>
		}
		else if(position->yNormalized < 50 && (position->xNormalized > 25 && position->xNormalized < 75))
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	48 e4       	ldi	r20, 0x48	; 72
     8ee:	52 e4       	ldi	r21, 0x42	; 66
     8f0:	c5 01       	movw	r24, r10
     8f2:	b4 01       	movw	r22, r8
     8f4:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     8f8:	88 23       	and	r24, r24
     8fa:	bc f4       	brge	.+46     	; 0x92a <get_joystick_position+0x182>
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	48 ec       	ldi	r20, 0xC8	; 200
     902:	51 e4       	ldi	r21, 0x41	; 65
     904:	c7 01       	movw	r24, r14
     906:	b6 01       	movw	r22, r12
     908:	0e 94 da 07 	call	0xfb4	; 0xfb4 <__gesf2>
     90c:	18 16       	cp	r1, r24
     90e:	6c f4       	brge	.+26     	; 0x92a <get_joystick_position+0x182>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	46 e9       	ldi	r20, 0x96	; 150
     916:	52 e4       	ldi	r21, 0x42	; 66
     918:	c7 01       	movw	r24, r14
     91a:	b6 01       	movw	r22, r12
     91c:	0e 94 74 07 	call	0xee8	; 0xee8 <__cmpsf2>
     920:	88 23       	and	r24, r24
     922:	1c f4       	brge	.+6      	; 0x92a <get_joystick_position+0x182>
		{
			position->position = DOWN;
     924:	83 e0       	ldi	r24, 0x03	; 3
     926:	88 8b       	std	Y+16, r24	; 0x10
     928:	02 c0       	rjmp	.+4      	; 0x92e <get_joystick_position+0x186>
			} else {
			position->position = RIGHT;
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	88 8b       	std	Y+16, r24	; 0x10
		}
	}
	
	
}
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	bf 90       	pop	r11
     93c:	af 90       	pop	r10
     93e:	9f 90       	pop	r9
     940:	8f 90       	pop	r8
     942:	08 95       	ret

00000944 <SRAM_test>:
void SRAM_test(void)
    {
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
        printf("Starting SRAM test...\n");
     950:	8a e0       	ldi	r24, 0x0A	; 10
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 c4 08 	call	0x1188	; 0x1188 <puts>
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
     958:	0e 94 53 08 	call	0x10a6	; 0x10a6 <rand>
     95c:	7c 01       	movw	r14, r24
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
     95e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <srand>
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     962:	c0 e0       	ldi	r28, 0x00	; 0
     964:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
     966:	00 e0       	ldi	r16, 0x00	; 0
     968:	10 e0       	ldi	r17, 0x00	; 0
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     96a:	20 c0       	rjmp	.+64     	; 0x9ac <SRAM_test+0x68>
            uint8_t some_value = rand();
     96c:	0e 94 53 08 	call	0x10a6	; 0x10a6 <rand>
            ext_ram[i] = some_value;
     970:	fe 01       	movw	r30, r28
     972:	f8 5e       	subi	r31, 0xE8	; 232
     974:	80 83       	st	Z, r24
            uint8_t retreived_value = ext_ram[i];
     976:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
     978:	28 17       	cp	r18, r24
     97a:	b9 f0       	breq	.+46     	; 0x9aa <SRAM_test+0x66>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     97c:	99 27       	eor	r25, r25
     97e:	9f 93       	push	r25
     980:	8f 93       	push	r24
     982:	1f 92       	push	r1
     984:	2f 93       	push	r18
     986:	df 93       	push	r29
     988:	cf 93       	push	r28
     98a:	80 e2       	ldi	r24, 0x20	; 32
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	9f 93       	push	r25
     990:	8f 93       	push	r24
     992:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
                write_errors++;
     996:	0f 5f       	subi	r16, 0xFF	; 255
     998:	1f 4f       	sbci	r17, 0xFF	; 255
     99a:	8d b7       	in	r24, 0x3d	; 61
     99c:	9e b7       	in	r25, 0x3e	; 62
     99e:	08 96       	adiw	r24, 0x08	; 8
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	f8 94       	cli
     9a4:	9e bf       	out	0x3e, r25	; 62
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	8d bf       	out	0x3d, r24	; 61
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     9aa:	21 96       	adiw	r28, 0x01	; 1
     9ac:	c1 15       	cp	r28, r1
     9ae:	98 e0       	ldi	r25, 0x08	; 8
     9b0:	d9 07       	cpc	r29, r25
     9b2:	e0 f2       	brcs	.-72     	; 0x96c <SRAM_test+0x28>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                write_errors++;
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
     9b4:	c7 01       	movw	r24, r14
     9b6:	0e 94 58 08 	call	0x10b0	; 0x10b0 <srand>
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     9ba:	c0 e0       	ldi	r28, 0x00	; 0
     9bc:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
     9be:	e1 2c       	mov	r14, r1
     9c0:	f1 2c       	mov	r15, r1
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     9c2:	20 c0       	rjmp	.+64     	; 0xa04 <SRAM_test+0xc0>
            uint8_t some_value = rand();
     9c4:	0e 94 53 08 	call	0x10a6	; 0x10a6 <rand>
            uint8_t retreived_value = ext_ram[i];
     9c8:	fe 01       	movw	r30, r28
     9ca:	f8 5e       	subi	r31, 0xE8	; 232
     9cc:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
     9ce:	28 17       	cp	r18, r24
     9d0:	c1 f0       	breq	.+48     	; 0xa02 <SRAM_test+0xbe>
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     9d2:	99 27       	eor	r25, r25
     9d4:	9f 93       	push	r25
     9d6:	8f 93       	push	r24
     9d8:	1f 92       	push	r1
     9da:	2f 93       	push	r18
     9dc:	df 93       	push	r29
     9de:	cf 93       	push	r28
     9e0:	89 e5       	ldi	r24, 0x59	; 89
     9e2:	91 e0       	ldi	r25, 0x01	; 1
     9e4:	9f 93       	push	r25
     9e6:	8f 93       	push	r24
     9e8:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
                retrieval_errors++;
     9ec:	8f ef       	ldi	r24, 0xFF	; 255
     9ee:	e8 1a       	sub	r14, r24
     9f0:	f8 0a       	sbc	r15, r24
     9f2:	8d b7       	in	r24, 0x3d	; 61
     9f4:	9e b7       	in	r25, 0x3e	; 62
     9f6:	08 96       	adiw	r24, 0x08	; 8
     9f8:	0f b6       	in	r0, 0x3f	; 63
     9fa:	f8 94       	cli
     9fc:	9e bf       	out	0x3e, r25	; 62
     9fe:	0f be       	out	0x3f, r0	; 63
     a00:	8d bf       	out	0x3d, r24	; 61
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     a02:	21 96       	adiw	r28, 0x01	; 1
     a04:	c1 15       	cp	r28, r1
     a06:	98 e0       	ldi	r25, 0x08	; 8
     a08:	d9 07       	cpc	r29, r25
     a0a:	e0 f2       	brcs	.-72     	; 0x9c4 <SRAM_test+0x80>
            if (retreived_value != some_value) {
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                retrieval_errors++;
            }
        }
        printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     a0c:	ff 92       	push	r15
     a0e:	ef 92       	push	r14
     a10:	1f 93       	push	r17
     a12:	0f 93       	push	r16
     a14:	86 e9       	ldi	r24, 0x96	; 150
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	9f 93       	push	r25
     a1a:	8f 93       	push	r24
     a1c:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	0f 90       	pop	r0
     a28:	0f 90       	pop	r0
     a2a:	0f 90       	pop	r0
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	ff 90       	pop	r15
     a36:	ef 90       	pop	r14
     a38:	08 95       	ret

00000a3a <main>:
struct ArrowPosition* ArrowPosition;
uint8_t InterruptFlag;

int main( void )
{
	USART_Init ( MYUBRR );
     a3a:	8f e1       	ldi	r24, 0x1F	; 31
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	0e 94 65 07 	call	0xeca	; 0xeca <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
     a42:	60 e7       	ldi	r22, 0x70	; 112
     a44:	77 e0       	ldi	r23, 0x07	; 7
     a46:	8c e6       	ldi	r24, 0x6C	; 108
     a48:	97 e0       	ldi	r25, 0x07	; 7
     a4a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <fdevopen>
	initPWM();
     a4e:	0e 94 7f 03 	call	0x6fe	; 0x6fe <initPWM>

	MCUCR |= (1 << SRE);
     a52:	85 b7       	in	r24, 0x35	; 53
     a54:	80 68       	ori	r24, 0x80	; 128
     a56:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(111 << XMM0);
     a58:	80 b7       	in	r24, 0x30	; 48
     a5a:	87 78       	andi	r24, 0x87	; 135
     a5c:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2);
     a5e:	80 b7       	in	r24, 0x30	; 48
     a60:	80 62       	ori	r24, 0x20	; 32
     a62:	80 bf       	out	0x30, r24	; 48
	
	EMCUCR |= (1 << SRW01) | (1 << SRW00);
     a64:	86 b7       	in	r24, 0x36	; 54
     a66:	8c 60       	ori	r24, 0x0C	; 12
     a68:	86 bf       	out	0x36, r24	; 54
	
	// Setup interups
	DDRD  = 0b11111011;   // set PD2 to input 
     a6a:	8b ef       	ldi	r24, 0xFB	; 251
     a6c:	81 bb       	out	0x11, r24	; 17
	GICR |= (1<<INT0);     // Enable INT0 External Interrupt
     a6e:	8b b7       	in	r24, 0x3b	; 59
     a70:	80 64       	ori	r24, 0x40	; 64
     a72:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1<<ISC01);   // Falling-Edge Triggered INT0
     a74:	85 b7       	in	r24, 0x35	; 53
     a76:	82 60       	ori	r24, 0x02	; 2
     a78:	85 bf       	out	0x35, r24	; 53
	sei();     // Enable Interrupts	setup_joystick();
     a7a:	78 94       	sei
	
	SRAM_test();
     a7c:	0e 94 a2 04 	call	0x944	; 0x944 <SRAM_test>
	setup_joystick();
     a80:	0e 94 a8 03 	call	0x750	; 0x750 <setup_joystick>
	
	InterruptFlag = 0;
     a84:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <InterruptFlag>
	
	struct joystickPosition* joystickPosition;
	
	OLED_init();
     a88:	0e 94 fe 05 	call	0xbfc	; 0xbfc <OLED_init>
	OLED_flush();
     a8c:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <OLED_flush>
	OLED_set_horizontal_mode();
     a90:	0e 94 7e 06 	call	0xcfc	; 0xcfc <OLED_set_horizontal_mode>
	OLED_reset_cursor();
     a94:	0e 94 63 06 	call	0xcc6	; 0xcc6 <OLED_reset_cursor>
	
	//char data[12] = "Hello world";
	//uint32_t length = sizeof(data)/sizeof(char);
	//OLED_write_string(&data, length);
	
	OLED_menu(ArrowPosition);
     a98:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <ArrowPosition>
     a9c:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <ArrowPosition+0x1>
     aa0:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <OLED_menu>
	ArrowPosition->row = PageStartGame;
     aa4:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <ArrowPosition>
     aa8:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <ArrowPosition+0x1>
     aac:	82 e0       	ldi	r24, 0x02	; 2
     aae:	80 83       	st	Z, r24
	ArrowPosition->collumn = MinCollum;
     ab0:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <ArrowPosition>
     ab4:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <ArrowPosition+0x1>
     ab8:	11 82       	std	Z+1, r1	; 0x01
	ArrowPositionNumber = PageStartGame;
     aba:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <ArrowPositionNumber>
	OLED_print_arrow(ArrowPosition->collumn, ArrowPosition->row);
     abe:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <ArrowPosition>
     ac2:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <ArrowPosition+0x1>
     ac6:	60 81       	ld	r22, Z
     ac8:	81 81       	ldd	r24, Z+1	; 0x01
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	0e 94 2a 07 	call	0xe54	; 0xe54 <OLED_print_arrow>
	

	while(1){
		//adc_read();
		// _delay_ms(100);
		get_joystick_position(joystickPosition);
     ad2:	c0 e0       	ldi	r28, 0x00	; 0
     ad4:	d0 e0       	ldi	r29, 0x00	; 0
     ad6:	ce 01       	movw	r24, r28
     ad8:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <get_joystick_position>
		//_delay_us(100);
		//printf("%d\r\n", joystickPosition->position);
		// OLED_set_arrow_line(ArrowPosition, PageSettings);

		printf("Row1: %d\r\n", ArrowPositionNumber);
     adc:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <ArrowPositionNumber>
     ae0:	1f 92       	push	r1
     ae2:	8f 93       	push	r24
     ae4:	8f ee       	ldi	r24, 0xEF	; 239
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	9f 93       	push	r25
     aea:	8f 93       	push	r24
     aec:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
		
		if (joystickPosition->position == 3){ //DOWN
     af0:	88 89       	ldd	r24, Y+16	; 0x10
     af2:	0f 90       	pop	r0
     af4:	0f 90       	pop	r0
     af6:	0f 90       	pop	r0
     af8:	0f 90       	pop	r0
     afa:	83 30       	cpi	r24, 0x03	; 3
     afc:	d1 f4       	brne	.+52     	; 0xb32 <main+0xf8>
			OLED_set_arrow_line(ArrowPosition, PageSettings);
     afe:	64 e0       	ldi	r22, 0x04	; 4
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <ArrowPosition>
     b06:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <ArrowPosition+0x1>
     b0a:	0e 94 3f 07 	call	0xe7e	; 0xe7e <OLED_set_arrow_line>
			printf("Row: %d\r\n", ArrowPosition->row);
     b0e:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <ArrowPosition>
     b12:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <ArrowPosition+0x1>
     b16:	80 81       	ld	r24, Z
     b18:	1f 92       	push	r1
     b1a:	8f 93       	push	r24
     b1c:	8a ef       	ldi	r24, 0xFA	; 250
     b1e:	91 e0       	ldi	r25, 0x01	; 1
     b20:	9f 93       	push	r25
     b22:	8f 93       	push	r24
     b24:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
     b28:	0f 90       	pop	r0
     b2a:	0f 90       	pop	r0
     b2c:	0f 90       	pop	r0
     b2e:	0f 90       	pop	r0
     b30:	1b c0       	rjmp	.+54     	; 0xb68 <main+0x12e>
		}
		else if (joystickPosition->position == 2){ //UP
     b32:	82 30       	cpi	r24, 0x02	; 2
     b34:	c9 f4       	brne	.+50     	; 0xb68 <main+0x12e>
			OLED_set_arrow_line(ArrowPosition, PageStartGame);
     b36:	62 e0       	ldi	r22, 0x02	; 2
     b38:	70 e0       	ldi	r23, 0x00	; 0
     b3a:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <ArrowPosition>
     b3e:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <ArrowPosition+0x1>
     b42:	0e 94 3f 07 	call	0xe7e	; 0xe7e <OLED_set_arrow_line>
			printf("Row: %d\r\n", ArrowPosition->row);
     b46:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <ArrowPosition>
     b4a:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <ArrowPosition+0x1>
     b4e:	80 81       	ld	r24, Z
     b50:	1f 92       	push	r1
     b52:	8f 93       	push	r24
     b54:	8a ef       	ldi	r24, 0xFA	; 250
     b56:	91 e0       	ldi	r25, 0x01	; 1
     b58:	9f 93       	push	r25
     b5a:	8f 93       	push	r24
     b5c:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
     b60:	0f 90       	pop	r0
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	0f 90       	pop	r0
		}
		printf("RowO: %d\r\n", ArrowPositionNumber);
     b68:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <ArrowPositionNumber>
     b6c:	1f 92       	push	r1
     b6e:	8f 93       	push	r24
     b70:	84 e0       	ldi	r24, 0x04	; 4
     b72:	92 e0       	ldi	r25, 0x02	; 2
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
		LocalInterruptFlag = InterruptFlag;
     b7c:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <InterruptFlag>
		if (LocalInterruptFlag){
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	0f 90       	pop	r0
     b88:	88 23       	and	r24, r24
     b8a:	09 f4       	brne	.+2      	; 0xb8e <main+0x154>
     b8c:	a2 cf       	rjmp	.-188    	; 0xad2 <main+0x98>
			printf("Interrupt: %d \r\n", ArrowPositionNumber);
     b8e:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <ArrowPositionNumber>
     b92:	1f 92       	push	r1
     b94:	8f 93       	push	r24
     b96:	8f e0       	ldi	r24, 0x0F	; 15
     b98:	92 e0       	ldi	r25, 0x02	; 2
     b9a:	9f 93       	push	r25
     b9c:	8f 93       	push	r24
     b9e:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
			OLED_page_selector(ArrowPosition);
     ba2:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <ArrowPosition>
     ba6:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <ArrowPosition+0x1>
     baa:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_page_selector>
			InterruptFlag = 0;
     bae:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <InterruptFlag>
     bb2:	0f 90       	pop	r0
     bb4:	0f 90       	pop	r0
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	8b cf       	rjmp	.-234    	; 0xad2 <main+0x98>

00000bbc <__vector_1>:
	*/
}


ISR(INT0_vect) 
{
     bbc:	1f 92       	push	r1
     bbe:	0f 92       	push	r0
     bc0:	0f b6       	in	r0, 0x3f	; 63
     bc2:	0f 92       	push	r0
     bc4:	11 24       	eor	r1, r1
     bc6:	8f 93       	push	r24
	 GIFR&= ~(1<<INTF0);
     bc8:	8a b7       	in	r24, 0x3a	; 58
     bca:	8f 7b       	andi	r24, 0xBF	; 191
     bcc:	8a bf       	out	0x3a, r24	; 58
	 InterruptFlag = 1;
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <InterruptFlag>
}
     bd4:	8f 91       	pop	r24
     bd6:	0f 90       	pop	r0
     bd8:	0f be       	out	0x3f, r0	; 63
     bda:	0f 90       	pop	r0
     bdc:	1f 90       	pop	r1
     bde:	18 95       	reti

00000be0 <OLED_write_data>:
	OLED_set_cursor(collum, 127, row, 0x07);
	OLED_write_data (0x00);
	OLED_write_data (0x00);
	OLED_write_data (0x00);
	OLED_write_data (0x00);
	OLED_write_data (0x00);
     be0:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfa0>
     be4:	81 e2       	ldi	r24, 0x21	; 33
     be6:	8a 95       	dec	r24
     be8:	f1 f7       	brne	.-4      	; 0xbe6 <OLED_write_data+0x6>
     bea:	00 00       	nop
     bec:	08 95       	ret

00000bee <OLED_write_command>:
     bee:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xda0>
     bf2:	81 e2       	ldi	r24, 0x21	; 33
     bf4:	8a 95       	dec	r24
     bf6:	f1 f7       	brne	.-4      	; 0xbf4 <OLED_write_command+0x6>
     bf8:	00 00       	nop
     bfa:	08 95       	ret

00000bfc <OLED_init>:
     bfc:	8e ea       	ldi	r24, 0xAE	; 174
     bfe:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c02:	81 ea       	ldi	r24, 0xA1	; 161
     c04:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c08:	8a ed       	ldi	r24, 0xDA	; 218
     c0a:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c0e:	82 e1       	ldi	r24, 0x12	; 18
     c10:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c14:	88 ec       	ldi	r24, 0xC8	; 200
     c16:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c1a:	88 ea       	ldi	r24, 0xA8	; 168
     c1c:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c20:	8f e3       	ldi	r24, 0x3F	; 63
     c22:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c26:	85 ed       	ldi	r24, 0xD5	; 213
     c28:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c2c:	80 e8       	ldi	r24, 0x80	; 128
     c2e:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c32:	81 e8       	ldi	r24, 0x81	; 129
     c34:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c38:	80 e5       	ldi	r24, 0x50	; 80
     c3a:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c3e:	89 ed       	ldi	r24, 0xD9	; 217
     c40:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c44:	81 e2       	ldi	r24, 0x21	; 33
     c46:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c4a:	80 e2       	ldi	r24, 0x20	; 32
     c4c:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c5c:	8b ed       	ldi	r24, 0xDB	; 219
     c5e:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c62:	80 e3       	ldi	r24, 0x30	; 48
     c64:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c68:	8d ea       	ldi	r24, 0xAD	; 173
     c6a:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c74:	84 ea       	ldi	r24, 0xA4	; 164
     c76:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c7a:	86 ea       	ldi	r24, 0xA6	; 166
     c7c:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c80:	8f ea       	ldi	r24, 0xAF	; 175
     c82:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c86:	08 95       	ret

00000c88 <OLED_set_cursor>:
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	08 2f       	mov	r16, r24
     c92:	16 2f       	mov	r17, r22
     c94:	d4 2f       	mov	r29, r20
     c96:	c2 2f       	mov	r28, r18
     c98:	81 e2       	ldi	r24, 0x21	; 33
     c9a:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     c9e:	80 2f       	mov	r24, r16
     ca0:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     ca4:	81 2f       	mov	r24, r17
     ca6:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     caa:	82 e2       	ldi	r24, 0x22	; 34
     cac:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     cb0:	8d 2f       	mov	r24, r29
     cb2:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     cb6:	8c 2f       	mov	r24, r28
     cb8:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     cbc:	df 91       	pop	r29
     cbe:	cf 91       	pop	r28
     cc0:	1f 91       	pop	r17
     cc2:	0f 91       	pop	r16
     cc4:	08 95       	ret

00000cc6 <OLED_reset_cursor>:
     cc6:	27 e0       	ldi	r18, 0x07	; 7
     cc8:	40 e0       	ldi	r20, 0x00	; 0
     cca:	6f e7       	ldi	r22, 0x7F	; 127
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_set_cursor>
     cd2:	08 95       	ret

00000cd4 <OLED_flush>:
     cd4:	cf 93       	push	r28
     cd6:	df 93       	push	r29
     cd8:	0e 94 63 06 	call	0xcc6	; 0xcc6 <OLED_reset_cursor>
     cdc:	c0 e0       	ldi	r28, 0x00	; 0
     cde:	d0 e0       	ldi	r29, 0x00	; 0
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <OLED_flush+0x16>
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     ce8:	21 96       	adiw	r28, 0x01	; 1
     cea:	c1 15       	cp	r28, r1
     cec:	84 e0       	ldi	r24, 0x04	; 4
     cee:	d8 07       	cpc	r29, r24
     cf0:	c4 f3       	brlt	.-16     	; 0xce2 <OLED_flush+0xe>
     cf2:	0e 94 63 06 	call	0xcc6	; 0xcc6 <OLED_reset_cursor>
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	08 95       	ret

00000cfc <OLED_set_horizontal_mode>:
     cfc:	80 e2       	ldi	r24, 0x20	; 32
     cfe:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	0e 94 f7 05 	call	0xbee	; 0xbee <OLED_write_command>
     d08:	08 95       	ret

00000d0a <OLED_write_string>:
     d0a:	8f 92       	push	r8
     d0c:	9f 92       	push	r9
     d0e:	af 92       	push	r10
     d10:	bf 92       	push	r11
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	7c 01       	movw	r14, r24
     d22:	4a 01       	movw	r8, r20
     d24:	5b 01       	movw	r10, r22
     d26:	d2 2e       	mov	r13, r18
     d28:	00 e0       	ldi	r16, 0x00	; 0
     d2a:	10 e0       	ldi	r17, 0x00	; 0
     d2c:	4b c0       	rjmp	.+150    	; 0xdc4 <OLED_write_string+0xba>
     d2e:	85 e0       	ldi	r24, 0x05	; 5
     d30:	d8 16       	cp	r13, r24
     d32:	a9 f0       	breq	.+42     	; 0xd5e <OLED_write_string+0x54>
     d34:	88 e0       	ldi	r24, 0x08	; 8
     d36:	d8 12       	cpse	r13, r24
     d38:	25 c0       	rjmp	.+74     	; 0xd84 <OLED_write_string+0x7a>
     d3a:	f7 01       	movw	r30, r14
     d3c:	e0 0f       	add	r30, r16
     d3e:	f1 1f       	adc	r31, r17
     d40:	e0 81       	ld	r30, Z
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	b0 97       	sbiw	r30, 0x20	; 32
     d46:	ee 0f       	add	r30, r30
     d48:	ff 1f       	adc	r31, r31
     d4a:	ee 0f       	add	r30, r30
     d4c:	ff 1f       	adc	r31, r31
     d4e:	ee 0f       	add	r30, r30
     d50:	ff 1f       	adc	r31, r31
     d52:	ec 0f       	add	r30, r28
     d54:	fd 1f       	adc	r31, r29
     d56:	e9 53       	subi	r30, 0x39	; 57
     d58:	fc 4f       	sbci	r31, 0xFC	; 252
     d5a:	84 91       	lpm	r24, Z
     d5c:	22 c0       	rjmp	.+68     	; 0xda2 <OLED_write_string+0x98>
     d5e:	f7 01       	movw	r30, r14
     d60:	e0 0f       	add	r30, r16
     d62:	f1 1f       	adc	r31, r17
     d64:	80 81       	ld	r24, Z
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	80 97       	sbiw	r24, 0x20	; 32
     d6a:	fc 01       	movw	r30, r24
     d6c:	ee 0f       	add	r30, r30
     d6e:	ff 1f       	adc	r31, r31
     d70:	ee 0f       	add	r30, r30
     d72:	ff 1f       	adc	r31, r31
     d74:	e8 0f       	add	r30, r24
     d76:	f9 1f       	adc	r31, r25
     d78:	ec 0f       	add	r30, r28
     d7a:	fd 1f       	adc	r31, r29
     d7c:	e4 51       	subi	r30, 0x14	; 20
     d7e:	fe 4f       	sbci	r31, 0xFE	; 254
     d80:	84 91       	lpm	r24, Z
     d82:	0f c0       	rjmp	.+30     	; 0xda2 <OLED_write_string+0x98>
     d84:	f7 01       	movw	r30, r14
     d86:	e0 0f       	add	r30, r16
     d88:	f1 1f       	adc	r31, r17
     d8a:	e0 81       	ld	r30, Z
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	b0 97       	sbiw	r30, 0x20	; 32
     d90:	ee 0f       	add	r30, r30
     d92:	ff 1f       	adc	r31, r31
     d94:	ee 0f       	add	r30, r30
     d96:	ff 1f       	adc	r31, r31
     d98:	ec 0f       	add	r30, r28
     d9a:	fd 1f       	adc	r31, r29
     d9c:	e0 59       	subi	r30, 0x90	; 144
     d9e:	ff 4f       	sbci	r31, 0xFF	; 255
     da0:	84 91       	lpm	r24, Z
     da2:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     da6:	21 96       	adiw	r28, 0x01	; 1
     da8:	02 c0       	rjmp	.+4      	; 0xdae <OLED_write_string+0xa4>
     daa:	c0 e0       	ldi	r28, 0x00	; 0
     dac:	d0 e0       	ldi	r29, 0x00	; 0
     dae:	8d 2d       	mov	r24, r13
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	c8 17       	cp	r28, r24
     db4:	d9 07       	cpc	r29, r25
     db6:	0c f4       	brge	.+2      	; 0xdba <OLED_write_string+0xb0>
     db8:	ba cf       	rjmp	.-140    	; 0xd2e <OLED_write_string+0x24>
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     dc0:	0f 5f       	subi	r16, 0xFF	; 255
     dc2:	1f 4f       	sbci	r17, 0xFF	; 255
     dc4:	c8 01       	movw	r24, r16
     dc6:	01 2e       	mov	r0, r17
     dc8:	00 0c       	add	r0, r0
     dca:	aa 0b       	sbc	r26, r26
     dcc:	bb 0b       	sbc	r27, r27
     dce:	88 15       	cp	r24, r8
     dd0:	99 05       	cpc	r25, r9
     dd2:	aa 05       	cpc	r26, r10
     dd4:	bb 05       	cpc	r27, r11
     dd6:	48 f3       	brcs	.-46     	; 0xdaa <OLED_write_string+0xa0>
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0f 91       	pop	r16
     de0:	ff 90       	pop	r15
     de2:	ef 90       	pop	r14
     de4:	df 90       	pop	r13
     de6:	bf 90       	pop	r11
     de8:	af 90       	pop	r10
     dea:	9f 90       	pop	r9
     dec:	8f 90       	pop	r8
     dee:	08 95       	ret

00000df0 <OLED_menu>:
     df0:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <OLED_flush>
     df4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <OLED_reset_cursor>
     df8:	27 e0       	ldi	r18, 0x07	; 7
     dfa:	40 e0       	ldi	r20, 0x00	; 0
     dfc:	6f e7       	ldi	r22, 0x7F	; 127
     dfe:	88 e0       	ldi	r24, 0x08	; 8
     e00:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_set_cursor>
     e04:	28 e0       	ldi	r18, 0x08	; 8
     e06:	44 e0       	ldi	r20, 0x04	; 4
     e08:	50 e0       	ldi	r21, 0x00	; 0
     e0a:	60 e0       	ldi	r22, 0x00	; 0
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	80 e2       	ldi	r24, 0x20	; 32
     e10:	92 e0       	ldi	r25, 0x02	; 2
     e12:	0e 94 85 06 	call	0xd0a	; 0xd0a <OLED_write_string>
     e16:	27 e0       	ldi	r18, 0x07	; 7
     e18:	42 e0       	ldi	r20, 0x02	; 2
     e1a:	6f e7       	ldi	r22, 0x7F	; 127
     e1c:	88 e0       	ldi	r24, 0x08	; 8
     e1e:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_set_cursor>
     e22:	25 e0       	ldi	r18, 0x05	; 5
     e24:	4a e0       	ldi	r20, 0x0A	; 10
     e26:	50 e0       	ldi	r21, 0x00	; 0
     e28:	60 e0       	ldi	r22, 0x00	; 0
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	85 e2       	ldi	r24, 0x25	; 37
     e2e:	92 e0       	ldi	r25, 0x02	; 2
     e30:	0e 94 85 06 	call	0xd0a	; 0xd0a <OLED_write_string>
     e34:	27 e0       	ldi	r18, 0x07	; 7
     e36:	44 e0       	ldi	r20, 0x04	; 4
     e38:	6f e7       	ldi	r22, 0x7F	; 127
     e3a:	88 e0       	ldi	r24, 0x08	; 8
     e3c:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_set_cursor>
     e40:	25 e0       	ldi	r18, 0x05	; 5
     e42:	48 e0       	ldi	r20, 0x08	; 8
     e44:	50 e0       	ldi	r21, 0x00	; 0
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	80 e3       	ldi	r24, 0x30	; 48
     e4c:	92 e0       	ldi	r25, 0x02	; 2
     e4e:	0e 94 85 06 	call	0xd0a	; 0xd0a <OLED_write_string>
     e52:	08 95       	ret

00000e54 <OLED_print_arrow>:
     e54:	46 2f       	mov	r20, r22
     e56:	27 e0       	ldi	r18, 0x07	; 7
     e58:	6f e7       	ldi	r22, 0x7F	; 127
     e5a:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_set_cursor>
     e5e:	88 e1       	ldi	r24, 0x18	; 24
     e60:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     e64:	88 e1       	ldi	r24, 0x18	; 24
     e66:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     e6a:	8e e7       	ldi	r24, 0x7E	; 126
     e6c:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     e70:	8c e3       	ldi	r24, 0x3C	; 60
     e72:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     e76:	88 e1       	ldi	r24, 0x18	; 24
     e78:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <OLED_write_data>
     e7c:	08 95       	ret

00000e7e <OLED_set_arrow_line>:
}



void OLED_set_arrow_line(struct ArrowPosition* ArrowPosition, uint8_t arrow_row){
     e7e:	0f 93       	push	r16
     e80:	1f 93       	push	r17
     e82:	cf 93       	push	r28
     e84:	8c 01       	movw	r16, r24
     e86:	c6 2f       	mov	r28, r22
	//OLED_clear_arrow(ArrowPosition->collumn, ArrowPosition->row);
	OLED_flush();
     e88:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <OLED_flush>
	OLED_menu(ArrowPosition);
     e8c:	c8 01       	movw	r24, r16
     e8e:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <OLED_menu>
	OLED_print_arrow(ArrowPosition->collumn, arrow_row);
     e92:	6c 2f       	mov	r22, r28
     e94:	f8 01       	movw	r30, r16
     e96:	81 81       	ldd	r24, Z+1	; 0x01
     e98:	0e 94 2a 07 	call	0xe54	; 0xe54 <OLED_print_arrow>
	ArrowPosition->row = arrow_row;
     e9c:	f8 01       	movw	r30, r16
     e9e:	c0 83       	st	Z, r28
	ArrowPositionNumber = arrow_row;
     ea0:	c0 93 52 02 	sts	0x0252, r28	; 0x800252 <ArrowPositionNumber>
	
	
}
     ea4:	cf 91       	pop	r28
     ea6:	1f 91       	pop	r17
     ea8:	0f 91       	pop	r16
     eaa:	08 95       	ret

00000eac <OLED_page_selector>:

void OLED_page_selector(struct ArrowPosition* ArrowPosition){
	printf("%u row is selected \r\n", ArrowPositionNumber);
     eac:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <ArrowPositionNumber>
     eb0:	1f 92       	push	r1
     eb2:	8f 93       	push	r24
     eb4:	89 e3       	ldi	r24, 0x39	; 57
     eb6:	92 e0       	ldi	r25, 0x02	; 2
     eb8:	9f 93       	push	r25
     eba:	8f 93       	push	r24
     ebc:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
     ec0:	0f 90       	pop	r0
     ec2:	0f 90       	pop	r0
     ec4:	0f 90       	pop	r0
     ec6:	0f 90       	pop	r0
     ec8:	08 95       	ret

00000eca <USART_Init>:
#include "USART.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     eca:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     ecc:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     ece:	88 e1       	ldi	r24, 0x18	; 24
     ed0:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     ed2:	8e e8       	ldi	r24, 0x8E	; 142
     ed4:	80 bd       	out	0x20, r24	; 32
     ed6:	08 95       	ret

00000ed8 <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     ed8:	5d 9b       	sbis	0x0b, 5	; 11
     eda:	fe cf       	rjmp	.-4      	; 0xed8 <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     edc:	8c b9       	out	0x0c, r24	; 12
     ede:	08 95       	ret

00000ee0 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
     ee0:	5f 9b       	sbis	0x0b, 7	; 11
     ee2:	fe cf       	rjmp	.-4      	; 0xee0 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
     ee4:	8c b1       	in	r24, 0x0c	; 12
}
     ee6:	08 95       	ret

00000ee8 <__cmpsf2>:
     ee8:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__fp_cmp>
     eec:	08 f4       	brcc	.+2      	; 0xef0 <__cmpsf2+0x8>
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	08 95       	ret

00000ef2 <__floatunsisf>:
     ef2:	e8 94       	clt
     ef4:	09 c0       	rjmp	.+18     	; 0xf08 <__floatsisf+0x12>

00000ef6 <__floatsisf>:
     ef6:	97 fb       	bst	r25, 7
     ef8:	3e f4       	brtc	.+14     	; 0xf08 <__floatsisf+0x12>
     efa:	90 95       	com	r25
     efc:	80 95       	com	r24
     efe:	70 95       	com	r23
     f00:	61 95       	neg	r22
     f02:	7f 4f       	sbci	r23, 0xFF	; 255
     f04:	8f 4f       	sbci	r24, 0xFF	; 255
     f06:	9f 4f       	sbci	r25, 0xFF	; 255
     f08:	99 23       	and	r25, r25
     f0a:	a9 f0       	breq	.+42     	; 0xf36 <__floatsisf+0x40>
     f0c:	f9 2f       	mov	r31, r25
     f0e:	96 e9       	ldi	r25, 0x96	; 150
     f10:	bb 27       	eor	r27, r27
     f12:	93 95       	inc	r25
     f14:	f6 95       	lsr	r31
     f16:	87 95       	ror	r24
     f18:	77 95       	ror	r23
     f1a:	67 95       	ror	r22
     f1c:	b7 95       	ror	r27
     f1e:	f1 11       	cpse	r31, r1
     f20:	f8 cf       	rjmp	.-16     	; 0xf12 <__floatsisf+0x1c>
     f22:	fa f4       	brpl	.+62     	; 0xf62 <__floatsisf+0x6c>
     f24:	bb 0f       	add	r27, r27
     f26:	11 f4       	brne	.+4      	; 0xf2c <__floatsisf+0x36>
     f28:	60 ff       	sbrs	r22, 0
     f2a:	1b c0       	rjmp	.+54     	; 0xf62 <__floatsisf+0x6c>
     f2c:	6f 5f       	subi	r22, 0xFF	; 255
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	8f 4f       	sbci	r24, 0xFF	; 255
     f32:	9f 4f       	sbci	r25, 0xFF	; 255
     f34:	16 c0       	rjmp	.+44     	; 0xf62 <__floatsisf+0x6c>
     f36:	88 23       	and	r24, r24
     f38:	11 f0       	breq	.+4      	; 0xf3e <__floatsisf+0x48>
     f3a:	96 e9       	ldi	r25, 0x96	; 150
     f3c:	11 c0       	rjmp	.+34     	; 0xf60 <__floatsisf+0x6a>
     f3e:	77 23       	and	r23, r23
     f40:	21 f0       	breq	.+8      	; 0xf4a <__floatsisf+0x54>
     f42:	9e e8       	ldi	r25, 0x8E	; 142
     f44:	87 2f       	mov	r24, r23
     f46:	76 2f       	mov	r23, r22
     f48:	05 c0       	rjmp	.+10     	; 0xf54 <__floatsisf+0x5e>
     f4a:	66 23       	and	r22, r22
     f4c:	71 f0       	breq	.+28     	; 0xf6a <__floatsisf+0x74>
     f4e:	96 e8       	ldi	r25, 0x86	; 134
     f50:	86 2f       	mov	r24, r22
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	2a f0       	brmi	.+10     	; 0xf62 <__floatsisf+0x6c>
     f58:	9a 95       	dec	r25
     f5a:	66 0f       	add	r22, r22
     f5c:	77 1f       	adc	r23, r23
     f5e:	88 1f       	adc	r24, r24
     f60:	da f7       	brpl	.-10     	; 0xf58 <__floatsisf+0x62>
     f62:	88 0f       	add	r24, r24
     f64:	96 95       	lsr	r25
     f66:	87 95       	ror	r24
     f68:	97 f9       	bld	r25, 7
     f6a:	08 95       	ret

00000f6c <__fp_cmp>:
     f6c:	99 0f       	add	r25, r25
     f6e:	00 08       	sbc	r0, r0
     f70:	55 0f       	add	r21, r21
     f72:	aa 0b       	sbc	r26, r26
     f74:	e0 e8       	ldi	r30, 0x80	; 128
     f76:	fe ef       	ldi	r31, 0xFE	; 254
     f78:	16 16       	cp	r1, r22
     f7a:	17 06       	cpc	r1, r23
     f7c:	e8 07       	cpc	r30, r24
     f7e:	f9 07       	cpc	r31, r25
     f80:	c0 f0       	brcs	.+48     	; 0xfb2 <__fp_cmp+0x46>
     f82:	12 16       	cp	r1, r18
     f84:	13 06       	cpc	r1, r19
     f86:	e4 07       	cpc	r30, r20
     f88:	f5 07       	cpc	r31, r21
     f8a:	98 f0       	brcs	.+38     	; 0xfb2 <__fp_cmp+0x46>
     f8c:	62 1b       	sub	r22, r18
     f8e:	73 0b       	sbc	r23, r19
     f90:	84 0b       	sbc	r24, r20
     f92:	95 0b       	sbc	r25, r21
     f94:	39 f4       	brne	.+14     	; 0xfa4 <__fp_cmp+0x38>
     f96:	0a 26       	eor	r0, r26
     f98:	61 f0       	breq	.+24     	; 0xfb2 <__fp_cmp+0x46>
     f9a:	23 2b       	or	r18, r19
     f9c:	24 2b       	or	r18, r20
     f9e:	25 2b       	or	r18, r21
     fa0:	21 f4       	brne	.+8      	; 0xfaa <__fp_cmp+0x3e>
     fa2:	08 95       	ret
     fa4:	0a 26       	eor	r0, r26
     fa6:	09 f4       	brne	.+2      	; 0xfaa <__fp_cmp+0x3e>
     fa8:	a1 40       	sbci	r26, 0x01	; 1
     faa:	a6 95       	lsr	r26
     fac:	8f ef       	ldi	r24, 0xFF	; 255
     fae:	81 1d       	adc	r24, r1
     fb0:	81 1d       	adc	r24, r1
     fb2:	08 95       	ret

00000fb4 <__gesf2>:
     fb4:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__fp_cmp>
     fb8:	08 f4       	brcc	.+2      	; 0xfbc <__gesf2+0x8>
     fba:	8f ef       	ldi	r24, 0xFF	; 255
     fbc:	08 95       	ret

00000fbe <__divmodhi4>:
     fbe:	97 fb       	bst	r25, 7
     fc0:	07 2e       	mov	r0, r23
     fc2:	16 f4       	brtc	.+4      	; 0xfc8 <__divmodhi4+0xa>
     fc4:	00 94       	com	r0
     fc6:	07 d0       	rcall	.+14     	; 0xfd6 <__divmodhi4_neg1>
     fc8:	77 fd       	sbrc	r23, 7
     fca:	09 d0       	rcall	.+18     	; 0xfde <__divmodhi4_neg2>
     fcc:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__udivmodhi4>
     fd0:	07 fc       	sbrc	r0, 7
     fd2:	05 d0       	rcall	.+10     	; 0xfde <__divmodhi4_neg2>
     fd4:	3e f4       	brtc	.+14     	; 0xfe4 <__divmodhi4_exit>

00000fd6 <__divmodhi4_neg1>:
     fd6:	90 95       	com	r25
     fd8:	81 95       	neg	r24
     fda:	9f 4f       	sbci	r25, 0xFF	; 255
     fdc:	08 95       	ret

00000fde <__divmodhi4_neg2>:
     fde:	70 95       	com	r23
     fe0:	61 95       	neg	r22
     fe2:	7f 4f       	sbci	r23, 0xFF	; 255

00000fe4 <__divmodhi4_exit>:
     fe4:	08 95       	ret

00000fe6 <__udivmodhi4>:
     fe6:	aa 1b       	sub	r26, r26
     fe8:	bb 1b       	sub	r27, r27
     fea:	51 e1       	ldi	r21, 0x11	; 17
     fec:	07 c0       	rjmp	.+14     	; 0xffc <__udivmodhi4_ep>

00000fee <__udivmodhi4_loop>:
     fee:	aa 1f       	adc	r26, r26
     ff0:	bb 1f       	adc	r27, r27
     ff2:	a6 17       	cp	r26, r22
     ff4:	b7 07       	cpc	r27, r23
     ff6:	10 f0       	brcs	.+4      	; 0xffc <__udivmodhi4_ep>
     ff8:	a6 1b       	sub	r26, r22
     ffa:	b7 0b       	sbc	r27, r23

00000ffc <__udivmodhi4_ep>:
     ffc:	88 1f       	adc	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	5a 95       	dec	r21
    1002:	a9 f7       	brne	.-22     	; 0xfee <__udivmodhi4_loop>
    1004:	80 95       	com	r24
    1006:	90 95       	com	r25
    1008:	bc 01       	movw	r22, r24
    100a:	cd 01       	movw	r24, r26
    100c:	08 95       	ret

0000100e <do_rand>:
    100e:	8f 92       	push	r8
    1010:	9f 92       	push	r9
    1012:	af 92       	push	r10
    1014:	bf 92       	push	r11
    1016:	cf 92       	push	r12
    1018:	df 92       	push	r13
    101a:	ef 92       	push	r14
    101c:	ff 92       	push	r15
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	ec 01       	movw	r28, r24
    1024:	68 81       	ld	r22, Y
    1026:	79 81       	ldd	r23, Y+1	; 0x01
    1028:	8a 81       	ldd	r24, Y+2	; 0x02
    102a:	9b 81       	ldd	r25, Y+3	; 0x03
    102c:	61 15       	cp	r22, r1
    102e:	71 05       	cpc	r23, r1
    1030:	81 05       	cpc	r24, r1
    1032:	91 05       	cpc	r25, r1
    1034:	21 f4       	brne	.+8      	; 0x103e <do_rand+0x30>
    1036:	64 e2       	ldi	r22, 0x24	; 36
    1038:	79 ed       	ldi	r23, 0xD9	; 217
    103a:	8b e5       	ldi	r24, 0x5B	; 91
    103c:	97 e0       	ldi	r25, 0x07	; 7
    103e:	2d e1       	ldi	r18, 0x1D	; 29
    1040:	33 ef       	ldi	r19, 0xF3	; 243
    1042:	41 e0       	ldi	r20, 0x01	; 1
    1044:	50 e0       	ldi	r21, 0x00	; 0
    1046:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__divmodsi4>
    104a:	49 01       	movw	r8, r18
    104c:	5a 01       	movw	r10, r20
    104e:	9b 01       	movw	r18, r22
    1050:	ac 01       	movw	r20, r24
    1052:	a7 ea       	ldi	r26, 0xA7	; 167
    1054:	b1 e4       	ldi	r27, 0x41	; 65
    1056:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__muluhisi3>
    105a:	6b 01       	movw	r12, r22
    105c:	7c 01       	movw	r14, r24
    105e:	ac ee       	ldi	r26, 0xEC	; 236
    1060:	b4 ef       	ldi	r27, 0xF4	; 244
    1062:	a5 01       	movw	r20, r10
    1064:	94 01       	movw	r18, r8
    1066:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__mulohisi3>
    106a:	dc 01       	movw	r26, r24
    106c:	cb 01       	movw	r24, r22
    106e:	8c 0d       	add	r24, r12
    1070:	9d 1d       	adc	r25, r13
    1072:	ae 1d       	adc	r26, r14
    1074:	bf 1d       	adc	r27, r15
    1076:	b7 ff       	sbrs	r27, 7
    1078:	03 c0       	rjmp	.+6      	; 0x1080 <do_rand+0x72>
    107a:	01 97       	sbiw	r24, 0x01	; 1
    107c:	a1 09       	sbc	r26, r1
    107e:	b0 48       	sbci	r27, 0x80	; 128
    1080:	88 83       	st	Y, r24
    1082:	99 83       	std	Y+1, r25	; 0x01
    1084:	aa 83       	std	Y+2, r26	; 0x02
    1086:	bb 83       	std	Y+3, r27	; 0x03
    1088:	9f 77       	andi	r25, 0x7F	; 127
    108a:	df 91       	pop	r29
    108c:	cf 91       	pop	r28
    108e:	ff 90       	pop	r15
    1090:	ef 90       	pop	r14
    1092:	df 90       	pop	r13
    1094:	cf 90       	pop	r12
    1096:	bf 90       	pop	r11
    1098:	af 90       	pop	r10
    109a:	9f 90       	pop	r9
    109c:	8f 90       	pop	r8
    109e:	08 95       	ret

000010a0 <rand_r>:
    10a0:	0e 94 07 08 	call	0x100e	; 0x100e <do_rand>
    10a4:	08 95       	ret

000010a6 <rand>:
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	91 e0       	ldi	r25, 0x01	; 1
    10aa:	0e 94 07 08 	call	0x100e	; 0x100e <do_rand>
    10ae:	08 95       	ret

000010b0 <srand>:
    10b0:	a0 e0       	ldi	r26, 0x00	; 0
    10b2:	b0 e0       	ldi	r27, 0x00	; 0
    10b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    10b8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10bc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    10c0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    10c4:	08 95       	ret

000010c6 <fdevopen>:
    10c6:	0f 93       	push	r16
    10c8:	1f 93       	push	r17
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
    10ce:	00 97       	sbiw	r24, 0x00	; 0
    10d0:	31 f4       	brne	.+12     	; 0x10de <fdevopen+0x18>
    10d2:	61 15       	cp	r22, r1
    10d4:	71 05       	cpc	r23, r1
    10d6:	19 f4       	brne	.+6      	; 0x10de <fdevopen+0x18>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	3a c0       	rjmp	.+116    	; 0x1152 <fdevopen+0x8c>
    10de:	8b 01       	movw	r16, r22
    10e0:	ec 01       	movw	r28, r24
    10e2:	6e e0       	ldi	r22, 0x0E	; 14
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <calloc>
    10ee:	fc 01       	movw	r30, r24
    10f0:	89 2b       	or	r24, r25
    10f2:	91 f3       	breq	.-28     	; 0x10d8 <fdevopen+0x12>
    10f4:	80 e8       	ldi	r24, 0x80	; 128
    10f6:	83 83       	std	Z+3, r24	; 0x03
    10f8:	01 15       	cp	r16, r1
    10fa:	11 05       	cpc	r17, r1
    10fc:	71 f0       	breq	.+28     	; 0x111a <fdevopen+0x54>
    10fe:	13 87       	std	Z+11, r17	; 0x0b
    1100:	02 87       	std	Z+10, r16	; 0x0a
    1102:	81 e8       	ldi	r24, 0x81	; 129
    1104:	83 83       	std	Z+3, r24	; 0x03
    1106:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <__iob>
    110a:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <__iob+0x1>
    110e:	89 2b       	or	r24, r25
    1110:	21 f4       	brne	.+8      	; 0x111a <fdevopen+0x54>
    1112:	f0 93 57 02 	sts	0x0257, r31	; 0x800257 <__iob+0x1>
    1116:	e0 93 56 02 	sts	0x0256, r30	; 0x800256 <__iob>
    111a:	20 97       	sbiw	r28, 0x00	; 0
    111c:	c9 f0       	breq	.+50     	; 0x1150 <fdevopen+0x8a>
    111e:	d1 87       	std	Z+9, r29	; 0x09
    1120:	c0 87       	std	Z+8, r28	; 0x08
    1122:	83 81       	ldd	r24, Z+3	; 0x03
    1124:	82 60       	ori	r24, 0x02	; 2
    1126:	83 83       	std	Z+3, r24	; 0x03
    1128:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <__iob+0x2>
    112c:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <__iob+0x3>
    1130:	89 2b       	or	r24, r25
    1132:	71 f4       	brne	.+28     	; 0x1150 <fdevopen+0x8a>
    1134:	f0 93 59 02 	sts	0x0259, r31	; 0x800259 <__iob+0x3>
    1138:	e0 93 58 02 	sts	0x0258, r30	; 0x800258 <__iob+0x2>
    113c:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <__iob+0x4>
    1140:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <__iob+0x5>
    1144:	89 2b       	or	r24, r25
    1146:	21 f4       	brne	.+8      	; 0x1150 <fdevopen+0x8a>
    1148:	f0 93 5b 02 	sts	0x025B, r31	; 0x80025b <__iob+0x5>
    114c:	e0 93 5a 02 	sts	0x025A, r30	; 0x80025a <__iob+0x4>
    1150:	cf 01       	movw	r24, r30
    1152:	df 91       	pop	r29
    1154:	cf 91       	pop	r28
    1156:	1f 91       	pop	r17
    1158:	0f 91       	pop	r16
    115a:	08 95       	ret

0000115c <printf>:
    115c:	a0 e0       	ldi	r26, 0x00	; 0
    115e:	b0 e0       	ldi	r27, 0x00	; 0
    1160:	e4 eb       	ldi	r30, 0xB4	; 180
    1162:	f8 e0       	ldi	r31, 0x08	; 8
    1164:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <__prologue_saves__+0x20>
    1168:	ae 01       	movw	r20, r28
    116a:	4b 5f       	subi	r20, 0xFB	; 251
    116c:	5f 4f       	sbci	r21, 0xFF	; 255
    116e:	fa 01       	movw	r30, r20
    1170:	61 91       	ld	r22, Z+
    1172:	71 91       	ld	r23, Z+
    1174:	af 01       	movw	r20, r30
    1176:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <__iob+0x2>
    117a:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <__iob+0x3>
    117e:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <vfprintf>
    1182:	e2 e0       	ldi	r30, 0x02	; 2
    1184:	0c 94 27 0d 	jmp	0x1a4e	; 0x1a4e <__epilogue_restores__+0x20>

00001188 <puts>:
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <__iob+0x2>
    1194:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <__iob+0x3>
    1198:	23 81       	ldd	r18, Z+3	; 0x03
    119a:	21 ff       	sbrs	r18, 1
    119c:	1b c0       	rjmp	.+54     	; 0x11d4 <puts+0x4c>
    119e:	8c 01       	movw	r16, r24
    11a0:	d0 e0       	ldi	r29, 0x00	; 0
    11a2:	c0 e0       	ldi	r28, 0x00	; 0
    11a4:	f8 01       	movw	r30, r16
    11a6:	81 91       	ld	r24, Z+
    11a8:	8f 01       	movw	r16, r30
    11aa:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <__iob+0x2>
    11ae:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <__iob+0x3>
    11b2:	db 01       	movw	r26, r22
    11b4:	18 96       	adiw	r26, 0x08	; 8
    11b6:	ed 91       	ld	r30, X+
    11b8:	fc 91       	ld	r31, X
    11ba:	19 97       	sbiw	r26, 0x09	; 9
    11bc:	88 23       	and	r24, r24
    11be:	31 f0       	breq	.+12     	; 0x11cc <puts+0x44>
    11c0:	09 95       	icall
    11c2:	89 2b       	or	r24, r25
    11c4:	79 f3       	breq	.-34     	; 0x11a4 <puts+0x1c>
    11c6:	df ef       	ldi	r29, 0xFF	; 255
    11c8:	cf ef       	ldi	r28, 0xFF	; 255
    11ca:	ec cf       	rjmp	.-40     	; 0x11a4 <puts+0x1c>
    11cc:	8a e0       	ldi	r24, 0x0A	; 10
    11ce:	09 95       	icall
    11d0:	89 2b       	or	r24, r25
    11d2:	19 f0       	breq	.+6      	; 0x11da <puts+0x52>
    11d4:	8f ef       	ldi	r24, 0xFF	; 255
    11d6:	9f ef       	ldi	r25, 0xFF	; 255
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <puts+0x56>
    11da:	8d 2f       	mov	r24, r29
    11dc:	9c 2f       	mov	r25, r28
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	0f 91       	pop	r16
    11e6:	08 95       	ret

000011e8 <vfprintf>:
    11e8:	ab e0       	ldi	r26, 0x0B	; 11
    11ea:	b0 e0       	ldi	r27, 0x00	; 0
    11ec:	ea ef       	ldi	r30, 0xFA	; 250
    11ee:	f8 e0       	ldi	r31, 0x08	; 8
    11f0:	0c 94 fb 0c 	jmp	0x19f6	; 0x19f6 <__prologue_saves__>
    11f4:	6c 01       	movw	r12, r24
    11f6:	7b 01       	movw	r14, r22
    11f8:	8a 01       	movw	r16, r20
    11fa:	fc 01       	movw	r30, r24
    11fc:	17 82       	std	Z+7, r1	; 0x07
    11fe:	16 82       	std	Z+6, r1	; 0x06
    1200:	83 81       	ldd	r24, Z+3	; 0x03
    1202:	81 ff       	sbrs	r24, 1
    1204:	cc c1       	rjmp	.+920    	; 0x159e <vfprintf+0x3b6>
    1206:	ce 01       	movw	r24, r28
    1208:	01 96       	adiw	r24, 0x01	; 1
    120a:	3c 01       	movw	r6, r24
    120c:	f6 01       	movw	r30, r12
    120e:	93 81       	ldd	r25, Z+3	; 0x03
    1210:	f7 01       	movw	r30, r14
    1212:	93 fd       	sbrc	r25, 3
    1214:	85 91       	lpm	r24, Z+
    1216:	93 ff       	sbrs	r25, 3
    1218:	81 91       	ld	r24, Z+
    121a:	7f 01       	movw	r14, r30
    121c:	88 23       	and	r24, r24
    121e:	09 f4       	brne	.+2      	; 0x1222 <vfprintf+0x3a>
    1220:	ba c1       	rjmp	.+884    	; 0x1596 <vfprintf+0x3ae>
    1222:	85 32       	cpi	r24, 0x25	; 37
    1224:	39 f4       	brne	.+14     	; 0x1234 <vfprintf+0x4c>
    1226:	93 fd       	sbrc	r25, 3
    1228:	85 91       	lpm	r24, Z+
    122a:	93 ff       	sbrs	r25, 3
    122c:	81 91       	ld	r24, Z+
    122e:	7f 01       	movw	r14, r30
    1230:	85 32       	cpi	r24, 0x25	; 37
    1232:	29 f4       	brne	.+10     	; 0x123e <vfprintf+0x56>
    1234:	b6 01       	movw	r22, r12
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    123c:	e7 cf       	rjmp	.-50     	; 0x120c <vfprintf+0x24>
    123e:	91 2c       	mov	r9, r1
    1240:	21 2c       	mov	r2, r1
    1242:	31 2c       	mov	r3, r1
    1244:	ff e1       	ldi	r31, 0x1F	; 31
    1246:	f3 15       	cp	r31, r3
    1248:	d8 f0       	brcs	.+54     	; 0x1280 <vfprintf+0x98>
    124a:	8b 32       	cpi	r24, 0x2B	; 43
    124c:	79 f0       	breq	.+30     	; 0x126c <vfprintf+0x84>
    124e:	38 f4       	brcc	.+14     	; 0x125e <vfprintf+0x76>
    1250:	80 32       	cpi	r24, 0x20	; 32
    1252:	79 f0       	breq	.+30     	; 0x1272 <vfprintf+0x8a>
    1254:	83 32       	cpi	r24, 0x23	; 35
    1256:	a1 f4       	brne	.+40     	; 0x1280 <vfprintf+0x98>
    1258:	23 2d       	mov	r18, r3
    125a:	20 61       	ori	r18, 0x10	; 16
    125c:	1d c0       	rjmp	.+58     	; 0x1298 <vfprintf+0xb0>
    125e:	8d 32       	cpi	r24, 0x2D	; 45
    1260:	61 f0       	breq	.+24     	; 0x127a <vfprintf+0x92>
    1262:	80 33       	cpi	r24, 0x30	; 48
    1264:	69 f4       	brne	.+26     	; 0x1280 <vfprintf+0x98>
    1266:	23 2d       	mov	r18, r3
    1268:	21 60       	ori	r18, 0x01	; 1
    126a:	16 c0       	rjmp	.+44     	; 0x1298 <vfprintf+0xb0>
    126c:	83 2d       	mov	r24, r3
    126e:	82 60       	ori	r24, 0x02	; 2
    1270:	38 2e       	mov	r3, r24
    1272:	e3 2d       	mov	r30, r3
    1274:	e4 60       	ori	r30, 0x04	; 4
    1276:	3e 2e       	mov	r3, r30
    1278:	2a c0       	rjmp	.+84     	; 0x12ce <vfprintf+0xe6>
    127a:	f3 2d       	mov	r31, r3
    127c:	f8 60       	ori	r31, 0x08	; 8
    127e:	1d c0       	rjmp	.+58     	; 0x12ba <vfprintf+0xd2>
    1280:	37 fc       	sbrc	r3, 7
    1282:	2d c0       	rjmp	.+90     	; 0x12de <vfprintf+0xf6>
    1284:	20 ed       	ldi	r18, 0xD0	; 208
    1286:	28 0f       	add	r18, r24
    1288:	2a 30       	cpi	r18, 0x0A	; 10
    128a:	40 f0       	brcs	.+16     	; 0x129c <vfprintf+0xb4>
    128c:	8e 32       	cpi	r24, 0x2E	; 46
    128e:	b9 f4       	brne	.+46     	; 0x12be <vfprintf+0xd6>
    1290:	36 fc       	sbrc	r3, 6
    1292:	81 c1       	rjmp	.+770    	; 0x1596 <vfprintf+0x3ae>
    1294:	23 2d       	mov	r18, r3
    1296:	20 64       	ori	r18, 0x40	; 64
    1298:	32 2e       	mov	r3, r18
    129a:	19 c0       	rjmp	.+50     	; 0x12ce <vfprintf+0xe6>
    129c:	36 fe       	sbrs	r3, 6
    129e:	06 c0       	rjmp	.+12     	; 0x12ac <vfprintf+0xc4>
    12a0:	8a e0       	ldi	r24, 0x0A	; 10
    12a2:	98 9e       	mul	r9, r24
    12a4:	20 0d       	add	r18, r0
    12a6:	11 24       	eor	r1, r1
    12a8:	92 2e       	mov	r9, r18
    12aa:	11 c0       	rjmp	.+34     	; 0x12ce <vfprintf+0xe6>
    12ac:	ea e0       	ldi	r30, 0x0A	; 10
    12ae:	2e 9e       	mul	r2, r30
    12b0:	20 0d       	add	r18, r0
    12b2:	11 24       	eor	r1, r1
    12b4:	22 2e       	mov	r2, r18
    12b6:	f3 2d       	mov	r31, r3
    12b8:	f0 62       	ori	r31, 0x20	; 32
    12ba:	3f 2e       	mov	r3, r31
    12bc:	08 c0       	rjmp	.+16     	; 0x12ce <vfprintf+0xe6>
    12be:	8c 36       	cpi	r24, 0x6C	; 108
    12c0:	21 f4       	brne	.+8      	; 0x12ca <vfprintf+0xe2>
    12c2:	83 2d       	mov	r24, r3
    12c4:	80 68       	ori	r24, 0x80	; 128
    12c6:	38 2e       	mov	r3, r24
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <vfprintf+0xe6>
    12ca:	88 36       	cpi	r24, 0x68	; 104
    12cc:	41 f4       	brne	.+16     	; 0x12de <vfprintf+0xf6>
    12ce:	f7 01       	movw	r30, r14
    12d0:	93 fd       	sbrc	r25, 3
    12d2:	85 91       	lpm	r24, Z+
    12d4:	93 ff       	sbrs	r25, 3
    12d6:	81 91       	ld	r24, Z+
    12d8:	7f 01       	movw	r14, r30
    12da:	81 11       	cpse	r24, r1
    12dc:	b3 cf       	rjmp	.-154    	; 0x1244 <vfprintf+0x5c>
    12de:	98 2f       	mov	r25, r24
    12e0:	9f 7d       	andi	r25, 0xDF	; 223
    12e2:	95 54       	subi	r25, 0x45	; 69
    12e4:	93 30       	cpi	r25, 0x03	; 3
    12e6:	28 f4       	brcc	.+10     	; 0x12f2 <vfprintf+0x10a>
    12e8:	0c 5f       	subi	r16, 0xFC	; 252
    12ea:	1f 4f       	sbci	r17, 0xFF	; 255
    12ec:	9f e3       	ldi	r25, 0x3F	; 63
    12ee:	99 83       	std	Y+1, r25	; 0x01
    12f0:	0d c0       	rjmp	.+26     	; 0x130c <vfprintf+0x124>
    12f2:	83 36       	cpi	r24, 0x63	; 99
    12f4:	31 f0       	breq	.+12     	; 0x1302 <vfprintf+0x11a>
    12f6:	83 37       	cpi	r24, 0x73	; 115
    12f8:	71 f0       	breq	.+28     	; 0x1316 <vfprintf+0x12e>
    12fa:	83 35       	cpi	r24, 0x53	; 83
    12fc:	09 f0       	breq	.+2      	; 0x1300 <vfprintf+0x118>
    12fe:	59 c0       	rjmp	.+178    	; 0x13b2 <vfprintf+0x1ca>
    1300:	21 c0       	rjmp	.+66     	; 0x1344 <vfprintf+0x15c>
    1302:	f8 01       	movw	r30, r16
    1304:	80 81       	ld	r24, Z
    1306:	89 83       	std	Y+1, r24	; 0x01
    1308:	0e 5f       	subi	r16, 0xFE	; 254
    130a:	1f 4f       	sbci	r17, 0xFF	; 255
    130c:	88 24       	eor	r8, r8
    130e:	83 94       	inc	r8
    1310:	91 2c       	mov	r9, r1
    1312:	53 01       	movw	r10, r6
    1314:	13 c0       	rjmp	.+38     	; 0x133c <vfprintf+0x154>
    1316:	28 01       	movw	r4, r16
    1318:	f2 e0       	ldi	r31, 0x02	; 2
    131a:	4f 0e       	add	r4, r31
    131c:	51 1c       	adc	r5, r1
    131e:	f8 01       	movw	r30, r16
    1320:	a0 80       	ld	r10, Z
    1322:	b1 80       	ldd	r11, Z+1	; 0x01
    1324:	36 fe       	sbrs	r3, 6
    1326:	03 c0       	rjmp	.+6      	; 0x132e <vfprintf+0x146>
    1328:	69 2d       	mov	r22, r9
    132a:	70 e0       	ldi	r23, 0x00	; 0
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <vfprintf+0x14a>
    132e:	6f ef       	ldi	r22, 0xFF	; 255
    1330:	7f ef       	ldi	r23, 0xFF	; 255
    1332:	c5 01       	movw	r24, r10
    1334:	0e 94 24 0c 	call	0x1848	; 0x1848 <strnlen>
    1338:	4c 01       	movw	r8, r24
    133a:	82 01       	movw	r16, r4
    133c:	f3 2d       	mov	r31, r3
    133e:	ff 77       	andi	r31, 0x7F	; 127
    1340:	3f 2e       	mov	r3, r31
    1342:	16 c0       	rjmp	.+44     	; 0x1370 <vfprintf+0x188>
    1344:	28 01       	movw	r4, r16
    1346:	22 e0       	ldi	r18, 0x02	; 2
    1348:	42 0e       	add	r4, r18
    134a:	51 1c       	adc	r5, r1
    134c:	f8 01       	movw	r30, r16
    134e:	a0 80       	ld	r10, Z
    1350:	b1 80       	ldd	r11, Z+1	; 0x01
    1352:	36 fe       	sbrs	r3, 6
    1354:	03 c0       	rjmp	.+6      	; 0x135c <vfprintf+0x174>
    1356:	69 2d       	mov	r22, r9
    1358:	70 e0       	ldi	r23, 0x00	; 0
    135a:	02 c0       	rjmp	.+4      	; 0x1360 <vfprintf+0x178>
    135c:	6f ef       	ldi	r22, 0xFF	; 255
    135e:	7f ef       	ldi	r23, 0xFF	; 255
    1360:	c5 01       	movw	r24, r10
    1362:	0e 94 12 0c 	call	0x1824	; 0x1824 <strnlen_P>
    1366:	4c 01       	movw	r8, r24
    1368:	f3 2d       	mov	r31, r3
    136a:	f0 68       	ori	r31, 0x80	; 128
    136c:	3f 2e       	mov	r3, r31
    136e:	82 01       	movw	r16, r4
    1370:	33 fc       	sbrc	r3, 3
    1372:	1b c0       	rjmp	.+54     	; 0x13aa <vfprintf+0x1c2>
    1374:	82 2d       	mov	r24, r2
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	88 16       	cp	r8, r24
    137a:	99 06       	cpc	r9, r25
    137c:	b0 f4       	brcc	.+44     	; 0x13aa <vfprintf+0x1c2>
    137e:	b6 01       	movw	r22, r12
    1380:	80 e2       	ldi	r24, 0x20	; 32
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    1388:	2a 94       	dec	r2
    138a:	f4 cf       	rjmp	.-24     	; 0x1374 <vfprintf+0x18c>
    138c:	f5 01       	movw	r30, r10
    138e:	37 fc       	sbrc	r3, 7
    1390:	85 91       	lpm	r24, Z+
    1392:	37 fe       	sbrs	r3, 7
    1394:	81 91       	ld	r24, Z+
    1396:	5f 01       	movw	r10, r30
    1398:	b6 01       	movw	r22, r12
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    13a0:	21 10       	cpse	r2, r1
    13a2:	2a 94       	dec	r2
    13a4:	21 e0       	ldi	r18, 0x01	; 1
    13a6:	82 1a       	sub	r8, r18
    13a8:	91 08       	sbc	r9, r1
    13aa:	81 14       	cp	r8, r1
    13ac:	91 04       	cpc	r9, r1
    13ae:	71 f7       	brne	.-36     	; 0x138c <vfprintf+0x1a4>
    13b0:	e8 c0       	rjmp	.+464    	; 0x1582 <vfprintf+0x39a>
    13b2:	84 36       	cpi	r24, 0x64	; 100
    13b4:	11 f0       	breq	.+4      	; 0x13ba <vfprintf+0x1d2>
    13b6:	89 36       	cpi	r24, 0x69	; 105
    13b8:	41 f5       	brne	.+80     	; 0x140a <vfprintf+0x222>
    13ba:	f8 01       	movw	r30, r16
    13bc:	37 fe       	sbrs	r3, 7
    13be:	07 c0       	rjmp	.+14     	; 0x13ce <vfprintf+0x1e6>
    13c0:	60 81       	ld	r22, Z
    13c2:	71 81       	ldd	r23, Z+1	; 0x01
    13c4:	82 81       	ldd	r24, Z+2	; 0x02
    13c6:	93 81       	ldd	r25, Z+3	; 0x03
    13c8:	0c 5f       	subi	r16, 0xFC	; 252
    13ca:	1f 4f       	sbci	r17, 0xFF	; 255
    13cc:	08 c0       	rjmp	.+16     	; 0x13de <vfprintf+0x1f6>
    13ce:	60 81       	ld	r22, Z
    13d0:	71 81       	ldd	r23, Z+1	; 0x01
    13d2:	07 2e       	mov	r0, r23
    13d4:	00 0c       	add	r0, r0
    13d6:	88 0b       	sbc	r24, r24
    13d8:	99 0b       	sbc	r25, r25
    13da:	0e 5f       	subi	r16, 0xFE	; 254
    13dc:	1f 4f       	sbci	r17, 0xFF	; 255
    13de:	f3 2d       	mov	r31, r3
    13e0:	ff 76       	andi	r31, 0x6F	; 111
    13e2:	3f 2e       	mov	r3, r31
    13e4:	97 ff       	sbrs	r25, 7
    13e6:	09 c0       	rjmp	.+18     	; 0x13fa <vfprintf+0x212>
    13e8:	90 95       	com	r25
    13ea:	80 95       	com	r24
    13ec:	70 95       	com	r23
    13ee:	61 95       	neg	r22
    13f0:	7f 4f       	sbci	r23, 0xFF	; 255
    13f2:	8f 4f       	sbci	r24, 0xFF	; 255
    13f4:	9f 4f       	sbci	r25, 0xFF	; 255
    13f6:	f0 68       	ori	r31, 0x80	; 128
    13f8:	3f 2e       	mov	r3, r31
    13fa:	2a e0       	ldi	r18, 0x0A	; 10
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	a3 01       	movw	r20, r6
    1400:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <__ultoa_invert>
    1404:	88 2e       	mov	r8, r24
    1406:	86 18       	sub	r8, r6
    1408:	45 c0       	rjmp	.+138    	; 0x1494 <vfprintf+0x2ac>
    140a:	85 37       	cpi	r24, 0x75	; 117
    140c:	31 f4       	brne	.+12     	; 0x141a <vfprintf+0x232>
    140e:	23 2d       	mov	r18, r3
    1410:	2f 7e       	andi	r18, 0xEF	; 239
    1412:	b2 2e       	mov	r11, r18
    1414:	2a e0       	ldi	r18, 0x0A	; 10
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	25 c0       	rjmp	.+74     	; 0x1464 <vfprintf+0x27c>
    141a:	93 2d       	mov	r25, r3
    141c:	99 7f       	andi	r25, 0xF9	; 249
    141e:	b9 2e       	mov	r11, r25
    1420:	8f 36       	cpi	r24, 0x6F	; 111
    1422:	c1 f0       	breq	.+48     	; 0x1454 <vfprintf+0x26c>
    1424:	18 f4       	brcc	.+6      	; 0x142c <vfprintf+0x244>
    1426:	88 35       	cpi	r24, 0x58	; 88
    1428:	79 f0       	breq	.+30     	; 0x1448 <vfprintf+0x260>
    142a:	b5 c0       	rjmp	.+362    	; 0x1596 <vfprintf+0x3ae>
    142c:	80 37       	cpi	r24, 0x70	; 112
    142e:	19 f0       	breq	.+6      	; 0x1436 <vfprintf+0x24e>
    1430:	88 37       	cpi	r24, 0x78	; 120
    1432:	21 f0       	breq	.+8      	; 0x143c <vfprintf+0x254>
    1434:	b0 c0       	rjmp	.+352    	; 0x1596 <vfprintf+0x3ae>
    1436:	e9 2f       	mov	r30, r25
    1438:	e0 61       	ori	r30, 0x10	; 16
    143a:	be 2e       	mov	r11, r30
    143c:	b4 fe       	sbrs	r11, 4
    143e:	0d c0       	rjmp	.+26     	; 0x145a <vfprintf+0x272>
    1440:	fb 2d       	mov	r31, r11
    1442:	f4 60       	ori	r31, 0x04	; 4
    1444:	bf 2e       	mov	r11, r31
    1446:	09 c0       	rjmp	.+18     	; 0x145a <vfprintf+0x272>
    1448:	34 fe       	sbrs	r3, 4
    144a:	0a c0       	rjmp	.+20     	; 0x1460 <vfprintf+0x278>
    144c:	29 2f       	mov	r18, r25
    144e:	26 60       	ori	r18, 0x06	; 6
    1450:	b2 2e       	mov	r11, r18
    1452:	06 c0       	rjmp	.+12     	; 0x1460 <vfprintf+0x278>
    1454:	28 e0       	ldi	r18, 0x08	; 8
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	05 c0       	rjmp	.+10     	; 0x1464 <vfprintf+0x27c>
    145a:	20 e1       	ldi	r18, 0x10	; 16
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	02 c0       	rjmp	.+4      	; 0x1464 <vfprintf+0x27c>
    1460:	20 e1       	ldi	r18, 0x10	; 16
    1462:	32 e0       	ldi	r19, 0x02	; 2
    1464:	f8 01       	movw	r30, r16
    1466:	b7 fe       	sbrs	r11, 7
    1468:	07 c0       	rjmp	.+14     	; 0x1478 <vfprintf+0x290>
    146a:	60 81       	ld	r22, Z
    146c:	71 81       	ldd	r23, Z+1	; 0x01
    146e:	82 81       	ldd	r24, Z+2	; 0x02
    1470:	93 81       	ldd	r25, Z+3	; 0x03
    1472:	0c 5f       	subi	r16, 0xFC	; 252
    1474:	1f 4f       	sbci	r17, 0xFF	; 255
    1476:	06 c0       	rjmp	.+12     	; 0x1484 <vfprintf+0x29c>
    1478:	60 81       	ld	r22, Z
    147a:	71 81       	ldd	r23, Z+1	; 0x01
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	0e 5f       	subi	r16, 0xFE	; 254
    1482:	1f 4f       	sbci	r17, 0xFF	; 255
    1484:	a3 01       	movw	r20, r6
    1486:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <__ultoa_invert>
    148a:	88 2e       	mov	r8, r24
    148c:	86 18       	sub	r8, r6
    148e:	fb 2d       	mov	r31, r11
    1490:	ff 77       	andi	r31, 0x7F	; 127
    1492:	3f 2e       	mov	r3, r31
    1494:	36 fe       	sbrs	r3, 6
    1496:	0d c0       	rjmp	.+26     	; 0x14b2 <vfprintf+0x2ca>
    1498:	23 2d       	mov	r18, r3
    149a:	2e 7f       	andi	r18, 0xFE	; 254
    149c:	a2 2e       	mov	r10, r18
    149e:	89 14       	cp	r8, r9
    14a0:	58 f4       	brcc	.+22     	; 0x14b8 <vfprintf+0x2d0>
    14a2:	34 fe       	sbrs	r3, 4
    14a4:	0b c0       	rjmp	.+22     	; 0x14bc <vfprintf+0x2d4>
    14a6:	32 fc       	sbrc	r3, 2
    14a8:	09 c0       	rjmp	.+18     	; 0x14bc <vfprintf+0x2d4>
    14aa:	83 2d       	mov	r24, r3
    14ac:	8e 7e       	andi	r24, 0xEE	; 238
    14ae:	a8 2e       	mov	r10, r24
    14b0:	05 c0       	rjmp	.+10     	; 0x14bc <vfprintf+0x2d4>
    14b2:	b8 2c       	mov	r11, r8
    14b4:	a3 2c       	mov	r10, r3
    14b6:	03 c0       	rjmp	.+6      	; 0x14be <vfprintf+0x2d6>
    14b8:	b8 2c       	mov	r11, r8
    14ba:	01 c0       	rjmp	.+2      	; 0x14be <vfprintf+0x2d6>
    14bc:	b9 2c       	mov	r11, r9
    14be:	a4 fe       	sbrs	r10, 4
    14c0:	0f c0       	rjmp	.+30     	; 0x14e0 <vfprintf+0x2f8>
    14c2:	fe 01       	movw	r30, r28
    14c4:	e8 0d       	add	r30, r8
    14c6:	f1 1d       	adc	r31, r1
    14c8:	80 81       	ld	r24, Z
    14ca:	80 33       	cpi	r24, 0x30	; 48
    14cc:	21 f4       	brne	.+8      	; 0x14d6 <vfprintf+0x2ee>
    14ce:	9a 2d       	mov	r25, r10
    14d0:	99 7e       	andi	r25, 0xE9	; 233
    14d2:	a9 2e       	mov	r10, r25
    14d4:	09 c0       	rjmp	.+18     	; 0x14e8 <vfprintf+0x300>
    14d6:	a2 fe       	sbrs	r10, 2
    14d8:	06 c0       	rjmp	.+12     	; 0x14e6 <vfprintf+0x2fe>
    14da:	b3 94       	inc	r11
    14dc:	b3 94       	inc	r11
    14de:	04 c0       	rjmp	.+8      	; 0x14e8 <vfprintf+0x300>
    14e0:	8a 2d       	mov	r24, r10
    14e2:	86 78       	andi	r24, 0x86	; 134
    14e4:	09 f0       	breq	.+2      	; 0x14e8 <vfprintf+0x300>
    14e6:	b3 94       	inc	r11
    14e8:	a3 fc       	sbrc	r10, 3
    14ea:	11 c0       	rjmp	.+34     	; 0x150e <vfprintf+0x326>
    14ec:	a0 fe       	sbrs	r10, 0
    14ee:	06 c0       	rjmp	.+12     	; 0x14fc <vfprintf+0x314>
    14f0:	b2 14       	cp	r11, r2
    14f2:	88 f4       	brcc	.+34     	; 0x1516 <vfprintf+0x32e>
    14f4:	28 0c       	add	r2, r8
    14f6:	92 2c       	mov	r9, r2
    14f8:	9b 18       	sub	r9, r11
    14fa:	0e c0       	rjmp	.+28     	; 0x1518 <vfprintf+0x330>
    14fc:	b2 14       	cp	r11, r2
    14fe:	60 f4       	brcc	.+24     	; 0x1518 <vfprintf+0x330>
    1500:	b6 01       	movw	r22, r12
    1502:	80 e2       	ldi	r24, 0x20	; 32
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    150a:	b3 94       	inc	r11
    150c:	f7 cf       	rjmp	.-18     	; 0x14fc <vfprintf+0x314>
    150e:	b2 14       	cp	r11, r2
    1510:	18 f4       	brcc	.+6      	; 0x1518 <vfprintf+0x330>
    1512:	2b 18       	sub	r2, r11
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x332>
    1516:	98 2c       	mov	r9, r8
    1518:	21 2c       	mov	r2, r1
    151a:	a4 fe       	sbrs	r10, 4
    151c:	10 c0       	rjmp	.+32     	; 0x153e <vfprintf+0x356>
    151e:	b6 01       	movw	r22, r12
    1520:	80 e3       	ldi	r24, 0x30	; 48
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    1528:	a2 fe       	sbrs	r10, 2
    152a:	17 c0       	rjmp	.+46     	; 0x155a <vfprintf+0x372>
    152c:	a1 fc       	sbrc	r10, 1
    152e:	03 c0       	rjmp	.+6      	; 0x1536 <vfprintf+0x34e>
    1530:	88 e7       	ldi	r24, 0x78	; 120
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	02 c0       	rjmp	.+4      	; 0x153a <vfprintf+0x352>
    1536:	88 e5       	ldi	r24, 0x58	; 88
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	b6 01       	movw	r22, r12
    153c:	0c c0       	rjmp	.+24     	; 0x1556 <vfprintf+0x36e>
    153e:	8a 2d       	mov	r24, r10
    1540:	86 78       	andi	r24, 0x86	; 134
    1542:	59 f0       	breq	.+22     	; 0x155a <vfprintf+0x372>
    1544:	a1 fe       	sbrs	r10, 1
    1546:	02 c0       	rjmp	.+4      	; 0x154c <vfprintf+0x364>
    1548:	8b e2       	ldi	r24, 0x2B	; 43
    154a:	01 c0       	rjmp	.+2      	; 0x154e <vfprintf+0x366>
    154c:	80 e2       	ldi	r24, 0x20	; 32
    154e:	a7 fc       	sbrc	r10, 7
    1550:	8d e2       	ldi	r24, 0x2D	; 45
    1552:	b6 01       	movw	r22, r12
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    155a:	89 14       	cp	r8, r9
    155c:	38 f4       	brcc	.+14     	; 0x156c <vfprintf+0x384>
    155e:	b6 01       	movw	r22, r12
    1560:	80 e3       	ldi	r24, 0x30	; 48
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    1568:	9a 94       	dec	r9
    156a:	f7 cf       	rjmp	.-18     	; 0x155a <vfprintf+0x372>
    156c:	8a 94       	dec	r8
    156e:	f3 01       	movw	r30, r6
    1570:	e8 0d       	add	r30, r8
    1572:	f1 1d       	adc	r31, r1
    1574:	80 81       	ld	r24, Z
    1576:	b6 01       	movw	r22, r12
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    157e:	81 10       	cpse	r8, r1
    1580:	f5 cf       	rjmp	.-22     	; 0x156c <vfprintf+0x384>
    1582:	22 20       	and	r2, r2
    1584:	09 f4       	brne	.+2      	; 0x1588 <vfprintf+0x3a0>
    1586:	42 ce       	rjmp	.-892    	; 0x120c <vfprintf+0x24>
    1588:	b6 01       	movw	r22, r12
    158a:	80 e2       	ldi	r24, 0x20	; 32
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	0e 94 2f 0c 	call	0x185e	; 0x185e <fputc>
    1592:	2a 94       	dec	r2
    1594:	f6 cf       	rjmp	.-20     	; 0x1582 <vfprintf+0x39a>
    1596:	f6 01       	movw	r30, r12
    1598:	86 81       	ldd	r24, Z+6	; 0x06
    159a:	97 81       	ldd	r25, Z+7	; 0x07
    159c:	02 c0       	rjmp	.+4      	; 0x15a2 <vfprintf+0x3ba>
    159e:	8f ef       	ldi	r24, 0xFF	; 255
    15a0:	9f ef       	ldi	r25, 0xFF	; 255
    15a2:	2b 96       	adiw	r28, 0x0b	; 11
    15a4:	e2 e1       	ldi	r30, 0x12	; 18
    15a6:	0c 94 17 0d 	jmp	0x1a2e	; 0x1a2e <__epilogue_restores__>

000015aa <calloc>:
    15aa:	0f 93       	push	r16
    15ac:	1f 93       	push	r17
    15ae:	cf 93       	push	r28
    15b0:	df 93       	push	r29
    15b2:	86 9f       	mul	r24, r22
    15b4:	80 01       	movw	r16, r0
    15b6:	87 9f       	mul	r24, r23
    15b8:	10 0d       	add	r17, r0
    15ba:	96 9f       	mul	r25, r22
    15bc:	10 0d       	add	r17, r0
    15be:	11 24       	eor	r1, r1
    15c0:	c8 01       	movw	r24, r16
    15c2:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <malloc>
    15c6:	ec 01       	movw	r28, r24
    15c8:	00 97       	sbiw	r24, 0x00	; 0
    15ca:	29 f0       	breq	.+10     	; 0x15d6 <calloc+0x2c>
    15cc:	a8 01       	movw	r20, r16
    15ce:	60 e0       	ldi	r22, 0x00	; 0
    15d0:	70 e0       	ldi	r23, 0x00	; 0
    15d2:	0e 94 1d 0c 	call	0x183a	; 0x183a <memset>
    15d6:	ce 01       	movw	r24, r28
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	1f 91       	pop	r17
    15de:	0f 91       	pop	r16
    15e0:	08 95       	ret

000015e2 <malloc>:
    15e2:	0f 93       	push	r16
    15e4:	1f 93       	push	r17
    15e6:	cf 93       	push	r28
    15e8:	df 93       	push	r29
    15ea:	82 30       	cpi	r24, 0x02	; 2
    15ec:	91 05       	cpc	r25, r1
    15ee:	10 f4       	brcc	.+4      	; 0x15f4 <malloc+0x12>
    15f0:	82 e0       	ldi	r24, 0x02	; 2
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <__flp>
    15f8:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <__flp+0x1>
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	a0 e0       	ldi	r26, 0x00	; 0
    1602:	b0 e0       	ldi	r27, 0x00	; 0
    1604:	30 97       	sbiw	r30, 0x00	; 0
    1606:	19 f1       	breq	.+70     	; 0x164e <malloc+0x6c>
    1608:	40 81       	ld	r20, Z
    160a:	51 81       	ldd	r21, Z+1	; 0x01
    160c:	02 81       	ldd	r16, Z+2	; 0x02
    160e:	13 81       	ldd	r17, Z+3	; 0x03
    1610:	48 17       	cp	r20, r24
    1612:	59 07       	cpc	r21, r25
    1614:	c8 f0       	brcs	.+50     	; 0x1648 <malloc+0x66>
    1616:	84 17       	cp	r24, r20
    1618:	95 07       	cpc	r25, r21
    161a:	69 f4       	brne	.+26     	; 0x1636 <malloc+0x54>
    161c:	10 97       	sbiw	r26, 0x00	; 0
    161e:	31 f0       	breq	.+12     	; 0x162c <malloc+0x4a>
    1620:	12 96       	adiw	r26, 0x02	; 2
    1622:	0c 93       	st	X, r16
    1624:	12 97       	sbiw	r26, 0x02	; 2
    1626:	13 96       	adiw	r26, 0x03	; 3
    1628:	1c 93       	st	X, r17
    162a:	27 c0       	rjmp	.+78     	; 0x167a <malloc+0x98>
    162c:	00 93 5e 02 	sts	0x025E, r16	; 0x80025e <__flp>
    1630:	10 93 5f 02 	sts	0x025F, r17	; 0x80025f <__flp+0x1>
    1634:	22 c0       	rjmp	.+68     	; 0x167a <malloc+0x98>
    1636:	21 15       	cp	r18, r1
    1638:	31 05       	cpc	r19, r1
    163a:	19 f0       	breq	.+6      	; 0x1642 <malloc+0x60>
    163c:	42 17       	cp	r20, r18
    163e:	53 07       	cpc	r21, r19
    1640:	18 f4       	brcc	.+6      	; 0x1648 <malloc+0x66>
    1642:	9a 01       	movw	r18, r20
    1644:	bd 01       	movw	r22, r26
    1646:	ef 01       	movw	r28, r30
    1648:	df 01       	movw	r26, r30
    164a:	f8 01       	movw	r30, r16
    164c:	db cf       	rjmp	.-74     	; 0x1604 <malloc+0x22>
    164e:	21 15       	cp	r18, r1
    1650:	31 05       	cpc	r19, r1
    1652:	f9 f0       	breq	.+62     	; 0x1692 <malloc+0xb0>
    1654:	28 1b       	sub	r18, r24
    1656:	39 0b       	sbc	r19, r25
    1658:	24 30       	cpi	r18, 0x04	; 4
    165a:	31 05       	cpc	r19, r1
    165c:	80 f4       	brcc	.+32     	; 0x167e <malloc+0x9c>
    165e:	8a 81       	ldd	r24, Y+2	; 0x02
    1660:	9b 81       	ldd	r25, Y+3	; 0x03
    1662:	61 15       	cp	r22, r1
    1664:	71 05       	cpc	r23, r1
    1666:	21 f0       	breq	.+8      	; 0x1670 <malloc+0x8e>
    1668:	fb 01       	movw	r30, r22
    166a:	93 83       	std	Z+3, r25	; 0x03
    166c:	82 83       	std	Z+2, r24	; 0x02
    166e:	04 c0       	rjmp	.+8      	; 0x1678 <malloc+0x96>
    1670:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <__flp+0x1>
    1674:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <__flp>
    1678:	fe 01       	movw	r30, r28
    167a:	32 96       	adiw	r30, 0x02	; 2
    167c:	44 c0       	rjmp	.+136    	; 0x1706 <malloc+0x124>
    167e:	fe 01       	movw	r30, r28
    1680:	e2 0f       	add	r30, r18
    1682:	f3 1f       	adc	r31, r19
    1684:	81 93       	st	Z+, r24
    1686:	91 93       	st	Z+, r25
    1688:	22 50       	subi	r18, 0x02	; 2
    168a:	31 09       	sbc	r19, r1
    168c:	39 83       	std	Y+1, r19	; 0x01
    168e:	28 83       	st	Y, r18
    1690:	3a c0       	rjmp	.+116    	; 0x1706 <malloc+0x124>
    1692:	20 91 5c 02 	lds	r18, 0x025C	; 0x80025c <__brkval>
    1696:	30 91 5d 02 	lds	r19, 0x025D	; 0x80025d <__brkval+0x1>
    169a:	23 2b       	or	r18, r19
    169c:	41 f4       	brne	.+16     	; 0x16ae <malloc+0xcc>
    169e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    16a2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    16a6:	30 93 5d 02 	sts	0x025D, r19	; 0x80025d <__brkval+0x1>
    16aa:	20 93 5c 02 	sts	0x025C, r18	; 0x80025c <__brkval>
    16ae:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    16b2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    16b6:	21 15       	cp	r18, r1
    16b8:	31 05       	cpc	r19, r1
    16ba:	41 f4       	brne	.+16     	; 0x16cc <malloc+0xea>
    16bc:	2d b7       	in	r18, 0x3d	; 61
    16be:	3e b7       	in	r19, 0x3e	; 62
    16c0:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    16c4:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    16c8:	24 1b       	sub	r18, r20
    16ca:	35 0b       	sbc	r19, r21
    16cc:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <__brkval>
    16d0:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <__brkval+0x1>
    16d4:	e2 17       	cp	r30, r18
    16d6:	f3 07       	cpc	r31, r19
    16d8:	a0 f4       	brcc	.+40     	; 0x1702 <malloc+0x120>
    16da:	2e 1b       	sub	r18, r30
    16dc:	3f 0b       	sbc	r19, r31
    16de:	28 17       	cp	r18, r24
    16e0:	39 07       	cpc	r19, r25
    16e2:	78 f0       	brcs	.+30     	; 0x1702 <malloc+0x120>
    16e4:	ac 01       	movw	r20, r24
    16e6:	4e 5f       	subi	r20, 0xFE	; 254
    16e8:	5f 4f       	sbci	r21, 0xFF	; 255
    16ea:	24 17       	cp	r18, r20
    16ec:	35 07       	cpc	r19, r21
    16ee:	48 f0       	brcs	.+18     	; 0x1702 <malloc+0x120>
    16f0:	4e 0f       	add	r20, r30
    16f2:	5f 1f       	adc	r21, r31
    16f4:	50 93 5d 02 	sts	0x025D, r21	; 0x80025d <__brkval+0x1>
    16f8:	40 93 5c 02 	sts	0x025C, r20	; 0x80025c <__brkval>
    16fc:	81 93       	st	Z+, r24
    16fe:	91 93       	st	Z+, r25
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <malloc+0x124>
    1702:	e0 e0       	ldi	r30, 0x00	; 0
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	cf 01       	movw	r24, r30
    1708:	df 91       	pop	r29
    170a:	cf 91       	pop	r28
    170c:	1f 91       	pop	r17
    170e:	0f 91       	pop	r16
    1710:	08 95       	ret

00001712 <free>:
    1712:	cf 93       	push	r28
    1714:	df 93       	push	r29
    1716:	00 97       	sbiw	r24, 0x00	; 0
    1718:	09 f4       	brne	.+2      	; 0x171c <free+0xa>
    171a:	81 c0       	rjmp	.+258    	; 0x181e <free+0x10c>
    171c:	fc 01       	movw	r30, r24
    171e:	32 97       	sbiw	r30, 0x02	; 2
    1720:	13 82       	std	Z+3, r1	; 0x03
    1722:	12 82       	std	Z+2, r1	; 0x02
    1724:	a0 91 5e 02 	lds	r26, 0x025E	; 0x80025e <__flp>
    1728:	b0 91 5f 02 	lds	r27, 0x025F	; 0x80025f <__flp+0x1>
    172c:	10 97       	sbiw	r26, 0x00	; 0
    172e:	81 f4       	brne	.+32     	; 0x1750 <free+0x3e>
    1730:	20 81       	ld	r18, Z
    1732:	31 81       	ldd	r19, Z+1	; 0x01
    1734:	82 0f       	add	r24, r18
    1736:	93 1f       	adc	r25, r19
    1738:	20 91 5c 02 	lds	r18, 0x025C	; 0x80025c <__brkval>
    173c:	30 91 5d 02 	lds	r19, 0x025D	; 0x80025d <__brkval+0x1>
    1740:	28 17       	cp	r18, r24
    1742:	39 07       	cpc	r19, r25
    1744:	51 f5       	brne	.+84     	; 0x179a <free+0x88>
    1746:	f0 93 5d 02 	sts	0x025D, r31	; 0x80025d <__brkval+0x1>
    174a:	e0 93 5c 02 	sts	0x025C, r30	; 0x80025c <__brkval>
    174e:	67 c0       	rjmp	.+206    	; 0x181e <free+0x10c>
    1750:	ed 01       	movw	r28, r26
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	ce 17       	cp	r28, r30
    1758:	df 07       	cpc	r29, r31
    175a:	40 f4       	brcc	.+16     	; 0x176c <free+0x5a>
    175c:	4a 81       	ldd	r20, Y+2	; 0x02
    175e:	5b 81       	ldd	r21, Y+3	; 0x03
    1760:	9e 01       	movw	r18, r28
    1762:	41 15       	cp	r20, r1
    1764:	51 05       	cpc	r21, r1
    1766:	f1 f0       	breq	.+60     	; 0x17a4 <free+0x92>
    1768:	ea 01       	movw	r28, r20
    176a:	f5 cf       	rjmp	.-22     	; 0x1756 <free+0x44>
    176c:	d3 83       	std	Z+3, r29	; 0x03
    176e:	c2 83       	std	Z+2, r28	; 0x02
    1770:	40 81       	ld	r20, Z
    1772:	51 81       	ldd	r21, Z+1	; 0x01
    1774:	84 0f       	add	r24, r20
    1776:	95 1f       	adc	r25, r21
    1778:	c8 17       	cp	r28, r24
    177a:	d9 07       	cpc	r29, r25
    177c:	59 f4       	brne	.+22     	; 0x1794 <free+0x82>
    177e:	88 81       	ld	r24, Y
    1780:	99 81       	ldd	r25, Y+1	; 0x01
    1782:	84 0f       	add	r24, r20
    1784:	95 1f       	adc	r25, r21
    1786:	02 96       	adiw	r24, 0x02	; 2
    1788:	91 83       	std	Z+1, r25	; 0x01
    178a:	80 83       	st	Z, r24
    178c:	8a 81       	ldd	r24, Y+2	; 0x02
    178e:	9b 81       	ldd	r25, Y+3	; 0x03
    1790:	93 83       	std	Z+3, r25	; 0x03
    1792:	82 83       	std	Z+2, r24	; 0x02
    1794:	21 15       	cp	r18, r1
    1796:	31 05       	cpc	r19, r1
    1798:	29 f4       	brne	.+10     	; 0x17a4 <free+0x92>
    179a:	f0 93 5f 02 	sts	0x025F, r31	; 0x80025f <__flp+0x1>
    179e:	e0 93 5e 02 	sts	0x025E, r30	; 0x80025e <__flp>
    17a2:	3d c0       	rjmp	.+122    	; 0x181e <free+0x10c>
    17a4:	e9 01       	movw	r28, r18
    17a6:	fb 83       	std	Y+3, r31	; 0x03
    17a8:	ea 83       	std	Y+2, r30	; 0x02
    17aa:	49 91       	ld	r20, Y+
    17ac:	59 91       	ld	r21, Y+
    17ae:	c4 0f       	add	r28, r20
    17b0:	d5 1f       	adc	r29, r21
    17b2:	ec 17       	cp	r30, r28
    17b4:	fd 07       	cpc	r31, r29
    17b6:	61 f4       	brne	.+24     	; 0x17d0 <free+0xbe>
    17b8:	80 81       	ld	r24, Z
    17ba:	91 81       	ldd	r25, Z+1	; 0x01
    17bc:	84 0f       	add	r24, r20
    17be:	95 1f       	adc	r25, r21
    17c0:	02 96       	adiw	r24, 0x02	; 2
    17c2:	e9 01       	movw	r28, r18
    17c4:	99 83       	std	Y+1, r25	; 0x01
    17c6:	88 83       	st	Y, r24
    17c8:	82 81       	ldd	r24, Z+2	; 0x02
    17ca:	93 81       	ldd	r25, Z+3	; 0x03
    17cc:	9b 83       	std	Y+3, r25	; 0x03
    17ce:	8a 83       	std	Y+2, r24	; 0x02
    17d0:	e0 e0       	ldi	r30, 0x00	; 0
    17d2:	f0 e0       	ldi	r31, 0x00	; 0
    17d4:	12 96       	adiw	r26, 0x02	; 2
    17d6:	8d 91       	ld	r24, X+
    17d8:	9c 91       	ld	r25, X
    17da:	13 97       	sbiw	r26, 0x03	; 3
    17dc:	00 97       	sbiw	r24, 0x00	; 0
    17de:	19 f0       	breq	.+6      	; 0x17e6 <free+0xd4>
    17e0:	fd 01       	movw	r30, r26
    17e2:	dc 01       	movw	r26, r24
    17e4:	f7 cf       	rjmp	.-18     	; 0x17d4 <free+0xc2>
    17e6:	8d 91       	ld	r24, X+
    17e8:	9c 91       	ld	r25, X
    17ea:	11 97       	sbiw	r26, 0x01	; 1
    17ec:	9d 01       	movw	r18, r26
    17ee:	2e 5f       	subi	r18, 0xFE	; 254
    17f0:	3f 4f       	sbci	r19, 0xFF	; 255
    17f2:	82 0f       	add	r24, r18
    17f4:	93 1f       	adc	r25, r19
    17f6:	20 91 5c 02 	lds	r18, 0x025C	; 0x80025c <__brkval>
    17fa:	30 91 5d 02 	lds	r19, 0x025D	; 0x80025d <__brkval+0x1>
    17fe:	28 17       	cp	r18, r24
    1800:	39 07       	cpc	r19, r25
    1802:	69 f4       	brne	.+26     	; 0x181e <free+0x10c>
    1804:	30 97       	sbiw	r30, 0x00	; 0
    1806:	29 f4       	brne	.+10     	; 0x1812 <free+0x100>
    1808:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <__flp+0x1>
    180c:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <__flp>
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <free+0x104>
    1812:	13 82       	std	Z+3, r1	; 0x03
    1814:	12 82       	std	Z+2, r1	; 0x02
    1816:	b0 93 5d 02 	sts	0x025D, r27	; 0x80025d <__brkval+0x1>
    181a:	a0 93 5c 02 	sts	0x025C, r26	; 0x80025c <__brkval>
    181e:	df 91       	pop	r29
    1820:	cf 91       	pop	r28
    1822:	08 95       	ret

00001824 <strnlen_P>:
    1824:	fc 01       	movw	r30, r24
    1826:	05 90       	lpm	r0, Z+
    1828:	61 50       	subi	r22, 0x01	; 1
    182a:	70 40       	sbci	r23, 0x00	; 0
    182c:	01 10       	cpse	r0, r1
    182e:	d8 f7       	brcc	.-10     	; 0x1826 <strnlen_P+0x2>
    1830:	80 95       	com	r24
    1832:	90 95       	com	r25
    1834:	8e 0f       	add	r24, r30
    1836:	9f 1f       	adc	r25, r31
    1838:	08 95       	ret

0000183a <memset>:
    183a:	dc 01       	movw	r26, r24
    183c:	01 c0       	rjmp	.+2      	; 0x1840 <memset+0x6>
    183e:	6d 93       	st	X+, r22
    1840:	41 50       	subi	r20, 0x01	; 1
    1842:	50 40       	sbci	r21, 0x00	; 0
    1844:	e0 f7       	brcc	.-8      	; 0x183e <memset+0x4>
    1846:	08 95       	ret

00001848 <strnlen>:
    1848:	fc 01       	movw	r30, r24
    184a:	61 50       	subi	r22, 0x01	; 1
    184c:	70 40       	sbci	r23, 0x00	; 0
    184e:	01 90       	ld	r0, Z+
    1850:	01 10       	cpse	r0, r1
    1852:	d8 f7       	brcc	.-10     	; 0x184a <strnlen+0x2>
    1854:	80 95       	com	r24
    1856:	90 95       	com	r25
    1858:	8e 0f       	add	r24, r30
    185a:	9f 1f       	adc	r25, r31
    185c:	08 95       	ret

0000185e <fputc>:
    185e:	0f 93       	push	r16
    1860:	1f 93       	push	r17
    1862:	cf 93       	push	r28
    1864:	df 93       	push	r29
    1866:	fb 01       	movw	r30, r22
    1868:	23 81       	ldd	r18, Z+3	; 0x03
    186a:	21 fd       	sbrc	r18, 1
    186c:	03 c0       	rjmp	.+6      	; 0x1874 <fputc+0x16>
    186e:	8f ef       	ldi	r24, 0xFF	; 255
    1870:	9f ef       	ldi	r25, 0xFF	; 255
    1872:	2c c0       	rjmp	.+88     	; 0x18cc <fputc+0x6e>
    1874:	22 ff       	sbrs	r18, 2
    1876:	16 c0       	rjmp	.+44     	; 0x18a4 <fputc+0x46>
    1878:	46 81       	ldd	r20, Z+6	; 0x06
    187a:	57 81       	ldd	r21, Z+7	; 0x07
    187c:	24 81       	ldd	r18, Z+4	; 0x04
    187e:	35 81       	ldd	r19, Z+5	; 0x05
    1880:	42 17       	cp	r20, r18
    1882:	53 07       	cpc	r21, r19
    1884:	44 f4       	brge	.+16     	; 0x1896 <fputc+0x38>
    1886:	a0 81       	ld	r26, Z
    1888:	b1 81       	ldd	r27, Z+1	; 0x01
    188a:	9d 01       	movw	r18, r26
    188c:	2f 5f       	subi	r18, 0xFF	; 255
    188e:	3f 4f       	sbci	r19, 0xFF	; 255
    1890:	31 83       	std	Z+1, r19	; 0x01
    1892:	20 83       	st	Z, r18
    1894:	8c 93       	st	X, r24
    1896:	26 81       	ldd	r18, Z+6	; 0x06
    1898:	37 81       	ldd	r19, Z+7	; 0x07
    189a:	2f 5f       	subi	r18, 0xFF	; 255
    189c:	3f 4f       	sbci	r19, 0xFF	; 255
    189e:	37 83       	std	Z+7, r19	; 0x07
    18a0:	26 83       	std	Z+6, r18	; 0x06
    18a2:	14 c0       	rjmp	.+40     	; 0x18cc <fputc+0x6e>
    18a4:	8b 01       	movw	r16, r22
    18a6:	ec 01       	movw	r28, r24
    18a8:	fb 01       	movw	r30, r22
    18aa:	00 84       	ldd	r0, Z+8	; 0x08
    18ac:	f1 85       	ldd	r31, Z+9	; 0x09
    18ae:	e0 2d       	mov	r30, r0
    18b0:	09 95       	icall
    18b2:	89 2b       	or	r24, r25
    18b4:	e1 f6       	brne	.-72     	; 0x186e <fputc+0x10>
    18b6:	d8 01       	movw	r26, r16
    18b8:	16 96       	adiw	r26, 0x06	; 6
    18ba:	8d 91       	ld	r24, X+
    18bc:	9c 91       	ld	r25, X
    18be:	17 97       	sbiw	r26, 0x07	; 7
    18c0:	01 96       	adiw	r24, 0x01	; 1
    18c2:	17 96       	adiw	r26, 0x07	; 7
    18c4:	9c 93       	st	X, r25
    18c6:	8e 93       	st	-X, r24
    18c8:	16 97       	sbiw	r26, 0x06	; 6
    18ca:	ce 01       	movw	r24, r28
    18cc:	df 91       	pop	r29
    18ce:	cf 91       	pop	r28
    18d0:	1f 91       	pop	r17
    18d2:	0f 91       	pop	r16
    18d4:	08 95       	ret

000018d6 <__ultoa_invert>:
    18d6:	fa 01       	movw	r30, r20
    18d8:	aa 27       	eor	r26, r26
    18da:	28 30       	cpi	r18, 0x08	; 8
    18dc:	51 f1       	breq	.+84     	; 0x1932 <__ultoa_invert+0x5c>
    18de:	20 31       	cpi	r18, 0x10	; 16
    18e0:	81 f1       	breq	.+96     	; 0x1942 <__ultoa_invert+0x6c>
    18e2:	e8 94       	clt
    18e4:	6f 93       	push	r22
    18e6:	6e 7f       	andi	r22, 0xFE	; 254
    18e8:	6e 5f       	subi	r22, 0xFE	; 254
    18ea:	7f 4f       	sbci	r23, 0xFF	; 255
    18ec:	8f 4f       	sbci	r24, 0xFF	; 255
    18ee:	9f 4f       	sbci	r25, 0xFF	; 255
    18f0:	af 4f       	sbci	r26, 0xFF	; 255
    18f2:	b1 e0       	ldi	r27, 0x01	; 1
    18f4:	3e d0       	rcall	.+124    	; 0x1972 <__ultoa_invert+0x9c>
    18f6:	b4 e0       	ldi	r27, 0x04	; 4
    18f8:	3c d0       	rcall	.+120    	; 0x1972 <__ultoa_invert+0x9c>
    18fa:	67 0f       	add	r22, r23
    18fc:	78 1f       	adc	r23, r24
    18fe:	89 1f       	adc	r24, r25
    1900:	9a 1f       	adc	r25, r26
    1902:	a1 1d       	adc	r26, r1
    1904:	68 0f       	add	r22, r24
    1906:	79 1f       	adc	r23, r25
    1908:	8a 1f       	adc	r24, r26
    190a:	91 1d       	adc	r25, r1
    190c:	a1 1d       	adc	r26, r1
    190e:	6a 0f       	add	r22, r26
    1910:	71 1d       	adc	r23, r1
    1912:	81 1d       	adc	r24, r1
    1914:	91 1d       	adc	r25, r1
    1916:	a1 1d       	adc	r26, r1
    1918:	20 d0       	rcall	.+64     	; 0x195a <__ultoa_invert+0x84>
    191a:	09 f4       	brne	.+2      	; 0x191e <__ultoa_invert+0x48>
    191c:	68 94       	set
    191e:	3f 91       	pop	r19
    1920:	2a e0       	ldi	r18, 0x0A	; 10
    1922:	26 9f       	mul	r18, r22
    1924:	11 24       	eor	r1, r1
    1926:	30 19       	sub	r19, r0
    1928:	30 5d       	subi	r19, 0xD0	; 208
    192a:	31 93       	st	Z+, r19
    192c:	de f6       	brtc	.-74     	; 0x18e4 <__ultoa_invert+0xe>
    192e:	cf 01       	movw	r24, r30
    1930:	08 95       	ret
    1932:	46 2f       	mov	r20, r22
    1934:	47 70       	andi	r20, 0x07	; 7
    1936:	40 5d       	subi	r20, 0xD0	; 208
    1938:	41 93       	st	Z+, r20
    193a:	b3 e0       	ldi	r27, 0x03	; 3
    193c:	0f d0       	rcall	.+30     	; 0x195c <__ultoa_invert+0x86>
    193e:	c9 f7       	brne	.-14     	; 0x1932 <__ultoa_invert+0x5c>
    1940:	f6 cf       	rjmp	.-20     	; 0x192e <__ultoa_invert+0x58>
    1942:	46 2f       	mov	r20, r22
    1944:	4f 70       	andi	r20, 0x0F	; 15
    1946:	40 5d       	subi	r20, 0xD0	; 208
    1948:	4a 33       	cpi	r20, 0x3A	; 58
    194a:	18 f0       	brcs	.+6      	; 0x1952 <__ultoa_invert+0x7c>
    194c:	49 5d       	subi	r20, 0xD9	; 217
    194e:	31 fd       	sbrc	r19, 1
    1950:	40 52       	subi	r20, 0x20	; 32
    1952:	41 93       	st	Z+, r20
    1954:	02 d0       	rcall	.+4      	; 0x195a <__ultoa_invert+0x84>
    1956:	a9 f7       	brne	.-22     	; 0x1942 <__ultoa_invert+0x6c>
    1958:	ea cf       	rjmp	.-44     	; 0x192e <__ultoa_invert+0x58>
    195a:	b4 e0       	ldi	r27, 0x04	; 4
    195c:	a6 95       	lsr	r26
    195e:	97 95       	ror	r25
    1960:	87 95       	ror	r24
    1962:	77 95       	ror	r23
    1964:	67 95       	ror	r22
    1966:	ba 95       	dec	r27
    1968:	c9 f7       	brne	.-14     	; 0x195c <__ultoa_invert+0x86>
    196a:	00 97       	sbiw	r24, 0x00	; 0
    196c:	61 05       	cpc	r22, r1
    196e:	71 05       	cpc	r23, r1
    1970:	08 95       	ret
    1972:	9b 01       	movw	r18, r22
    1974:	ac 01       	movw	r20, r24
    1976:	0a 2e       	mov	r0, r26
    1978:	06 94       	lsr	r0
    197a:	57 95       	ror	r21
    197c:	47 95       	ror	r20
    197e:	37 95       	ror	r19
    1980:	27 95       	ror	r18
    1982:	ba 95       	dec	r27
    1984:	c9 f7       	brne	.-14     	; 0x1978 <__ultoa_invert+0xa2>
    1986:	62 0f       	add	r22, r18
    1988:	73 1f       	adc	r23, r19
    198a:	84 1f       	adc	r24, r20
    198c:	95 1f       	adc	r25, r21
    198e:	a0 1d       	adc	r26, r0
    1990:	08 95       	ret

00001992 <__divmodsi4>:
    1992:	05 2e       	mov	r0, r21
    1994:	97 fb       	bst	r25, 7
    1996:	1e f4       	brtc	.+6      	; 0x199e <__divmodsi4+0xc>
    1998:	00 94       	com	r0
    199a:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__negsi2>
    199e:	57 fd       	sbrc	r21, 7
    19a0:	07 d0       	rcall	.+14     	; 0x19b0 <__divmodsi4_neg2>
    19a2:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__udivmodsi4>
    19a6:	07 fc       	sbrc	r0, 7
    19a8:	03 d0       	rcall	.+6      	; 0x19b0 <__divmodsi4_neg2>
    19aa:	4e f4       	brtc	.+18     	; 0x19be <__divmodsi4_exit>
    19ac:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__negsi2>

000019b0 <__divmodsi4_neg2>:
    19b0:	50 95       	com	r21
    19b2:	40 95       	com	r20
    19b4:	30 95       	com	r19
    19b6:	21 95       	neg	r18
    19b8:	3f 4f       	sbci	r19, 0xFF	; 255
    19ba:	4f 4f       	sbci	r20, 0xFF	; 255
    19bc:	5f 4f       	sbci	r21, 0xFF	; 255

000019be <__divmodsi4_exit>:
    19be:	08 95       	ret

000019c0 <__negsi2>:
    19c0:	90 95       	com	r25
    19c2:	80 95       	com	r24
    19c4:	70 95       	com	r23
    19c6:	61 95       	neg	r22
    19c8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ca:	8f 4f       	sbci	r24, 0xFF	; 255
    19cc:	9f 4f       	sbci	r25, 0xFF	; 255
    19ce:	08 95       	ret

000019d0 <__muluhisi3>:
    19d0:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__umulhisi3>
    19d4:	a5 9f       	mul	r26, r21
    19d6:	90 0d       	add	r25, r0
    19d8:	b4 9f       	mul	r27, r20
    19da:	90 0d       	add	r25, r0
    19dc:	a4 9f       	mul	r26, r20
    19de:	80 0d       	add	r24, r0
    19e0:	91 1d       	adc	r25, r1
    19e2:	11 24       	eor	r1, r1
    19e4:	08 95       	ret

000019e6 <__mulshisi3>:
    19e6:	b7 ff       	sbrs	r27, 7
    19e8:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <__muluhisi3>

000019ec <__mulohisi3>:
    19ec:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__muluhisi3>
    19f0:	82 1b       	sub	r24, r18
    19f2:	93 0b       	sbc	r25, r19
    19f4:	08 95       	ret

000019f6 <__prologue_saves__>:
    19f6:	2f 92       	push	r2
    19f8:	3f 92       	push	r3
    19fa:	4f 92       	push	r4
    19fc:	5f 92       	push	r5
    19fe:	6f 92       	push	r6
    1a00:	7f 92       	push	r7
    1a02:	8f 92       	push	r8
    1a04:	9f 92       	push	r9
    1a06:	af 92       	push	r10
    1a08:	bf 92       	push	r11
    1a0a:	cf 92       	push	r12
    1a0c:	df 92       	push	r13
    1a0e:	ef 92       	push	r14
    1a10:	ff 92       	push	r15
    1a12:	0f 93       	push	r16
    1a14:	1f 93       	push	r17
    1a16:	cf 93       	push	r28
    1a18:	df 93       	push	r29
    1a1a:	cd b7       	in	r28, 0x3d	; 61
    1a1c:	de b7       	in	r29, 0x3e	; 62
    1a1e:	ca 1b       	sub	r28, r26
    1a20:	db 0b       	sbc	r29, r27
    1a22:	0f b6       	in	r0, 0x3f	; 63
    1a24:	f8 94       	cli
    1a26:	de bf       	out	0x3e, r29	; 62
    1a28:	0f be       	out	0x3f, r0	; 63
    1a2a:	cd bf       	out	0x3d, r28	; 61
    1a2c:	09 94       	ijmp

00001a2e <__epilogue_restores__>:
    1a2e:	2a 88       	ldd	r2, Y+18	; 0x12
    1a30:	39 88       	ldd	r3, Y+17	; 0x11
    1a32:	48 88       	ldd	r4, Y+16	; 0x10
    1a34:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a36:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a38:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a3a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a3c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a3e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a40:	b9 84       	ldd	r11, Y+9	; 0x09
    1a42:	c8 84       	ldd	r12, Y+8	; 0x08
    1a44:	df 80       	ldd	r13, Y+7	; 0x07
    1a46:	ee 80       	ldd	r14, Y+6	; 0x06
    1a48:	fd 80       	ldd	r15, Y+5	; 0x05
    1a4a:	0c 81       	ldd	r16, Y+4	; 0x04
    1a4c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a4e:	aa 81       	ldd	r26, Y+2	; 0x02
    1a50:	b9 81       	ldd	r27, Y+1	; 0x01
    1a52:	ce 0f       	add	r28, r30
    1a54:	d1 1d       	adc	r29, r1
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	f8 94       	cli
    1a5a:	de bf       	out	0x3e, r29	; 62
    1a5c:	0f be       	out	0x3f, r0	; 63
    1a5e:	cd bf       	out	0x3d, r28	; 61
    1a60:	ed 01       	movw	r28, r26
    1a62:	08 95       	ret

00001a64 <__udivmodsi4>:
    1a64:	a1 e2       	ldi	r26, 0x21	; 33
    1a66:	1a 2e       	mov	r1, r26
    1a68:	aa 1b       	sub	r26, r26
    1a6a:	bb 1b       	sub	r27, r27
    1a6c:	fd 01       	movw	r30, r26
    1a6e:	0d c0       	rjmp	.+26     	; 0x1a8a <__udivmodsi4_ep>

00001a70 <__udivmodsi4_loop>:
    1a70:	aa 1f       	adc	r26, r26
    1a72:	bb 1f       	adc	r27, r27
    1a74:	ee 1f       	adc	r30, r30
    1a76:	ff 1f       	adc	r31, r31
    1a78:	a2 17       	cp	r26, r18
    1a7a:	b3 07       	cpc	r27, r19
    1a7c:	e4 07       	cpc	r30, r20
    1a7e:	f5 07       	cpc	r31, r21
    1a80:	20 f0       	brcs	.+8      	; 0x1a8a <__udivmodsi4_ep>
    1a82:	a2 1b       	sub	r26, r18
    1a84:	b3 0b       	sbc	r27, r19
    1a86:	e4 0b       	sbc	r30, r20
    1a88:	f5 0b       	sbc	r31, r21

00001a8a <__udivmodsi4_ep>:
    1a8a:	66 1f       	adc	r22, r22
    1a8c:	77 1f       	adc	r23, r23
    1a8e:	88 1f       	adc	r24, r24
    1a90:	99 1f       	adc	r25, r25
    1a92:	1a 94       	dec	r1
    1a94:	69 f7       	brne	.-38     	; 0x1a70 <__udivmodsi4_loop>
    1a96:	60 95       	com	r22
    1a98:	70 95       	com	r23
    1a9a:	80 95       	com	r24
    1a9c:	90 95       	com	r25
    1a9e:	9b 01       	movw	r18, r22
    1aa0:	ac 01       	movw	r20, r24
    1aa2:	bd 01       	movw	r22, r26
    1aa4:	cf 01       	movw	r24, r30
    1aa6:	08 95       	ret

00001aa8 <__umulhisi3>:
    1aa8:	a2 9f       	mul	r26, r18
    1aaa:	b0 01       	movw	r22, r0
    1aac:	b3 9f       	mul	r27, r19
    1aae:	c0 01       	movw	r24, r0
    1ab0:	a3 9f       	mul	r26, r19
    1ab2:	70 0d       	add	r23, r0
    1ab4:	81 1d       	adc	r24, r1
    1ab6:	11 24       	eor	r1, r1
    1ab8:	91 1d       	adc	r25, r1
    1aba:	b2 9f       	mul	r27, r18
    1abc:	70 0d       	add	r23, r0
    1abe:	81 1d       	adc	r24, r1
    1ac0:	11 24       	eor	r1, r1
    1ac2:	91 1d       	adc	r25, r1
    1ac4:	08 95       	ret

00001ac6 <_exit>:
    1ac6:	f8 94       	cli

00001ac8 <__stop_program>:
    1ac8:	ff cf       	rjmp	.-2      	; 0x1ac8 <__stop_program>
