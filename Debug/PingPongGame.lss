
PingPongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014c  00800100  000023da  0000246e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  0080024c  0080024c  000025ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000025ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002618  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00002654  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ca0  00000000  00000000  0000279c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cd0  00000000  00000000  0000443c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c17  00000000  00000000  0000510c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000044c  00000000  00000000  00005d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080b  00000000  00000000  00006170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ed6  00000000  00000000  0000697b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00007851  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b8 03 	jmp	0x770	; 0x770 <__ctors_end>
       4:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <__vector_1>
       8:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
       c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      10:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      14:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      18:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      1c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      20:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      24:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      28:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      2c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      30:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      34:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      38:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      3c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      40:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      44:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      48:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      4c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      50:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      54:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      58:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      5c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      60:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      64:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      68:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      6c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 07       	cpc	r19, r31
      9e:	63 42       	sbci	r22, 0x23	; 35
      a0:	36 b7       	in	r19, 0x36	; 54
      a2:	9b d8       	rcall	.-3786   	; 0xfffff1da <__eeprom_end+0xff7ef1da>
      a4:	a7 1a       	sub	r10, r23
      a6:	39 68       	ori	r19, 0x89	; 137
      a8:	56 18       	sub	r5, r6
      aa:	ae ba       	out	0x1e, r10	; 30
      ac:	ab 55       	subi	r26, 0x5B	; 91
      ae:	8c 1d       	adc	r24, r12
      b0:	3c b7       	in	r19, 0x3c	; 60
      b2:	cc 57       	subi	r28, 0x7C	; 124
      b4:	63 bd       	out	0x23, r22	; 35
      b6:	6d ed       	ldi	r22, 0xDD	; 221
      b8:	fd 75       	andi	r31, 0x5D	; 93
      ba:	3e f6       	brtc	.-114    	; 0x4a <__SREG__+0xb>
      bc:	17 72       	andi	r17, 0x27	; 39
      be:	31 bf       	out	0x31, r19	; 49
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	3f 08       	sbc	r3, r15
      c6:	00 00       	nop
      c8:	00 be       	out	0x30, r0	; 48
      ca:	92 24       	eor	r9, r2
      cc:	49 12       	cpse	r4, r25
      ce:	3e ab       	std	Y+54, r19	; 0x36
      d0:	aa aa       	std	Y+50, r10	; 0x32
      d2:	2a be       	out	0x3a, r2	; 58
      d4:	cd cc       	rjmp	.-1638   	; 0xfffffa70 <__eeprom_end+0xff7efa70>
      d6:	cc 4c       	sbci	r28, 0xCC	; 204
      d8:	3e 00       	.word	0x003e	; ????
      da:	00 00       	nop
      dc:	80 be       	out	0x30, r8	; 48
      de:	ab aa       	std	Y+51, r10	; 0x33
      e0:	aa aa       	std	Y+50, r10	; 0x32
      e2:	3e 00       	.word	0x003e	; ????
      e4:	00 00       	nop
      e6:	00 bf       	out	0x30, r16	; 48
      e8:	00 00       	nop
      ea:	00 80       	ld	r0, Z
      ec:	3f 00       	.word	0x003f	; ????
      ee:	00 00       	nop
      f0:	00 00       	nop
      f2:	08 41       	sbci	r16, 0x18	; 24
      f4:	78 d3       	rcall	.+1776   	; 0x7e6 <adc_read>
      f6:	bb 43       	sbci	r27, 0x3B	; 59
      f8:	87 d1       	rcall	.+782    	; 0x408 <__DATA_REGION_LENGTH__+0x8>
      fa:	13 3d       	cpi	r17, 0xD3	; 211
      fc:	19 0e       	add	r1, r25
      fe:	3c c3       	rjmp	.+1656   	; 0x778 <__ctors_end+0x8>
     100:	bd 42       	sbci	r27, 0x2D	; 45
     102:	82 ad       	ldd	r24, Z+58	; 0x3a
     104:	2b 3e       	cpi	r18, 0xEB	; 235
     106:	68 ec       	ldi	r22, 0xC8	; 200
     108:	82 76       	andi	r24, 0x62	; 98
     10a:	be d9       	rcall	.-3204   	; 0xfffff488 <__eeprom_end+0xff7ef488>
     10c:	8f e1       	ldi	r24, 0x1F	; 31
     10e:	a9 3e       	cpi	r26, 0xE9	; 233
     110:	4c 80       	ldd	r4, Y+4	; 0x04
     112:	ef ff       	.word	0xffef	; ????
     114:	be 01       	movw	r22, r28
     116:	c4 ff       	sbrs	r28, 4
     118:	7f 3f       	cpi	r23, 0xFF	; 255
     11a:	00 00       	nop
     11c:	00 00       	nop
	...

00000120 <__trampolines_end>:
     120:	00 00       	nop
     122:	00 00       	nop
     124:	00 5c       	subi	r16, 0xC0	; 192
     126:	00 00       	nop
     128:	0c 00       	.word	0x000c	; ????
     12a:	0c 00       	.word	0x000c	; ????
     12c:	7c 28       	or	r7, r12
     12e:	7c 28       	or	r7, r12
     130:	58 dc       	rcall	.-1872   	; 0xfffff9e2 <__eeprom_end+0xff7ef9e2>
     132:	68 00       	.word	0x0068	; ????
     134:	24 10       	cpse	r2, r4
     136:	48 00       	.word	0x0048	; ????
     138:	28 54       	subi	r18, 0x48	; 72
     13a:	28 40       	sbci	r18, 0x08	; 8
     13c:	00 0c       	add	r0, r0
     13e:	00 00       	nop
     140:	00 78       	andi	r16, 0x80	; 128
     142:	84 00       	.word	0x0084	; ????
     144:	84 78       	andi	r24, 0x84	; 132
     146:	00 00       	nop
     148:	54 38       	cpi	r21, 0x84	; 132
     14a:	54 00       	.word	0x0054	; ????
     14c:	10 7c       	andi	r17, 0xC0	; 192
     14e:	10 00       	.word	0x0010	; ????
     150:	80 40       	sbci	r24, 0x00	; 0
     152:	00 00       	nop
     154:	10 10       	cpse	r1, r0
     156:	10 00       	.word	0x0010	; ????
     158:	00 40       	sbci	r16, 0x00	; 0
     15a:	00 00       	nop
     15c:	60 10       	cpse	r6, r0
     15e:	0c 00       	.word	0x000c	; ????
     160:	38 54       	subi	r19, 0x48	; 72
     162:	38 00       	.word	0x0038	; ????
     164:	48 7c       	andi	r20, 0xC8	; 200
     166:	40 00       	.word	0x0040	; ????
     168:	48 64       	ori	r20, 0x48	; 72
     16a:	58 00       	.word	0x0058	; ????
     16c:	44 54       	subi	r20, 0x44	; 68
     16e:	2c 00       	.word	0x002c	; ????
     170:	1c 10       	cpse	r1, r12
     172:	7c 00       	.word	0x007c	; ????
     174:	5c 54       	subi	r21, 0x4C	; 76
     176:	24 00       	.word	0x0024	; ????
     178:	38 54       	subi	r19, 0x48	; 72
     17a:	24 00       	.word	0x0024	; ????
     17c:	64 14       	cp	r6, r4
     17e:	0c 00       	.word	0x000c	; ????
     180:	68 54       	subi	r22, 0x48	; 72
     182:	2c 00       	.word	0x002c	; ????
     184:	48 54       	subi	r20, 0x48	; 72
     186:	38 00       	.word	0x0038	; ????
     188:	00 48       	sbci	r16, 0x80	; 128
     18a:	00 00       	nop
     18c:	80 48       	sbci	r24, 0x80	; 128
     18e:	00 00       	nop
     190:	10 28       	or	r1, r0
     192:	44 00       	.word	0x0044	; ????
     194:	28 28       	or	r2, r8
     196:	28 00       	.word	0x0028	; ????
     198:	44 28       	or	r4, r4
     19a:	10 00       	.word	0x0010	; ????
     19c:	04 54       	subi	r16, 0x44	; 68
     19e:	08 00       	.word	0x0008	; ????
     1a0:	38 44       	sbci	r19, 0x48	; 72
     1a2:	5c 00       	.word	0x005c	; ????
     1a4:	78 14       	cp	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	7c 54       	subi	r23, 0x4C	; 76
     1aa:	28 00       	.word	0x0028	; ????
     1ac:	38 44       	sbci	r19, 0x48	; 72
     1ae:	28 00       	.word	0x0028	; ????
     1b0:	7c 44       	sbci	r23, 0x4C	; 76
     1b2:	38 00       	.word	0x0038	; ????
     1b4:	7c 54       	subi	r23, 0x4C	; 76
     1b6:	44 00       	.word	0x0044	; ????
     1b8:	7c 14       	cp	r7, r12
     1ba:	04 00       	.word	0x0004	; ????
     1bc:	38 44       	sbci	r19, 0x48	; 72
     1be:	74 00       	.word	0x0074	; ????
     1c0:	7c 10       	cpse	r7, r12
     1c2:	7c 00       	.word	0x007c	; ????
     1c4:	44 7c       	andi	r20, 0xC4	; 196
     1c6:	44 00       	.word	0x0044	; ????
     1c8:	20 40       	sbci	r18, 0x00	; 0
     1ca:	3c 00       	.word	0x003c	; ????
     1cc:	7c 10       	cpse	r7, r12
     1ce:	6c 00       	.word	0x006c	; ????
     1d0:	7c 40       	sbci	r23, 0x0C	; 12
     1d2:	40 00       	.word	0x0040	; ????
     1d4:	7c 18       	sub	r7, r12
     1d6:	7c 00       	.word	0x007c	; ????
     1d8:	78 10       	cpse	r7, r8
     1da:	3c 00       	.word	0x003c	; ????
     1dc:	38 44       	sbci	r19, 0x48	; 72
     1de:	38 00       	.word	0x0038	; ????
     1e0:	7c 14       	cp	r7, r12
     1e2:	08 00       	.word	0x0008	; ????
     1e4:	38 44       	sbci	r19, 0x48	; 72
     1e6:	b8 00       	.word	0x00b8	; ????
     1e8:	7c 14       	cp	r7, r12
     1ea:	68 00       	.word	0x0068	; ????
     1ec:	48 54       	subi	r20, 0x48	; 72
     1ee:	24 00       	.word	0x0024	; ????
     1f0:	04 7c       	andi	r16, 0xC4	; 196
     1f2:	04 00       	.word	0x0004	; ????
     1f4:	7c 40       	sbci	r23, 0x0C	; 12
     1f6:	7c 00       	.word	0x007c	; ????
     1f8:	3c 60       	ori	r19, 0x0C	; 12
     1fa:	3c 00       	.word	0x003c	; ????
     1fc:	7c 30       	cpi	r23, 0x0C	; 12
     1fe:	7c 00       	.word	0x007c	; ????
     200:	6c 10       	cpse	r6, r12
     202:	6c 00       	.word	0x006c	; ????
     204:	0c 70       	andi	r16, 0x0C	; 12
     206:	0c 00       	.word	0x000c	; ????
     208:	64 54       	subi	r22, 0x44	; 68
     20a:	4c 00       	.word	0x004c	; ????
     20c:	00 7c       	andi	r16, 0xC0	; 192
     20e:	44 00       	.word	0x0044	; ????
     210:	0c 10       	cpse	r0, r12
     212:	60 00       	.word	0x0060	; ????
     214:	44 7c       	andi	r20, 0xC4	; 196
     216:	00 00       	nop
     218:	08 04       	cpc	r0, r8
     21a:	08 00       	.word	0x0008	; ????
     21c:	80 80       	ld	r8, Z
     21e:	80 00       	.word	0x0080	; ????
     220:	00 04       	cpc	r0, r0
     222:	08 00       	.word	0x0008	; ????
     224:	30 48       	sbci	r19, 0x80	; 128
     226:	78 00       	.word	0x0078	; ????
     228:	7c 48       	sbci	r23, 0x8C	; 140
     22a:	30 00       	.word	0x0030	; ????
     22c:	30 48       	sbci	r19, 0x80	; 128
     22e:	48 00       	.word	0x0048	; ????
     230:	30 48       	sbci	r19, 0x80	; 128
     232:	7c 00       	.word	0x007c	; ????
     234:	30 68       	ori	r19, 0x80	; 128
     236:	50 00       	.word	0x0050	; ????
     238:	10 78       	andi	r17, 0x80	; 128
     23a:	14 00       	.word	0x0014	; ????
     23c:	90 a8       	ldd	r9, Z+48	; 0x30
     23e:	78 00       	.word	0x0078	; ????
     240:	7c 08       	sbc	r7, r12
     242:	70 00       	.word	0x0070	; ????
     244:	50 74       	andi	r21, 0x40	; 64
     246:	40 00       	.word	0x0040	; ????
     248:	80 80       	ld	r8, Z
     24a:	74 00       	.word	0x0074	; ????
     24c:	7c 10       	cpse	r7, r12
     24e:	68 00       	.word	0x0068	; ????
     250:	44 7c       	andi	r20, 0xC4	; 196
     252:	40 00       	.word	0x0040	; ????
     254:	78 10       	cpse	r7, r8
     256:	78 00       	.word	0x0078	; ????
     258:	78 08       	sbc	r7, r8
     25a:	70 00       	.word	0x0070	; ????
     25c:	30 48       	sbci	r19, 0x80	; 128
     25e:	30 00       	.word	0x0030	; ????
     260:	f8 28       	or	r15, r8
     262:	10 00       	.word	0x0010	; ????
     264:	30 48       	sbci	r19, 0x80	; 128
     266:	f8 00       	.word	0x00f8	; ????
     268:	78 10       	cpse	r7, r8
     26a:	08 00       	.word	0x0008	; ????
     26c:	50 58       	subi	r21, 0x80	; 128
     26e:	28 00       	.word	0x0028	; ????
     270:	08 3c       	cpi	r16, 0xC8	; 200
     272:	48 00       	.word	0x0048	; ????
     274:	38 40       	sbci	r19, 0x08	; 8
     276:	78 00       	.word	0x0078	; ????
     278:	38 40       	sbci	r19, 0x08	; 8
     27a:	38 00       	.word	0x0038	; ????
     27c:	78 20       	and	r7, r8
     27e:	78 00       	.word	0x0078	; ????
     280:	48 30       	cpi	r20, 0x08	; 8
     282:	48 00       	.word	0x0048	; ????
     284:	98 a0       	ldd	r9, Y+32	; 0x20
     286:	78 00       	.word	0x0078	; ????
     288:	48 68       	ori	r20, 0x88	; 136
     28a:	58 00       	.word	0x0058	; ????
     28c:	10 78       	andi	r17, 0x80	; 128
     28e:	84 00       	.word	0x0084	; ????
     290:	00 7c       	andi	r16, 0xC0	; 192
     292:	00 00       	nop
     294:	84 78       	andi	r24, 0x84	; 132
     296:	10 00       	.word	0x0010	; ????
     298:	08 04       	cpc	r0, r8
     29a:	08 04       	cpc	r0, r8

0000029c <font5>:
     29c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     2ac:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     2bc:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     2cc:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     2dc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     2ec:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     2fc:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     30c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     31c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     32c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     33c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     34c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     35c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     36c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     37c:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     38c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     39c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     3ac:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     3bc:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     3cc:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     3dc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     3ec:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     3fc:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     40c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     41c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     42c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     43c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     44c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     45c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     46c:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

00000477 <font8>:
	...
     47f:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     48f:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     49f:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     4af:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     4bf:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     4cf:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     4df:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     4ef:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     4ff:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     50f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     51f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     52f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     53f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     54f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     55f:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     56f:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     57f:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     58f:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     59f:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     5af:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     5bf:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     5cf:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     5df:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     5ef:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     5ff:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     60f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     61f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     62f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     63f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     64f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     65f:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     66f:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     67f:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     68f:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     69f:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     6af:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     6bf:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     6cf:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     6df:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     6ef:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     6ff:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     70f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     71f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     72f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     73f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     74f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     75f:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

00000770 <__ctors_end>:
     770:	11 24       	eor	r1, r1
     772:	1f be       	out	0x3f, r1	; 63
     774:	cf ef       	ldi	r28, 0xFF	; 255
     776:	d4 e0       	ldi	r29, 0x04	; 4
     778:	de bf       	out	0x3e, r29	; 62
     77a:	cd bf       	out	0x3d, r28	; 61

0000077c <__do_copy_data>:
     77c:	12 e0       	ldi	r17, 0x02	; 2
     77e:	a0 e0       	ldi	r26, 0x00	; 0
     780:	b1 e0       	ldi	r27, 0x01	; 1
     782:	ea ed       	ldi	r30, 0xDA	; 218
     784:	f3 e2       	ldi	r31, 0x23	; 35
     786:	02 c0       	rjmp	.+4      	; 0x78c <__do_copy_data+0x10>
     788:	05 90       	lpm	r0, Z+
     78a:	0d 92       	st	X+, r0
     78c:	ac 34       	cpi	r26, 0x4C	; 76
     78e:	b1 07       	cpc	r27, r17
     790:	d9 f7       	brne	.-10     	; 0x788 <__do_copy_data+0xc>

00000792 <__do_clear_bss>:
     792:	22 e0       	ldi	r18, 0x02	; 2
     794:	ac e4       	ldi	r26, 0x4C	; 76
     796:	b2 e0       	ldi	r27, 0x02	; 2
     798:	01 c0       	rjmp	.+2      	; 0x79c <.do_clear_bss_start>

0000079a <.do_clear_bss_loop>:
     79a:	1d 92       	st	X+, r1

0000079c <.do_clear_bss_start>:
     79c:	ab 35       	cpi	r26, 0x5B	; 91
     79e:	b2 07       	cpc	r27, r18
     7a0:	e1 f7       	brne	.-8      	; 0x79a <.do_clear_bss_loop>
     7a2:	0e 94 57 06 	call	0xcae	; 0xcae <main>
     7a6:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <_exit>

000007aa <__bad_interrupt>:
     7aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000007ae <initPWM>:
void initPWM() {
	
	// PD4 OC3A (Timer/Counter3 Output Compare A Match Output
	
    // Set pP as an output pin
    DDRD |= (1 << PD4);
     7ae:	81 b3       	in	r24, 0x11	; 17
     7b0:	80 61       	ori	r24, 0x10	; 16
     7b2:	81 bb       	out	0x11, r24	; 17
	
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
     7b4:	89 e6       	ldi	r24, 0x69	; 105
     7b6:	83 bf       	out	0x33, r24	; 51

    // Set non-inverting mode for OC3A (Clear on Compare Match)
    // Set Fast PWM mode with TOP value at ICR3
	
    TCCR3A |= (1 << WGM31) | (0 << WGM30) | (1 << COM3A1);
     7b8:	eb e8       	ldi	r30, 0x8B	; 139
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	80 81       	ld	r24, Z
     7be:	82 68       	ori	r24, 0x82	; 130
     7c0:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM33) | (1 << WGM32) | (1 << CS30);
     7c2:	ea e8       	ldi	r30, 0x8A	; 138
     7c4:	f0 e0       	ldi	r31, 0x00	; 0
     7c6:	80 81       	ld	r24, Z
     7c8:	89 61       	ori	r24, 0x19	; 25
     7ca:	80 83       	st	Z, r24
	
	ICR3 = 5;
     7cc:	85 e0       	ldi	r24, 0x05	; 5
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     7d4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7fc080>
    OCR3A = 2;
     7d8:	82 e0       	ldi	r24, 0x02	; 2
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     7e0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     7e4:	08 95       	ret

000007e6 <adc_read>:
}



struct adc_output adc_read()
{
     7e6:	0f 93       	push	r16
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
	
	volatile char *adc = (char *) 0x1400; // Start address for the ADC
	adc[0] = 0x01;
     7ee:	e0 e0       	ldi	r30, 0x00	; 0
     7f0:	f4 e1       	ldi	r31, 0x14	; 20
     7f2:	81 e0       	ldi	r24, 0x01	; 1
     7f4:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7f6:	86 ea       	ldi	r24, 0xA6	; 166
     7f8:	8a 95       	dec	r24
     7fa:	f1 f7       	brne	.-4      	; 0x7f8 <adc_read+0x12>
     7fc:	00 c0       	rjmp	.+0      	; 0x7fe <adc_read+0x18>
	// tCONV = (9 x N x 2)/fCLK
	// (9*8*2)/819138 = 175.79455e-6
	_delay_us(500);
	uint8_t joystick_y = adc[0];
     7fe:	10 81       	ld	r17, Z
	uint8_t joystick_x = adc[0];
     800:	00 81       	ld	r16, Z
	uint8_t left_slider = adc[0];
     802:	d0 81       	ld	r29, Z
	uint8_t right_slider = adc[0];
     804:	c0 81       	ld	r28, Z
	printf("%02X, %02X, %02X, %02X \r\n", joystick_y, joystick_x, left_slider, right_slider);
     806:	1f 92       	push	r1
     808:	cf 93       	push	r28
     80a:	1f 92       	push	r1
     80c:	df 93       	push	r29
     80e:	1f 92       	push	r1
     810:	0f 93       	push	r16
     812:	1f 92       	push	r1
     814:	1f 93       	push	r17
     816:	8a e0       	ldi	r24, 0x0A	; 10
     818:	91 e0       	ldi	r25, 0x01	; 1
     81a:	9f 93       	push	r25
     81c:	8f 93       	push	r24
     81e:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
	//double joystick_angle = get_joystick_angle(joystick_x, joystick_y);
	//printf("angle: %f", joystick_angle);
	
	 struct adc_output output = {joystick_x, joystick_y, left_slider, right_slider};
		 
	 return output;
     822:	8d b7       	in	r24, 0x3d	; 61
     824:	9e b7       	in	r25, 0x3e	; 62
     826:	0a 96       	adiw	r24, 0x0a	; 10
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	9e bf       	out	0x3e, r25	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	8d bf       	out	0x3d, r24	; 61
	//return 0;
	
}
     832:	60 2f       	mov	r22, r16
     834:	71 2f       	mov	r23, r17
     836:	8d 2f       	mov	r24, r29
     838:	9c 2f       	mov	r25, r28
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	08 95       	ret

00000844 <setup_joystick>:
uint8_t originJoystickPositionX = 0;
uint8_t originJoystickPositionY = 0;

void setup_joystick()
{
	struct adc_output initValues = adc_read();
     844:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <adc_read>
	originJoystickPositionX = initValues.joystick_x;
     848:	70 93 4d 02 	sts	0x024D, r23	; 0x80024d <originJoystickPositionX>
	originJoystickPositionY = initValues.joystick_y;
     84c:	60 93 4c 02 	sts	0x024C, r22	; 0x80024c <__data_end>
     850:	08 95       	ret

00000852 <get_joystick_angle>:
}

double get_joystick_angle(double joystick_x, double joystick_y)
{
	// in radians
	return atan2(joystick_x, joystick_y);
     852:	0e 94 bf 08 	call	0x117e	; 0x117e <atan2>
}
     856:	08 95       	ret

00000858 <get_joystick_distance>:

double get_joystick_distance(double joystick_x, double joystick_y)
{
     858:	8f 92       	push	r8
     85a:	9f 92       	push	r9
     85c:	af 92       	push	r10
     85e:	bf 92       	push	r11
     860:	cf 92       	push	r12
     862:	df 92       	push	r13
     864:	ef 92       	push	r14
     866:	ff 92       	push	r15
     868:	49 01       	movw	r8, r18
     86a:	5a 01       	movw	r10, r20
	double pow_x = pow(joystick_x, 2);
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e0       	ldi	r20, 0x00	; 0
     872:	50 e4       	ldi	r21, 0x40	; 64
     874:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <pow>
     878:	6b 01       	movw	r12, r22
     87a:	7c 01       	movw	r14, r24
	double pow_y = pow(joystick_y, 2);
     87c:	20 e0       	ldi	r18, 0x00	; 0
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	50 e4       	ldi	r21, 0x40	; 64
     884:	c5 01       	movw	r24, r10
     886:	b4 01       	movw	r22, r8
     888:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <pow>
     88c:	4b 01       	movw	r8, r22
     88e:	5c 01       	movw	r10, r24
	
	return sqrt(pow_x + pow_y);
     890:	a5 01       	movw	r20, r10
     892:	94 01       	movw	r18, r8
     894:	c7 01       	movw	r24, r14
     896:	b6 01       	movw	r22, r12
     898:	0e 94 40 08 	call	0x1080	; 0x1080 <__addsf3>
     89c:	0e 94 3a 0b 	call	0x1674	; 0x1674 <sqrt>
}
     8a0:	ff 90       	pop	r15
     8a2:	ef 90       	pop	r14
     8a4:	df 90       	pop	r13
     8a6:	cf 90       	pop	r12
     8a8:	bf 90       	pop	r11
     8aa:	af 90       	pop	r10
     8ac:	9f 90       	pop	r9
     8ae:	8f 90       	pop	r8
     8b0:	08 95       	ret

000008b2 <normalize_position>:

double normalize_position(uint8_t currentValue, uint8_t centerValue, uint8_t minValue, uint8_t maxValue)
{
     8b2:	4f 92       	push	r4
     8b4:	5f 92       	push	r5
     8b6:	6f 92       	push	r6
     8b8:	7f 92       	push	r7
     8ba:	bf 92       	push	r11
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	00 d0       	rcall	.+0      	; 0x8ce <normalize_position+0x1c>
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <normalize_position+0x1e>
     8d0:	1f 92       	push	r1
     8d2:	cd b7       	in	r28, 0x3d	; 61
     8d4:	de b7       	in	r29, 0x3e	; 62
     8d6:	16 2f       	mov	r17, r22
     8d8:	b4 2e       	mov	r11, r20
     8da:	02 2f       	mov	r16, r18
	volatile uint8_t curVa = currentValue;
     8dc:	89 83       	std	Y+1, r24	; 0x01
	volatile double distance =  (double)((double)curVa  - (double)centerValue);
     8de:	69 81       	ldd	r22, Y+1	; 0x01
     8e0:	70 e0       	ldi	r23, 0x00	; 0
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	0e 94 95 09 	call	0x132a	; 0x132a <__floatunsisf>
     8ea:	2b 01       	movw	r4, r22
     8ec:	3c 01       	movw	r6, r24
     8ee:	61 2f       	mov	r22, r17
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 95 09 	call	0x132a	; 0x132a <__floatunsisf>
     8fa:	6b 01       	movw	r12, r22
     8fc:	7c 01       	movw	r14, r24
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	c3 01       	movw	r24, r6
     904:	b2 01       	movw	r22, r4
     906:	0e 94 3f 08 	call	0x107e	; 0x107e <__subsf3>
     90a:	6a 83       	std	Y+2, r22	; 0x02
     90c:	7b 83       	std	Y+3, r23	; 0x03
     90e:	8c 83       	std	Y+4, r24	; 0x04
     910:	9d 83       	std	Y+5, r25	; 0x05

	if(distance > 0.0)
     912:	6a 81       	ldd	r22, Y+2	; 0x02
     914:	7b 81       	ldd	r23, Y+3	; 0x03
     916:	8c 81       	ldd	r24, Y+4	; 0x04
     918:	9d 81       	ldd	r25, Y+5	; 0x05
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	a9 01       	movw	r20, r18
     920:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     924:	18 16       	cp	r1, r24
     926:	ac f4       	brge	.+42     	; 0x952 <normalize_position+0xa0>
	{
		return distance / (((double)maxValue - (double)centerValue));
     928:	4a 80       	ldd	r4, Y+2	; 0x02
     92a:	5b 80       	ldd	r5, Y+3	; 0x03
     92c:	6c 80       	ldd	r6, Y+4	; 0x04
     92e:	7d 80       	ldd	r7, Y+5	; 0x05
     930:	60 2f       	mov	r22, r16
     932:	70 e0       	ldi	r23, 0x00	; 0
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	0e 94 95 09 	call	0x132a	; 0x132a <__floatunsisf>
     93c:	a7 01       	movw	r20, r14
     93e:	96 01       	movw	r18, r12
     940:	0e 94 3f 08 	call	0x107e	; 0x107e <__subsf3>
     944:	9b 01       	movw	r18, r22
     946:	ac 01       	movw	r20, r24
     948:	c3 01       	movw	r24, r6
     94a:	b2 01       	movw	r22, r4
     94c:	0e 94 23 09 	call	0x1246	; 0x1246 <__divsf3>
     950:	25 c0       	rjmp	.+74     	; 0x99c <normalize_position+0xea>
	}
	else if(distance < 0.0) {
     952:	6a 81       	ldd	r22, Y+2	; 0x02
     954:	7b 81       	ldd	r23, Y+3	; 0x03
     956:	8c 81       	ldd	r24, Y+4	; 0x04
     958:	9d 81       	ldd	r25, Y+5	; 0x05
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	a9 01       	movw	r20, r18
     960:	0e 94 1e 09 	call	0x123c	; 0x123c <__cmpsf2>
     964:	88 23       	and	r24, r24
     966:	bc f4       	brge	.+46     	; 0x996 <normalize_position+0xe4>
		return distance / (((double)centerValue - (double)minValue));
     968:	4a 80       	ldd	r4, Y+2	; 0x02
     96a:	5b 80       	ldd	r5, Y+3	; 0x03
     96c:	6c 80       	ldd	r6, Y+4	; 0x04
     96e:	7d 80       	ldd	r7, Y+5	; 0x05
     970:	6b 2d       	mov	r22, r11
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 95 09 	call	0x132a	; 0x132a <__floatunsisf>
     97c:	9b 01       	movw	r18, r22
     97e:	ac 01       	movw	r20, r24
     980:	c7 01       	movw	r24, r14
     982:	b6 01       	movw	r22, r12
     984:	0e 94 3f 08 	call	0x107e	; 0x107e <__subsf3>
     988:	9b 01       	movw	r18, r22
     98a:	ac 01       	movw	r20, r24
     98c:	c3 01       	movw	r24, r6
     98e:	b2 01       	movw	r22, r4
     990:	0e 94 23 09 	call	0x1246	; 0x1246 <__divsf3>
     994:	03 c0       	rjmp	.+6      	; 0x99c <normalize_position+0xea>
	}
	
	return 0.0;
     996:	60 e0       	ldi	r22, 0x00	; 0
     998:	70 e0       	ldi	r23, 0x00	; 0
     99a:	cb 01       	movw	r24, r22
}
     99c:	0f 90       	pop	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	0f 90       	pop	r0
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	ff 90       	pop	r15
     9b0:	ef 90       	pop	r14
     9b2:	df 90       	pop	r13
     9b4:	cf 90       	pop	r12
     9b6:	bf 90       	pop	r11
     9b8:	7f 90       	pop	r7
     9ba:	6f 90       	pop	r6
     9bc:	5f 90       	pop	r5
     9be:	4f 90       	pop	r4
     9c0:	08 95       	ret

000009c2 <get_joystick_position>:

void get_joystick_position(struct joystickPosition* position)
{
     9c2:	4f 92       	push	r4
     9c4:	5f 92       	push	r5
     9c6:	6f 92       	push	r6
     9c8:	7f 92       	push	r7
     9ca:	8f 92       	push	r8
     9cc:	9f 92       	push	r9
     9ce:	af 92       	push	r10
     9d0:	bf 92       	push	r11
     9d2:	cf 92       	push	r12
     9d4:	df 92       	push	r13
     9d6:	ef 92       	push	r14
     9d8:	ff 92       	push	r15
     9da:	0f 93       	push	r16
     9dc:	1f 93       	push	r17
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	cd b7       	in	r28, 0x3d	; 61
     9e4:	de b7       	in	r29, 0x3e	; 62
     9e6:	60 97       	sbiw	r28, 0x10	; 16
     9e8:	0f b6       	in	r0, 0x3f	; 63
     9ea:	f8 94       	cli
     9ec:	de bf       	out	0x3e, r29	; 62
     9ee:	0f be       	out	0x3f, r0	; 63
     9f0:	cd bf       	out	0x3d, r28	; 61
     9f2:	8c 01       	movw	r16, r24
		volatile double debugX;
		volatile double debugY;
		volatile double debugDistance;
		do 
		{
			newValues = adc_read();
     9f4:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <adc_read>
     9f8:	69 83       	std	Y+1, r22	; 0x01
     9fa:	7a 83       	std	Y+2, r23	; 0x02
     9fc:	8b 83       	std	Y+3, r24	; 0x03
     9fe:	9c 83       	std	Y+4, r25	; 0x04
			
			position->xNormalized = normalize_position(newValues.joystick_x, originJoystickPositionX, 0, 255);
     a00:	8a 81       	ldd	r24, Y+2	; 0x02
     a02:	2f ef       	ldi	r18, 0xFF	; 255
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	60 91 4d 02 	lds	r22, 0x024D	; 0x80024d <originJoystickPositionX>
     a0a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <normalize_position>
     a0e:	f8 01       	movw	r30, r16
     a10:	60 83       	st	Z, r22
     a12:	71 83       	std	Z+1, r23	; 0x01
     a14:	82 83       	std	Z+2, r24	; 0x02
     a16:	93 83       	std	Z+3, r25	; 0x03
			position->yNormalized = normalize_position(newValues.joystick_y, originJoystickPositionY, 0, 255);
     a18:	89 81       	ldd	r24, Y+1	; 0x01
     a1a:	2f ef       	ldi	r18, 0xFF	; 255
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	60 91 4c 02 	lds	r22, 0x024C	; 0x80024c <__data_end>
     a22:	0e 94 59 04 	call	0x8b2	; 0x8b2 <normalize_position>
     a26:	6b 01       	movw	r12, r22
     a28:	7c 01       	movw	r14, r24
     a2a:	f8 01       	movw	r30, r16
     a2c:	64 83       	std	Z+4, r22	; 0x04
     a2e:	75 83       	std	Z+5, r23	; 0x05
     a30:	86 83       	std	Z+6, r24	; 0x06
     a32:	97 83       	std	Z+7, r25	; 0x07
			debugX = position->xNormalized;
     a34:	40 80       	ld	r4, Z
     a36:	51 80       	ldd	r5, Z+1	; 0x01
     a38:	62 80       	ldd	r6, Z+2	; 0x02
     a3a:	73 80       	ldd	r7, Z+3	; 0x03
     a3c:	4d 82       	std	Y+5, r4	; 0x05
     a3e:	5e 82       	std	Y+6, r5	; 0x06
     a40:	6f 82       	std	Y+7, r6	; 0x07
     a42:	78 86       	std	Y+8, r7	; 0x08
			debugY = position->yNormalized;
     a44:	69 87       	std	Y+9, r22	; 0x09
     a46:	7a 87       	std	Y+10, r23	; 0x0a
     a48:	8b 87       	std	Y+11, r24	; 0x0b
     a4a:	9c 87       	std	Y+12, r25	; 0x0c
	
			position->angle = get_joystick_angle(position->xNormalized, position->yNormalized);
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	c3 01       	movw	r24, r6
     a52:	b2 01       	movw	r22, r4
     a54:	0e 94 29 04 	call	0x852	; 0x852 <get_joystick_angle>
     a58:	4b 01       	movw	r8, r22
     a5a:	5c 01       	movw	r10, r24
     a5c:	f8 01       	movw	r30, r16
     a5e:	60 87       	std	Z+8, r22	; 0x08
     a60:	71 87       	std	Z+9, r23	; 0x09
     a62:	82 87       	std	Z+10, r24	; 0x0a
     a64:	93 87       	std	Z+11, r25	; 0x0b
			angle = position->angle;
			position->distance = get_joystick_distance(position->xNormalized, position->yNormalized);
     a66:	a7 01       	movw	r20, r14
     a68:	96 01       	movw	r18, r12
     a6a:	c3 01       	movw	r24, r6
     a6c:	b2 01       	movw	r22, r4
     a6e:	0e 94 2c 04 	call	0x858	; 0x858 <get_joystick_distance>
     a72:	6b 01       	movw	r12, r22
     a74:	7c 01       	movw	r14, r24
     a76:	f8 01       	movw	r30, r16
     a78:	64 87       	std	Z+12, r22	; 0x0c
     a7a:	75 87       	std	Z+13, r23	; 0x0d
     a7c:	86 87       	std	Z+14, r24	; 0x0e
     a7e:	97 87       	std	Z+15, r25	; 0x0f

			debugDistance = position->distance;
     a80:	6d 87       	std	Y+13, r22	; 0x0d
     a82:	7e 87       	std	Y+14, r23	; 0x0e
     a84:	8f 87       	std	Y+15, r24	; 0x0f
     a86:	98 8b       	std	Y+16, r25	; 0x10
			

		} while (position->distance >= 1.41421356236);
     a88:	23 ef       	ldi	r18, 0xF3	; 243
     a8a:	34 e0       	ldi	r19, 0x04	; 4
     a8c:	45 eb       	ldi	r20, 0xB5	; 181
     a8e:	5f e3       	ldi	r21, 0x3F	; 63
     a90:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     a94:	88 23       	and	r24, r24
     a96:	0c f0       	brlt	.+2      	; 0xa9a <get_joystick_position+0xd8>
     a98:	ad cf       	rjmp	.-166    	; 0x9f4 <get_joystick_position+0x32>

		position->position = NEUTRAL;
     a9a:	84 e0       	ldi	r24, 0x04	; 4
     a9c:	f8 01       	movw	r30, r16
     a9e:	80 8b       	std	Z+16, r24	; 0x10
			RIGHT,
			UP,
			DOWN,
			NEUTRAL*/
			
		if(position->distance > 0.2)
     aa0:	2d ec       	ldi	r18, 0xCD	; 205
     aa2:	3c ec       	ldi	r19, 0xCC	; 204
     aa4:	4c e4       	ldi	r20, 0x4C	; 76
     aa6:	5e e3       	ldi	r21, 0x3E	; 62
     aa8:	c7 01       	movw	r24, r14
     aaa:	b6 01       	movw	r22, r12
     aac:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     ab0:	18 16       	cp	r1, r24
     ab2:	0c f0       	brlt	.+2      	; 0xab6 <get_joystick_position+0xf4>
     ab4:	6a c0       	rjmp	.+212    	; 0xb8a <get_joystick_position+0x1c8>
		{
			if(angle > M_PI_4 && angle < 3*M_PI_4)
     ab6:	2b ed       	ldi	r18, 0xDB	; 219
     ab8:	3f e0       	ldi	r19, 0x0F	; 15
     aba:	49 e4       	ldi	r20, 0x49	; 73
     abc:	5f e3       	ldi	r21, 0x3F	; 63
     abe:	c5 01       	movw	r24, r10
     ac0:	b4 01       	movw	r22, r8
     ac2:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     ac6:	18 16       	cp	r1, r24
     ac8:	b4 f4       	brge	.+44     	; 0xaf6 <get_joystick_position+0x134>
     aca:	24 ee       	ldi	r18, 0xE4	; 228
     acc:	3b ec       	ldi	r19, 0xCB	; 203
     ace:	46 e1       	ldi	r20, 0x16	; 22
     ad0:	50 e4       	ldi	r21, 0x40	; 64
     ad2:	c5 01       	movw	r24, r10
     ad4:	b4 01       	movw	r22, r8
     ad6:	0e 94 1e 09 	call	0x123c	; 0x123c <__cmpsf2>
     ada:	88 23       	and	r24, r24
     adc:	64 f4       	brge	.+24     	; 0xaf6 <get_joystick_position+0x134>
			{
				printf("UP");
     ade:	84 e2       	ldi	r24, 0x24	; 36
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
				position->position = UP;
     aea:	82 e0       	ldi	r24, 0x02	; 2
     aec:	f8 01       	movw	r30, r16
     aee:	80 8b       	std	Z+16, r24	; 0x10
     af0:	0f 90       	pop	r0
     af2:	0f 90       	pop	r0
     af4:	4a c0       	rjmp	.+148    	; 0xb8a <get_joystick_position+0x1c8>
			}
			else if(angle > 3*M_PI_4 || angle < -3*M_PI_4)
     af6:	24 ee       	ldi	r18, 0xE4	; 228
     af8:	3b ec       	ldi	r19, 0xCB	; 203
     afa:	46 e1       	ldi	r20, 0x16	; 22
     afc:	50 e4       	ldi	r21, 0x40	; 64
     afe:	c5 01       	movw	r24, r10
     b00:	b4 01       	movw	r22, r8
     b02:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     b06:	18 16       	cp	r1, r24
     b08:	54 f0       	brlt	.+20     	; 0xb1e <get_joystick_position+0x15c>
     b0a:	24 ee       	ldi	r18, 0xE4	; 228
     b0c:	3b ec       	ldi	r19, 0xCB	; 203
     b0e:	46 e1       	ldi	r20, 0x16	; 22
     b10:	50 ec       	ldi	r21, 0xC0	; 192
     b12:	c5 01       	movw	r24, r10
     b14:	b4 01       	movw	r22, r8
     b16:	0e 94 1e 09 	call	0x123c	; 0x123c <__cmpsf2>
     b1a:	88 23       	and	r24, r24
     b1c:	5c f4       	brge	.+22     	; 0xb34 <get_joystick_position+0x172>
			{
								printf("LEFt");
     b1e:	87 e2       	ldi	r24, 0x27	; 39
     b20:	91 e0       	ldi	r25, 0x01	; 1
     b22:	9f 93       	push	r25
     b24:	8f 93       	push	r24
     b26:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>

				position->position = LEFT;
     b2a:	f8 01       	movw	r30, r16
     b2c:	10 8a       	std	Z+16, r1	; 0x10
     b2e:	0f 90       	pop	r0
     b30:	0f 90       	pop	r0
     b32:	2b c0       	rjmp	.+86     	; 0xb8a <get_joystick_position+0x1c8>
			}
			else if(angle > -3*M_PI_4 && angle < -M_PI_4)
     b34:	24 ee       	ldi	r18, 0xE4	; 228
     b36:	3b ec       	ldi	r19, 0xCB	; 203
     b38:	46 e1       	ldi	r20, 0x16	; 22
     b3a:	50 ec       	ldi	r21, 0xC0	; 192
     b3c:	c5 01       	movw	r24, r10
     b3e:	b4 01       	movw	r22, r8
     b40:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__gesf2>
     b44:	18 16       	cp	r1, r24
     b46:	b4 f4       	brge	.+44     	; 0xb74 <get_joystick_position+0x1b2>
     b48:	2b ed       	ldi	r18, 0xDB	; 219
     b4a:	3f e0       	ldi	r19, 0x0F	; 15
     b4c:	49 e4       	ldi	r20, 0x49	; 73
     b4e:	5f eb       	ldi	r21, 0xBF	; 191
     b50:	c5 01       	movw	r24, r10
     b52:	b4 01       	movw	r22, r8
     b54:	0e 94 1e 09 	call	0x123c	; 0x123c <__cmpsf2>
     b58:	88 23       	and	r24, r24
     b5a:	64 f4       	brge	.+24     	; 0xb74 <get_joystick_position+0x1b2>
			{
								printf("DOWN");
     b5c:	8c e2       	ldi	r24, 0x2C	; 44
     b5e:	91 e0       	ldi	r25, 0x01	; 1
     b60:	9f 93       	push	r25
     b62:	8f 93       	push	r24
     b64:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>

				position->position = DOWN;
     b68:	83 e0       	ldi	r24, 0x03	; 3
     b6a:	f8 01       	movw	r30, r16
     b6c:	80 8b       	std	Z+16, r24	; 0x10
     b6e:	0f 90       	pop	r0
     b70:	0f 90       	pop	r0
     b72:	0b c0       	rjmp	.+22     	; 0xb8a <get_joystick_position+0x1c8>
			} else {
								printf("RIGHT");
     b74:	81 e3       	ldi	r24, 0x31	; 49
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	9f 93       	push	r25
     b7a:	8f 93       	push	r24
     b7c:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>

				position->position = RIGHT;
     b80:	81 e0       	ldi	r24, 0x01	; 1
     b82:	f8 01       	movw	r30, r16
     b84:	80 8b       	std	Z+16, r24	; 0x10
     b86:	0f 90       	pop	r0
     b88:	0f 90       	pop	r0
			}
		}
		
		
}
     b8a:	60 96       	adiw	r28, 0x10	; 16
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	de bf       	out	0x3e, r29	; 62
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	cd bf       	out	0x3d, r28	; 61
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	1f 91       	pop	r17
     b9c:	0f 91       	pop	r16
     b9e:	ff 90       	pop	r15
     ba0:	ef 90       	pop	r14
     ba2:	df 90       	pop	r13
     ba4:	cf 90       	pop	r12
     ba6:	bf 90       	pop	r11
     ba8:	af 90       	pop	r10
     baa:	9f 90       	pop	r9
     bac:	8f 90       	pop	r8
     bae:	7f 90       	pop	r7
     bb0:	6f 90       	pop	r6
     bb2:	5f 90       	pop	r5
     bb4:	4f 90       	pop	r4
     bb6:	08 95       	ret

00000bb8 <SRAM_test>:
void SRAM_test(void)
    {
     bb8:	ef 92       	push	r14
     bba:	ff 92       	push	r15
     bbc:	0f 93       	push	r16
     bbe:	1f 93       	push	r17
     bc0:	cf 93       	push	r28
     bc2:	df 93       	push	r29
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
        printf("Starting SRAM test...\n");
     bc4:	87 e3       	ldi	r24, 0x37	; 55
     bc6:	91 e0       	ldi	r25, 0x01	; 1
     bc8:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <puts>
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
     bcc:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <rand>
     bd0:	7c 01       	movw	r14, r24
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
     bd2:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <srand>
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     bd6:	c0 e0       	ldi	r28, 0x00	; 0
     bd8:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
     bda:	00 e0       	ldi	r16, 0x00	; 0
     bdc:	10 e0       	ldi	r17, 0x00	; 0
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     bde:	20 c0       	rjmp	.+64     	; 0xc20 <SRAM_test+0x68>
            uint8_t some_value = rand();
     be0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <rand>
            ext_ram[i] = some_value;
     be4:	fe 01       	movw	r30, r28
     be6:	f8 5e       	subi	r31, 0xE8	; 232
     be8:	80 83       	st	Z, r24
            uint8_t retreived_value = ext_ram[i];
     bea:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
     bec:	28 17       	cp	r18, r24
     bee:	b9 f0       	breq	.+46     	; 0xc1e <SRAM_test+0x66>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     bf0:	99 27       	eor	r25, r25
     bf2:	9f 93       	push	r25
     bf4:	8f 93       	push	r24
     bf6:	1f 92       	push	r1
     bf8:	2f 93       	push	r18
     bfa:	df 93       	push	r29
     bfc:	cf 93       	push	r28
     bfe:	8d e4       	ldi	r24, 0x4D	; 77
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	9f 93       	push	r25
     c04:	8f 93       	push	r24
     c06:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
                write_errors++;
     c0a:	0f 5f       	subi	r16, 0xFF	; 255
     c0c:	1f 4f       	sbci	r17, 0xFF	; 255
     c0e:	8d b7       	in	r24, 0x3d	; 61
     c10:	9e b7       	in	r25, 0x3e	; 62
     c12:	08 96       	adiw	r24, 0x08	; 8
     c14:	0f b6       	in	r0, 0x3f	; 63
     c16:	f8 94       	cli
     c18:	9e bf       	out	0x3e, r25	; 62
     c1a:	0f be       	out	0x3f, r0	; 63
     c1c:	8d bf       	out	0x3d, r24	; 61
        // rand() stores some internal state, so calling this function in a loop will
        // yield different seeds each time (unless srand() is called before this function)
        uint16_t seed = rand();
        // Write phase: Immediately check that the correct value was stored
        srand(seed);
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     c1e:	21 96       	adiw	r28, 0x01	; 1
     c20:	c1 15       	cp	r28, r1
     c22:	98 e0       	ldi	r25, 0x08	; 8
     c24:	d9 07       	cpc	r29, r25
     c26:	e0 f2       	brcs	.-72     	; 0xbe0 <SRAM_test+0x28>
                printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                write_errors++;
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
     c28:	c7 01       	movw	r24, r14
     c2a:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <srand>
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     c2e:	c0 e0       	ldi	r28, 0x00	; 0
     c30:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
    {
		volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
        uint16_t ext_ram_size = 0x800;
        uint16_t write_errors = 0;
        uint16_t retrieval_errors = 0;
     c32:	e1 2c       	mov	r14, r1
     c34:	f1 2c       	mov	r15, r1
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     c36:	20 c0       	rjmp	.+64     	; 0xc78 <SRAM_test+0xc0>
            uint8_t some_value = rand();
     c38:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <rand>
            uint8_t retreived_value = ext_ram[i];
     c3c:	fe 01       	movw	r30, r28
     c3e:	f8 5e       	subi	r31, 0xE8	; 232
     c40:	20 81       	ld	r18, Z
            if (retreived_value != some_value) {
     c42:	28 17       	cp	r18, r24
     c44:	c1 f0       	breq	.+48     	; 0xc76 <SRAM_test+0xbe>
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     c46:	99 27       	eor	r25, r25
     c48:	9f 93       	push	r25
     c4a:	8f 93       	push	r24
     c4c:	1f 92       	push	r1
     c4e:	2f 93       	push	r18
     c50:	df 93       	push	r29
     c52:	cf 93       	push	r28
     c54:	86 e8       	ldi	r24, 0x86	; 134
     c56:	91 e0       	ldi	r25, 0x01	; 1
     c58:	9f 93       	push	r25
     c5a:	8f 93       	push	r24
     c5c:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
                retrieval_errors++;
     c60:	8f ef       	ldi	r24, 0xFF	; 255
     c62:	e8 1a       	sub	r14, r24
     c64:	f8 0a       	sbc	r15, r24
     c66:	8d b7       	in	r24, 0x3d	; 61
     c68:	9e b7       	in	r25, 0x3e	; 62
     c6a:	08 96       	adiw	r24, 0x08	; 8
     c6c:	0f b6       	in	r0, 0x3f	; 63
     c6e:	f8 94       	cli
     c70:	9e bf       	out	0x3e, r25	; 62
     c72:	0f be       	out	0x3f, r0	; 63
     c74:	8d bf       	out	0x3d, r24	; 61
            }
        }
        // Retrieval phase: Check that no values were changed during or after the write phase
        srand(seed);
        // reset the PRNG to the state it had before the write phase
        for (uint16_t i = 0; i < ext_ram_size; i++) {
     c76:	21 96       	adiw	r28, 0x01	; 1
     c78:	c1 15       	cp	r28, r1
     c7a:	98 e0       	ldi	r25, 0x08	; 8
     c7c:	d9 07       	cpc	r29, r25
     c7e:	e0 f2       	brcs	.-72     	; 0xc38 <SRAM_test+0x80>
            if (retreived_value != some_value) {
                printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
                retrieval_errors++;
            }
        }
        printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     c80:	ff 92       	push	r15
     c82:	ef 92       	push	r14
     c84:	1f 93       	push	r17
     c86:	0f 93       	push	r16
     c88:	83 ec       	ldi	r24, 0xC3	; 195
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	9f 93       	push	r25
     c8e:	8f 93       	push	r24
     c90:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
     c94:	0f 90       	pop	r0
     c96:	0f 90       	pop	r0
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
     c9e:	0f 90       	pop	r0
     ca0:	df 91       	pop	r29
     ca2:	cf 91       	pop	r28
     ca4:	1f 91       	pop	r17
     ca6:	0f 91       	pop	r16
     ca8:	ff 90       	pop	r15
     caa:	ef 90       	pop	r14
     cac:	08 95       	ret

00000cae <main>:
enum PageEnum currentSelectedPage = MainPage;
struct ArrowPosition* ArrowPosition;

int main( void )
{
	USART_Init ( MYUBRR );
     cae:	8f e1       	ldi	r24, 0x1F	; 31
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 30 08 	call	0x1060	; 0x1060 <USART_Init>
	fdevopen(USART_Transmit, USART_Receive);
     cb6:	6b e3       	ldi	r22, 0x3B	; 59
     cb8:	78 e0       	ldi	r23, 0x08	; 8
     cba:	87 e3       	ldi	r24, 0x37	; 55
     cbc:	98 e0       	ldi	r25, 0x08	; 8
     cbe:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fdevopen>
	initPWM();
     cc2:	0e 94 d7 03 	call	0x7ae	; 0x7ae <initPWM>

	MCUCR |= (1 << SRE);
     cc6:	85 b7       	in	r24, 0x35	; 53
     cc8:	80 68       	ori	r24, 0x80	; 128
     cca:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(111 << XMM0);
     ccc:	80 b7       	in	r24, 0x30	; 48
     cce:	87 78       	andi	r24, 0x87	; 135
     cd0:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2);
     cd2:	80 b7       	in	r24, 0x30	; 48
     cd4:	80 62       	ori	r24, 0x20	; 32
     cd6:	80 bf       	out	0x30, r24	; 48
	
	EMCUCR |= (1 << SRW01) | (1 << SRW00);
     cd8:	86 b7       	in	r24, 0x36	; 54
     cda:	8c 60       	ori	r24, 0x0C	; 12
     cdc:	86 bf       	out	0x36, r24	; 54
	
	SRAM_test();
     cde:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <SRAM_test>
	setup_joystick();
     ce2:	0e 94 22 04 	call	0x844	; 0x844 <setup_joystick>
	
	
	DDRD  = 0b11111011;   // set PD2 to input 
     ce6:	8b ef       	ldi	r24, 0xFB	; 251
     ce8:	81 bb       	out	0x11, r24	; 17
	GICR |= (1<<INT0);     // Enable INT0 External Interrupt
     cea:	8b b7       	in	r24, 0x3b	; 59
     cec:	80 64       	ori	r24, 0x40	; 64
     cee:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1<<ISC01);   // Falling-Edge Triggered INT0
     cf0:	85 b7       	in	r24, 0x35	; 53
     cf2:	82 60       	ori	r24, 0x02	; 2
     cf4:	85 bf       	out	0x35, r24	; 53
	sei();     // Enable Interrupts	setup_joystick();
     cf6:	78 94       	sei
	
	struct joystickPosition* joystickPosition;
	
	OLED_init();
     cf8:	0e 94 df 06 	call	0xdbe	; 0xdbe <OLED_init>
	OLED_flush();
     cfc:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_flush>
	OLED_set_horizontal_mode();
     d00:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_set_horizontal_mode>
	OLED_reset_cursor();
     d04:	0e 94 44 07 	call	0xe88	; 0xe88 <OLED_reset_cursor>
	
	//char data[12] = "Hello world";
	//uint32_t length = sizeof(data)/sizeof(char);
	//OLED_write_string(&data, length);
	
	OLED_menu(ArrowPosition);
     d08:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <ArrowPosition>
     d0c:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <ArrowPosition+0x1>
     d10:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <OLED_menu>
	ArrowPosition->row = PageStartGame;
     d14:	e0 91 4f 02 	lds	r30, 0x024F	; 0x80024f <ArrowPosition>
     d18:	f0 91 50 02 	lds	r31, 0x0250	; 0x800250 <ArrowPosition+0x1>
     d1c:	82 e0       	ldi	r24, 0x02	; 2
     d1e:	80 83       	st	Z, r24
	ArrowPosition->collumn = MinCollum;
     d20:	e0 91 4f 02 	lds	r30, 0x024F	; 0x80024f <ArrowPosition>
     d24:	f0 91 50 02 	lds	r31, 0x0250	; 0x800250 <ArrowPosition+0x1>
     d28:	11 82       	std	Z+1, r1	; 0x01
	OLED_print_arrow(ArrowPosition->collumn, ArrowPosition->row);
     d2a:	e0 91 4f 02 	lds	r30, 0x024F	; 0x80024f <ArrowPosition>
     d2e:	f0 91 50 02 	lds	r31, 0x0250	; 0x800250 <ArrowPosition+0x1>
     d32:	60 81       	ld	r22, Z
     d34:	81 81       	ldd	r24, Z+1	; 0x01
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_print_arrow>
	

	while(1){
		//adc_read();
		// _delay_ms(100);
		get_joystick_position(joystickPosition);
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <get_joystick_position>
     d46:	fb cf       	rjmp	.-10     	; 0xd3e <main+0x90>

00000d48 <__vector_1>:
	*/
}


ISR(INT0_vect) 
{
     d48:	1f 92       	push	r1
     d4a:	0f 92       	push	r0
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	0f 92       	push	r0
     d50:	11 24       	eor	r1, r1
     d52:	2f 93       	push	r18
     d54:	3f 93       	push	r19
     d56:	4f 93       	push	r20
     d58:	5f 93       	push	r21
     d5a:	6f 93       	push	r22
     d5c:	7f 93       	push	r23
     d5e:	8f 93       	push	r24
     d60:	9f 93       	push	r25
     d62:	af 93       	push	r26
     d64:	bf 93       	push	r27
     d66:	ef 93       	push	r30
     d68:	ff 93       	push	r31
	 GIFR&= ~(1<<INTF0);
     d6a:	8a b7       	in	r24, 0x3a	; 58
     d6c:	8f 7b       	andi	r24, 0xBF	; 191
     d6e:	8a bf       	out	0x3a, r24	; 58
	 currentSelectedPage = OLED_page_selector(ArrowPosition);
     d70:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <ArrowPosition>
     d74:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <ArrowPosition+0x1>
     d78:	0e 94 20 08 	call	0x1040	; 0x1040 <OLED_page_selector>
     d7c:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <currentSelectedPage>
}
     d80:	ff 91       	pop	r31
     d82:	ef 91       	pop	r30
     d84:	bf 91       	pop	r27
     d86:	af 91       	pop	r26
     d88:	9f 91       	pop	r25
     d8a:	8f 91       	pop	r24
     d8c:	7f 91       	pop	r23
     d8e:	6f 91       	pop	r22
     d90:	5f 91       	pop	r21
     d92:	4f 91       	pop	r20
     d94:	3f 91       	pop	r19
     d96:	2f 91       	pop	r18
     d98:	0f 90       	pop	r0
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	0f 90       	pop	r0
     d9e:	1f 90       	pop	r1
     da0:	18 95       	reti

00000da2 <OLED_write_data>:
	OLED_flush();
	OLED_menu(ArrowPosition);
	OLED_print_arrow(ArrowPosition->collumn, arrow_row);
	ArrowPosition->row = arrow_row;
	
}
     da2:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfa5>
     da6:	81 e2       	ldi	r24, 0x21	; 33
     da8:	8a 95       	dec	r24
     daa:	f1 f7       	brne	.-4      	; 0xda8 <OLED_write_data+0x6>
     dac:	00 00       	nop
     dae:	08 95       	ret

00000db0 <OLED_write_command>:
     db0:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xda5>
     db4:	81 e2       	ldi	r24, 0x21	; 33
     db6:	8a 95       	dec	r24
     db8:	f1 f7       	brne	.-4      	; 0xdb6 <OLED_write_command+0x6>
     dba:	00 00       	nop
     dbc:	08 95       	ret

00000dbe <OLED_init>:
     dbe:	8e ea       	ldi	r24, 0xAE	; 174
     dc0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dc4:	81 ea       	ldi	r24, 0xA1	; 161
     dc6:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dca:	8a ed       	ldi	r24, 0xDA	; 218
     dcc:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dd0:	82 e1       	ldi	r24, 0x12	; 18
     dd2:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dd6:	88 ec       	ldi	r24, 0xC8	; 200
     dd8:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     ddc:	88 ea       	ldi	r24, 0xA8	; 168
     dde:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     de2:	8f e3       	ldi	r24, 0x3F	; 63
     de4:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     de8:	85 ed       	ldi	r24, 0xD5	; 213
     dea:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dee:	80 e8       	ldi	r24, 0x80	; 128
     df0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     df4:	81 e8       	ldi	r24, 0x81	; 129
     df6:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     dfa:	80 e5       	ldi	r24, 0x50	; 80
     dfc:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e00:	89 ed       	ldi	r24, 0xD9	; 217
     e02:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e06:	81 e2       	ldi	r24, 0x21	; 33
     e08:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e0c:	80 e2       	ldi	r24, 0x20	; 32
     e0e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e18:	80 e4       	ldi	r24, 0x40	; 64
     e1a:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e1e:	8b ed       	ldi	r24, 0xDB	; 219
     e20:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e24:	80 e3       	ldi	r24, 0x30	; 48
     e26:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e2a:	8d ea       	ldi	r24, 0xAD	; 173
     e2c:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e36:	84 ea       	ldi	r24, 0xA4	; 164
     e38:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e3c:	86 ea       	ldi	r24, 0xA6	; 166
     e3e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e42:	8f ea       	ldi	r24, 0xAF	; 175
     e44:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e48:	08 95       	ret

00000e4a <OLED_set_cursor>:
     e4a:	0f 93       	push	r16
     e4c:	1f 93       	push	r17
     e4e:	cf 93       	push	r28
     e50:	df 93       	push	r29
     e52:	08 2f       	mov	r16, r24
     e54:	16 2f       	mov	r17, r22
     e56:	d4 2f       	mov	r29, r20
     e58:	c2 2f       	mov	r28, r18
     e5a:	81 e2       	ldi	r24, 0x21	; 33
     e5c:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e60:	80 2f       	mov	r24, r16
     e62:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e66:	81 2f       	mov	r24, r17
     e68:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e6c:	82 e2       	ldi	r24, 0x22	; 34
     e6e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e72:	8d 2f       	mov	r24, r29
     e74:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e78:	8c 2f       	mov	r24, r28
     e7a:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     e7e:	df 91       	pop	r29
     e80:	cf 91       	pop	r28
     e82:	1f 91       	pop	r17
     e84:	0f 91       	pop	r16
     e86:	08 95       	ret

00000e88 <OLED_reset_cursor>:
     e88:	27 e0       	ldi	r18, 0x07	; 7
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	6f e7       	ldi	r22, 0x7F	; 127
     e8e:	80 e0       	ldi	r24, 0x00	; 0
     e90:	0e 94 25 07 	call	0xe4a	; 0xe4a <OLED_set_cursor>
     e94:	08 95       	ret

00000e96 <OLED_flush>:
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	0e 94 44 07 	call	0xe88	; 0xe88 <OLED_reset_cursor>
     e9e:	c0 e0       	ldi	r28, 0x00	; 0
     ea0:	d0 e0       	ldi	r29, 0x00	; 0
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <OLED_flush+0x16>
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
     eaa:	21 96       	adiw	r28, 0x01	; 1
     eac:	c1 15       	cp	r28, r1
     eae:	84 e0       	ldi	r24, 0x04	; 4
     eb0:	d8 07       	cpc	r29, r24
     eb2:	c4 f3       	brlt	.-16     	; 0xea4 <OLED_flush+0xe>
     eb4:	0e 94 44 07 	call	0xe88	; 0xe88 <OLED_reset_cursor>
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	08 95       	ret

00000ebe <OLED_set_horizontal_mode>:
     ebe:	80 e2       	ldi	r24, 0x20	; 32
     ec0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     ec4:	80 e0       	ldi	r24, 0x00	; 0
     ec6:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_write_command>
     eca:	08 95       	ret

00000ecc <OLED_write_string>:
     ecc:	8f 92       	push	r8
     ece:	9f 92       	push	r9
     ed0:	af 92       	push	r10
     ed2:	bf 92       	push	r11
     ed4:	df 92       	push	r13
     ed6:	ef 92       	push	r14
     ed8:	ff 92       	push	r15
     eda:	0f 93       	push	r16
     edc:	1f 93       	push	r17
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
     ee2:	7c 01       	movw	r14, r24
     ee4:	4a 01       	movw	r8, r20
     ee6:	5b 01       	movw	r10, r22
     ee8:	d2 2e       	mov	r13, r18
     eea:	00 e0       	ldi	r16, 0x00	; 0
     eec:	10 e0       	ldi	r17, 0x00	; 0
     eee:	4b c0       	rjmp	.+150    	; 0xf86 <OLED_write_string+0xba>
     ef0:	85 e0       	ldi	r24, 0x05	; 5
     ef2:	d8 16       	cp	r13, r24
     ef4:	a9 f0       	breq	.+42     	; 0xf20 <OLED_write_string+0x54>
     ef6:	88 e0       	ldi	r24, 0x08	; 8
     ef8:	d8 12       	cpse	r13, r24
     efa:	25 c0       	rjmp	.+74     	; 0xf46 <OLED_write_string+0x7a>
     efc:	f7 01       	movw	r30, r14
     efe:	e0 0f       	add	r30, r16
     f00:	f1 1f       	adc	r31, r17
     f02:	e0 81       	ld	r30, Z
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	b0 97       	sbiw	r30, 0x20	; 32
     f08:	ee 0f       	add	r30, r30
     f0a:	ff 1f       	adc	r31, r31
     f0c:	ee 0f       	add	r30, r30
     f0e:	ff 1f       	adc	r31, r31
     f10:	ee 0f       	add	r30, r30
     f12:	ff 1f       	adc	r31, r31
     f14:	ec 0f       	add	r30, r28
     f16:	fd 1f       	adc	r31, r29
     f18:	e9 58       	subi	r30, 0x89	; 137
     f1a:	fb 4f       	sbci	r31, 0xFB	; 251
     f1c:	84 91       	lpm	r24, Z
     f1e:	22 c0       	rjmp	.+68     	; 0xf64 <OLED_write_string+0x98>
     f20:	f7 01       	movw	r30, r14
     f22:	e0 0f       	add	r30, r16
     f24:	f1 1f       	adc	r31, r17
     f26:	80 81       	ld	r24, Z
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	80 97       	sbiw	r24, 0x20	; 32
     f2c:	fc 01       	movw	r30, r24
     f2e:	ee 0f       	add	r30, r30
     f30:	ff 1f       	adc	r31, r31
     f32:	ee 0f       	add	r30, r30
     f34:	ff 1f       	adc	r31, r31
     f36:	e8 0f       	add	r30, r24
     f38:	f9 1f       	adc	r31, r25
     f3a:	ec 0f       	add	r30, r28
     f3c:	fd 1f       	adc	r31, r29
     f3e:	e4 56       	subi	r30, 0x64	; 100
     f40:	fd 4f       	sbci	r31, 0xFD	; 253
     f42:	84 91       	lpm	r24, Z
     f44:	0f c0       	rjmp	.+30     	; 0xf64 <OLED_write_string+0x98>
     f46:	f7 01       	movw	r30, r14
     f48:	e0 0f       	add	r30, r16
     f4a:	f1 1f       	adc	r31, r17
     f4c:	e0 81       	ld	r30, Z
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	b0 97       	sbiw	r30, 0x20	; 32
     f52:	ee 0f       	add	r30, r30
     f54:	ff 1f       	adc	r31, r31
     f56:	ee 0f       	add	r30, r30
     f58:	ff 1f       	adc	r31, r31
     f5a:	ec 0f       	add	r30, r28
     f5c:	fd 1f       	adc	r31, r29
     f5e:	e0 5e       	subi	r30, 0xE0	; 224
     f60:	fe 4f       	sbci	r31, 0xFE	; 254
     f62:	84 91       	lpm	r24, Z
     f64:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
     f68:	21 96       	adiw	r28, 0x01	; 1
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <OLED_write_string+0xa4>
     f6c:	c0 e0       	ldi	r28, 0x00	; 0
     f6e:	d0 e0       	ldi	r29, 0x00	; 0
     f70:	8d 2d       	mov	r24, r13
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	c8 17       	cp	r28, r24
     f76:	d9 07       	cpc	r29, r25
     f78:	0c f4       	brge	.+2      	; 0xf7c <OLED_write_string+0xb0>
     f7a:	ba cf       	rjmp	.-140    	; 0xef0 <OLED_write_string+0x24>
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
     f82:	0f 5f       	subi	r16, 0xFF	; 255
     f84:	1f 4f       	sbci	r17, 0xFF	; 255
     f86:	c8 01       	movw	r24, r16
     f88:	01 2e       	mov	r0, r17
     f8a:	00 0c       	add	r0, r0
     f8c:	aa 0b       	sbc	r26, r26
     f8e:	bb 0b       	sbc	r27, r27
     f90:	88 15       	cp	r24, r8
     f92:	99 05       	cpc	r25, r9
     f94:	aa 05       	cpc	r26, r10
     f96:	bb 05       	cpc	r27, r11
     f98:	48 f3       	brcs	.-46     	; 0xf6c <OLED_write_string+0xa0>
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	ff 90       	pop	r15
     fa4:	ef 90       	pop	r14
     fa6:	df 90       	pop	r13
     fa8:	bf 90       	pop	r11
     faa:	af 90       	pop	r10
     fac:	9f 90       	pop	r9
     fae:	8f 90       	pop	r8
     fb0:	08 95       	ret

00000fb2 <OLED_menu>:
     fb2:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_flush>
     fb6:	0e 94 44 07 	call	0xe88	; 0xe88 <OLED_reset_cursor>
     fba:	27 e0       	ldi	r18, 0x07	; 7
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	6f e7       	ldi	r22, 0x7F	; 127
     fc0:	88 e0       	ldi	r24, 0x08	; 8
     fc2:	0e 94 25 07 	call	0xe4a	; 0xe4a <OLED_set_cursor>
     fc6:	28 e0       	ldi	r18, 0x08	; 8
     fc8:	44 e0       	ldi	r20, 0x04	; 4
     fca:	50 e0       	ldi	r21, 0x00	; 0
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	8c e1       	ldi	r24, 0x1C	; 28
     fd2:	92 e0       	ldi	r25, 0x02	; 2
     fd4:	0e 94 66 07 	call	0xecc	; 0xecc <OLED_write_string>
     fd8:	27 e0       	ldi	r18, 0x07	; 7
     fda:	42 e0       	ldi	r20, 0x02	; 2
     fdc:	6f e7       	ldi	r22, 0x7F	; 127
     fde:	88 e0       	ldi	r24, 0x08	; 8
     fe0:	0e 94 25 07 	call	0xe4a	; 0xe4a <OLED_set_cursor>
     fe4:	25 e0       	ldi	r18, 0x05	; 5
     fe6:	4a e0       	ldi	r20, 0x0A	; 10
     fe8:	50 e0       	ldi	r21, 0x00	; 0
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	81 e2       	ldi	r24, 0x21	; 33
     ff0:	92 e0       	ldi	r25, 0x02	; 2
     ff2:	0e 94 66 07 	call	0xecc	; 0xecc <OLED_write_string>
     ff6:	27 e0       	ldi	r18, 0x07	; 7
     ff8:	44 e0       	ldi	r20, 0x04	; 4
     ffa:	6f e7       	ldi	r22, 0x7F	; 127
     ffc:	88 e0       	ldi	r24, 0x08	; 8
     ffe:	0e 94 25 07 	call	0xe4a	; 0xe4a <OLED_set_cursor>
    1002:	25 e0       	ldi	r18, 0x05	; 5
    1004:	48 e0       	ldi	r20, 0x08	; 8
    1006:	50 e0       	ldi	r21, 0x00	; 0
    1008:	60 e0       	ldi	r22, 0x00	; 0
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	8c e2       	ldi	r24, 0x2C	; 44
    100e:	92 e0       	ldi	r25, 0x02	; 2
    1010:	0e 94 66 07 	call	0xecc	; 0xecc <OLED_write_string>
    1014:	08 95       	ret

00001016 <OLED_print_arrow>:
    1016:	46 2f       	mov	r20, r22
    1018:	27 e0       	ldi	r18, 0x07	; 7
    101a:	6f e7       	ldi	r22, 0x7F	; 127
    101c:	0e 94 25 07 	call	0xe4a	; 0xe4a <OLED_set_cursor>
    1020:	88 e1       	ldi	r24, 0x18	; 24
    1022:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
    1026:	88 e1       	ldi	r24, 0x18	; 24
    1028:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
    102c:	8e e7       	ldi	r24, 0x7E	; 126
    102e:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
    1032:	8c e3       	ldi	r24, 0x3C	; 60
    1034:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
    1038:	88 e1       	ldi	r24, 0x18	; 24
    103a:	0e 94 d1 06 	call	0xda2	; 0xda2 <OLED_write_data>
    103e:	08 95       	ret

00001040 <OLED_page_selector>:

enum PageEnum OLED_page_selector(struct ArrowPosition* ArrowPosition){
	printf("%u row is selected \r\n", ArrowPosition->row);
    1040:	fc 01       	movw	r30, r24
    1042:	80 81       	ld	r24, Z
    1044:	1f 92       	push	r1
    1046:	8f 93       	push	r24
    1048:	85 e3       	ldi	r24, 0x35	; 53
    104a:	92 e0       	ldi	r25, 0x02	; 2
    104c:	9f 93       	push	r25
    104e:	8f 93       	push	r24
    1050:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <printf>
	
	return MainPage;
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	08 95       	ret

00001060 <USART_Init>:
#include "USART.h"

void USART_Init( unsigned int ubrr )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
    1060:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    1062:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    1064:	88 e1       	ldi	r24, 0x18	; 24
    1066:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
    1068:	8e e8       	ldi	r24, 0x8E	; 142
    106a:	80 bd       	out	0x20, r24	; 32
    106c:	08 95       	ret

0000106e <USART_Transmit>:
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
    106e:	5d 9b       	sbis	0x0b, 5	; 11
    1070:	fe cf       	rjmp	.-4      	; 0x106e <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
    1072:	8c b9       	out	0x0c, r24	; 12
    1074:	08 95       	ret

00001076 <USART_Receive>:
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
    1076:	5f 9b       	sbis	0x0b, 7	; 11
    1078:	fe cf       	rjmp	.-4      	; 0x1076 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
    107a:	8c b1       	in	r24, 0x0c	; 12
}
    107c:	08 95       	ret

0000107e <__subsf3>:
    107e:	50 58       	subi	r21, 0x80	; 128

00001080 <__addsf3>:
    1080:	bb 27       	eor	r27, r27
    1082:	aa 27       	eor	r26, r26
    1084:	0e 94 57 08 	call	0x10ae	; 0x10ae <__addsf3x>
    1088:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__fp_round>
    108c:	0e 94 26 0a 	call	0x144c	; 0x144c <__fp_pscA>
    1090:	38 f0       	brcs	.+14     	; 0x10a0 <__addsf3+0x20>
    1092:	0e 94 2d 0a 	call	0x145a	; 0x145a <__fp_pscB>
    1096:	20 f0       	brcs	.+8      	; 0x10a0 <__addsf3+0x20>
    1098:	39 f4       	brne	.+14     	; 0x10a8 <__addsf3+0x28>
    109a:	9f 3f       	cpi	r25, 0xFF	; 255
    109c:	19 f4       	brne	.+6      	; 0x10a4 <__addsf3+0x24>
    109e:	26 f4       	brtc	.+8      	; 0x10a8 <__addsf3+0x28>
    10a0:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    10a4:	0e f4       	brtc	.+2      	; 0x10a8 <__addsf3+0x28>
    10a6:	e0 95       	com	r30
    10a8:	e7 fb       	bst	r30, 7
    10aa:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>

000010ae <__addsf3x>:
    10ae:	e9 2f       	mov	r30, r25
    10b0:	0e 94 45 0a 	call	0x148a	; 0x148a <__fp_split3>
    10b4:	58 f3       	brcs	.-42     	; 0x108c <__addsf3+0xc>
    10b6:	ba 17       	cp	r27, r26
    10b8:	62 07       	cpc	r22, r18
    10ba:	73 07       	cpc	r23, r19
    10bc:	84 07       	cpc	r24, r20
    10be:	95 07       	cpc	r25, r21
    10c0:	20 f0       	brcs	.+8      	; 0x10ca <__addsf3x+0x1c>
    10c2:	79 f4       	brne	.+30     	; 0x10e2 <__addsf3x+0x34>
    10c4:	a6 f5       	brtc	.+104    	; 0x112e <__addsf3x+0x80>
    10c6:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__fp_zero>
    10ca:	0e f4       	brtc	.+2      	; 0x10ce <__addsf3x+0x20>
    10cc:	e0 95       	com	r30
    10ce:	0b 2e       	mov	r0, r27
    10d0:	ba 2f       	mov	r27, r26
    10d2:	a0 2d       	mov	r26, r0
    10d4:	0b 01       	movw	r0, r22
    10d6:	b9 01       	movw	r22, r18
    10d8:	90 01       	movw	r18, r0
    10da:	0c 01       	movw	r0, r24
    10dc:	ca 01       	movw	r24, r20
    10de:	a0 01       	movw	r20, r0
    10e0:	11 24       	eor	r1, r1
    10e2:	ff 27       	eor	r31, r31
    10e4:	59 1b       	sub	r21, r25
    10e6:	99 f0       	breq	.+38     	; 0x110e <__addsf3x+0x60>
    10e8:	59 3f       	cpi	r21, 0xF9	; 249
    10ea:	50 f4       	brcc	.+20     	; 0x1100 <__addsf3x+0x52>
    10ec:	50 3e       	cpi	r21, 0xE0	; 224
    10ee:	68 f1       	brcs	.+90     	; 0x114a <__addsf3x+0x9c>
    10f0:	1a 16       	cp	r1, r26
    10f2:	f0 40       	sbci	r31, 0x00	; 0
    10f4:	a2 2f       	mov	r26, r18
    10f6:	23 2f       	mov	r18, r19
    10f8:	34 2f       	mov	r19, r20
    10fa:	44 27       	eor	r20, r20
    10fc:	58 5f       	subi	r21, 0xF8	; 248
    10fe:	f3 cf       	rjmp	.-26     	; 0x10e6 <__addsf3x+0x38>
    1100:	46 95       	lsr	r20
    1102:	37 95       	ror	r19
    1104:	27 95       	ror	r18
    1106:	a7 95       	ror	r26
    1108:	f0 40       	sbci	r31, 0x00	; 0
    110a:	53 95       	inc	r21
    110c:	c9 f7       	brne	.-14     	; 0x1100 <__addsf3x+0x52>
    110e:	7e f4       	brtc	.+30     	; 0x112e <__addsf3x+0x80>
    1110:	1f 16       	cp	r1, r31
    1112:	ba 0b       	sbc	r27, r26
    1114:	62 0b       	sbc	r22, r18
    1116:	73 0b       	sbc	r23, r19
    1118:	84 0b       	sbc	r24, r20
    111a:	ba f0       	brmi	.+46     	; 0x114a <__addsf3x+0x9c>
    111c:	91 50       	subi	r25, 0x01	; 1
    111e:	a1 f0       	breq	.+40     	; 0x1148 <__addsf3x+0x9a>
    1120:	ff 0f       	add	r31, r31
    1122:	bb 1f       	adc	r27, r27
    1124:	66 1f       	adc	r22, r22
    1126:	77 1f       	adc	r23, r23
    1128:	88 1f       	adc	r24, r24
    112a:	c2 f7       	brpl	.-16     	; 0x111c <__addsf3x+0x6e>
    112c:	0e c0       	rjmp	.+28     	; 0x114a <__addsf3x+0x9c>
    112e:	ba 0f       	add	r27, r26
    1130:	62 1f       	adc	r22, r18
    1132:	73 1f       	adc	r23, r19
    1134:	84 1f       	adc	r24, r20
    1136:	48 f4       	brcc	.+18     	; 0x114a <__addsf3x+0x9c>
    1138:	87 95       	ror	r24
    113a:	77 95       	ror	r23
    113c:	67 95       	ror	r22
    113e:	b7 95       	ror	r27
    1140:	f7 95       	ror	r31
    1142:	9e 3f       	cpi	r25, 0xFE	; 254
    1144:	08 f0       	brcs	.+2      	; 0x1148 <__addsf3x+0x9a>
    1146:	b0 cf       	rjmp	.-160    	; 0x10a8 <__addsf3+0x28>
    1148:	93 95       	inc	r25
    114a:	88 0f       	add	r24, r24
    114c:	08 f0       	brcs	.+2      	; 0x1150 <__addsf3x+0xa2>
    114e:	99 27       	eor	r25, r25
    1150:	ee 0f       	add	r30, r30
    1152:	97 95       	ror	r25
    1154:	87 95       	ror	r24
    1156:	08 95       	ret
    1158:	0e 94 26 0a 	call	0x144c	; 0x144c <__fp_pscA>
    115c:	60 f0       	brcs	.+24     	; 0x1176 <__addsf3x+0xc8>
    115e:	80 e8       	ldi	r24, 0x80	; 128
    1160:	91 e0       	ldi	r25, 0x01	; 1
    1162:	09 f4       	brne	.+2      	; 0x1166 <__addsf3x+0xb8>
    1164:	9e ef       	ldi	r25, 0xFE	; 254
    1166:	0e 94 2d 0a 	call	0x145a	; 0x145a <__fp_pscB>
    116a:	28 f0       	brcs	.+10     	; 0x1176 <__addsf3x+0xc8>
    116c:	40 e8       	ldi	r20, 0x80	; 128
    116e:	51 e0       	ldi	r21, 0x01	; 1
    1170:	71 f4       	brne	.+28     	; 0x118e <atan2+0x10>
    1172:	5e ef       	ldi	r21, 0xFE	; 254
    1174:	0c c0       	rjmp	.+24     	; 0x118e <atan2+0x10>
    1176:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    117a:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__fp_zero>

0000117e <atan2>:
    117e:	e9 2f       	mov	r30, r25
    1180:	e0 78       	andi	r30, 0x80	; 128
    1182:	0e 94 45 0a 	call	0x148a	; 0x148a <__fp_split3>
    1186:	40 f3       	brcs	.-48     	; 0x1158 <__addsf3x+0xaa>
    1188:	09 2e       	mov	r0, r25
    118a:	05 2a       	or	r0, r21
    118c:	b1 f3       	breq	.-20     	; 0x117a <__addsf3x+0xcc>
    118e:	26 17       	cp	r18, r22
    1190:	37 07       	cpc	r19, r23
    1192:	48 07       	cpc	r20, r24
    1194:	59 07       	cpc	r21, r25
    1196:	38 f0       	brcs	.+14     	; 0x11a6 <atan2+0x28>
    1198:	0e 2e       	mov	r0, r30
    119a:	07 f8       	bld	r0, 7
    119c:	e0 25       	eor	r30, r0
    119e:	69 f0       	breq	.+26     	; 0x11ba <atan2+0x3c>
    11a0:	e0 25       	eor	r30, r0
    11a2:	e0 64       	ori	r30, 0x40	; 64
    11a4:	0a c0       	rjmp	.+20     	; 0x11ba <atan2+0x3c>
    11a6:	ef 63       	ori	r30, 0x3F	; 63
    11a8:	07 f8       	bld	r0, 7
    11aa:	00 94       	com	r0
    11ac:	07 fa       	bst	r0, 7
    11ae:	db 01       	movw	r26, r22
    11b0:	b9 01       	movw	r22, r18
    11b2:	9d 01       	movw	r18, r26
    11b4:	dc 01       	movw	r26, r24
    11b6:	ca 01       	movw	r24, r20
    11b8:	ad 01       	movw	r20, r26
    11ba:	ef 93       	push	r30
    11bc:	0e 94 3a 09 	call	0x1274	; 0x1274 <__divsf3_pse>
    11c0:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_round>
    11c4:	0e 94 ef 08 	call	0x11de	; 0x11de <atan>
    11c8:	5f 91       	pop	r21
    11ca:	55 23       	and	r21, r21
    11cc:	39 f0       	breq	.+14     	; 0x11dc <atan2+0x5e>
    11ce:	2b ed       	ldi	r18, 0xDB	; 219
    11d0:	3f e0       	ldi	r19, 0x0F	; 15
    11d2:	49 e4       	ldi	r20, 0x49	; 73
    11d4:	50 fd       	sbrc	r21, 0
    11d6:	49 ec       	ldi	r20, 0xC9	; 201
    11d8:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__addsf3>
    11dc:	08 95       	ret

000011de <atan>:
    11de:	df 93       	push	r29
    11e0:	dd 27       	eor	r29, r29
    11e2:	b9 2f       	mov	r27, r25
    11e4:	bf 77       	andi	r27, 0x7F	; 127
    11e6:	40 e8       	ldi	r20, 0x80	; 128
    11e8:	5f e3       	ldi	r21, 0x3F	; 63
    11ea:	16 16       	cp	r1, r22
    11ec:	17 06       	cpc	r1, r23
    11ee:	48 07       	cpc	r20, r24
    11f0:	5b 07       	cpc	r21, r27
    11f2:	18 f4       	brcc	.+6      	; 0x11fa <atan+0x1c>
    11f4:	d9 2f       	mov	r29, r25
    11f6:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <inverse>
    11fa:	9f 93       	push	r25
    11fc:	8f 93       	push	r24
    11fe:	7f 93       	push	r23
    1200:	6f 93       	push	r22
    1202:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <square>
    1206:	e0 e7       	ldi	r30, 0x70	; 112
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fp_powser>
    120e:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_round>
    1212:	2f 91       	pop	r18
    1214:	3f 91       	pop	r19
    1216:	4f 91       	pop	r20
    1218:	5f 91       	pop	r21
    121a:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3x>
    121e:	dd 23       	and	r29, r29
    1220:	51 f0       	breq	.+20     	; 0x1236 <atan+0x58>
    1222:	90 58       	subi	r25, 0x80	; 128
    1224:	a2 ea       	ldi	r26, 0xA2	; 162
    1226:	2a ed       	ldi	r18, 0xDA	; 218
    1228:	3f e0       	ldi	r19, 0x0F	; 15
    122a:	49 ec       	ldi	r20, 0xC9	; 201
    122c:	5f e3       	ldi	r21, 0x3F	; 63
    122e:	d0 78       	andi	r29, 0x80	; 128
    1230:	5d 27       	eor	r21, r29
    1232:	0e 94 57 08 	call	0x10ae	; 0x10ae <__addsf3x>
    1236:	df 91       	pop	r29
    1238:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__fp_round>

0000123c <__cmpsf2>:
    123c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__fp_cmp>
    1240:	08 f4       	brcc	.+2      	; 0x1244 <__cmpsf2+0x8>
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	08 95       	ret

00001246 <__divsf3>:
    1246:	0e 94 37 09 	call	0x126e	; 0x126e <__divsf3x>
    124a:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__fp_round>
    124e:	0e 94 2d 0a 	call	0x145a	; 0x145a <__fp_pscB>
    1252:	58 f0       	brcs	.+22     	; 0x126a <__divsf3+0x24>
    1254:	0e 94 26 0a 	call	0x144c	; 0x144c <__fp_pscA>
    1258:	40 f0       	brcs	.+16     	; 0x126a <__divsf3+0x24>
    125a:	29 f4       	brne	.+10     	; 0x1266 <__divsf3+0x20>
    125c:	5f 3f       	cpi	r21, 0xFF	; 255
    125e:	29 f0       	breq	.+10     	; 0x126a <__divsf3+0x24>
    1260:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    1264:	51 11       	cpse	r21, r1
    1266:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_szero>
    126a:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>

0000126e <__divsf3x>:
    126e:	0e 94 45 0a 	call	0x148a	; 0x148a <__fp_split3>
    1272:	68 f3       	brcs	.-38     	; 0x124e <__divsf3+0x8>

00001274 <__divsf3_pse>:
    1274:	99 23       	and	r25, r25
    1276:	b1 f3       	breq	.-20     	; 0x1264 <__divsf3+0x1e>
    1278:	55 23       	and	r21, r21
    127a:	91 f3       	breq	.-28     	; 0x1260 <__divsf3+0x1a>
    127c:	95 1b       	sub	r25, r21
    127e:	55 0b       	sbc	r21, r21
    1280:	bb 27       	eor	r27, r27
    1282:	aa 27       	eor	r26, r26
    1284:	62 17       	cp	r22, r18
    1286:	73 07       	cpc	r23, r19
    1288:	84 07       	cpc	r24, r20
    128a:	38 f0       	brcs	.+14     	; 0x129a <__divsf3_pse+0x26>
    128c:	9f 5f       	subi	r25, 0xFF	; 255
    128e:	5f 4f       	sbci	r21, 0xFF	; 255
    1290:	22 0f       	add	r18, r18
    1292:	33 1f       	adc	r19, r19
    1294:	44 1f       	adc	r20, r20
    1296:	aa 1f       	adc	r26, r26
    1298:	a9 f3       	breq	.-22     	; 0x1284 <__divsf3_pse+0x10>
    129a:	35 d0       	rcall	.+106    	; 0x1306 <__divsf3_pse+0x92>
    129c:	0e 2e       	mov	r0, r30
    129e:	3a f0       	brmi	.+14     	; 0x12ae <__divsf3_pse+0x3a>
    12a0:	e0 e8       	ldi	r30, 0x80	; 128
    12a2:	32 d0       	rcall	.+100    	; 0x1308 <__divsf3_pse+0x94>
    12a4:	91 50       	subi	r25, 0x01	; 1
    12a6:	50 40       	sbci	r21, 0x00	; 0
    12a8:	e6 95       	lsr	r30
    12aa:	00 1c       	adc	r0, r0
    12ac:	ca f7       	brpl	.-14     	; 0x12a0 <__divsf3_pse+0x2c>
    12ae:	2b d0       	rcall	.+86     	; 0x1306 <__divsf3_pse+0x92>
    12b0:	fe 2f       	mov	r31, r30
    12b2:	29 d0       	rcall	.+82     	; 0x1306 <__divsf3_pse+0x92>
    12b4:	66 0f       	add	r22, r22
    12b6:	77 1f       	adc	r23, r23
    12b8:	88 1f       	adc	r24, r24
    12ba:	bb 1f       	adc	r27, r27
    12bc:	26 17       	cp	r18, r22
    12be:	37 07       	cpc	r19, r23
    12c0:	48 07       	cpc	r20, r24
    12c2:	ab 07       	cpc	r26, r27
    12c4:	b0 e8       	ldi	r27, 0x80	; 128
    12c6:	09 f0       	breq	.+2      	; 0x12ca <__divsf3_pse+0x56>
    12c8:	bb 0b       	sbc	r27, r27
    12ca:	80 2d       	mov	r24, r0
    12cc:	bf 01       	movw	r22, r30
    12ce:	ff 27       	eor	r31, r31
    12d0:	93 58       	subi	r25, 0x83	; 131
    12d2:	5f 4f       	sbci	r21, 0xFF	; 255
    12d4:	3a f0       	brmi	.+14     	; 0x12e4 <__divsf3_pse+0x70>
    12d6:	9e 3f       	cpi	r25, 0xFE	; 254
    12d8:	51 05       	cpc	r21, r1
    12da:	78 f0       	brcs	.+30     	; 0x12fa <__divsf3_pse+0x86>
    12dc:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    12e0:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_szero>
    12e4:	5f 3f       	cpi	r21, 0xFF	; 255
    12e6:	e4 f3       	brlt	.-8      	; 0x12e0 <__divsf3_pse+0x6c>
    12e8:	98 3e       	cpi	r25, 0xE8	; 232
    12ea:	d4 f3       	brlt	.-12     	; 0x12e0 <__divsf3_pse+0x6c>
    12ec:	86 95       	lsr	r24
    12ee:	77 95       	ror	r23
    12f0:	67 95       	ror	r22
    12f2:	b7 95       	ror	r27
    12f4:	f7 95       	ror	r31
    12f6:	9f 5f       	subi	r25, 0xFF	; 255
    12f8:	c9 f7       	brne	.-14     	; 0x12ec <__divsf3_pse+0x78>
    12fa:	88 0f       	add	r24, r24
    12fc:	91 1d       	adc	r25, r1
    12fe:	96 95       	lsr	r25
    1300:	87 95       	ror	r24
    1302:	97 f9       	bld	r25, 7
    1304:	08 95       	ret
    1306:	e1 e0       	ldi	r30, 0x01	; 1
    1308:	66 0f       	add	r22, r22
    130a:	77 1f       	adc	r23, r23
    130c:	88 1f       	adc	r24, r24
    130e:	bb 1f       	adc	r27, r27
    1310:	62 17       	cp	r22, r18
    1312:	73 07       	cpc	r23, r19
    1314:	84 07       	cpc	r24, r20
    1316:	ba 07       	cpc	r27, r26
    1318:	20 f0       	brcs	.+8      	; 0x1322 <__divsf3_pse+0xae>
    131a:	62 1b       	sub	r22, r18
    131c:	73 0b       	sbc	r23, r19
    131e:	84 0b       	sbc	r24, r20
    1320:	ba 0b       	sbc	r27, r26
    1322:	ee 1f       	adc	r30, r30
    1324:	88 f7       	brcc	.-30     	; 0x1308 <__divsf3_pse+0x94>
    1326:	e0 95       	com	r30
    1328:	08 95       	ret

0000132a <__floatunsisf>:
    132a:	e8 94       	clt
    132c:	09 c0       	rjmp	.+18     	; 0x1340 <__floatsisf+0x12>

0000132e <__floatsisf>:
    132e:	97 fb       	bst	r25, 7
    1330:	3e f4       	brtc	.+14     	; 0x1340 <__floatsisf+0x12>
    1332:	90 95       	com	r25
    1334:	80 95       	com	r24
    1336:	70 95       	com	r23
    1338:	61 95       	neg	r22
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	8f 4f       	sbci	r24, 0xFF	; 255
    133e:	9f 4f       	sbci	r25, 0xFF	; 255
    1340:	99 23       	and	r25, r25
    1342:	a9 f0       	breq	.+42     	; 0x136e <__floatsisf+0x40>
    1344:	f9 2f       	mov	r31, r25
    1346:	96 e9       	ldi	r25, 0x96	; 150
    1348:	bb 27       	eor	r27, r27
    134a:	93 95       	inc	r25
    134c:	f6 95       	lsr	r31
    134e:	87 95       	ror	r24
    1350:	77 95       	ror	r23
    1352:	67 95       	ror	r22
    1354:	b7 95       	ror	r27
    1356:	f1 11       	cpse	r31, r1
    1358:	f8 cf       	rjmp	.-16     	; 0x134a <__floatsisf+0x1c>
    135a:	fa f4       	brpl	.+62     	; 0x139a <__floatsisf+0x6c>
    135c:	bb 0f       	add	r27, r27
    135e:	11 f4       	brne	.+4      	; 0x1364 <__floatsisf+0x36>
    1360:	60 ff       	sbrs	r22, 0
    1362:	1b c0       	rjmp	.+54     	; 0x139a <__floatsisf+0x6c>
    1364:	6f 5f       	subi	r22, 0xFF	; 255
    1366:	7f 4f       	sbci	r23, 0xFF	; 255
    1368:	8f 4f       	sbci	r24, 0xFF	; 255
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	16 c0       	rjmp	.+44     	; 0x139a <__floatsisf+0x6c>
    136e:	88 23       	and	r24, r24
    1370:	11 f0       	breq	.+4      	; 0x1376 <__floatsisf+0x48>
    1372:	96 e9       	ldi	r25, 0x96	; 150
    1374:	11 c0       	rjmp	.+34     	; 0x1398 <__floatsisf+0x6a>
    1376:	77 23       	and	r23, r23
    1378:	21 f0       	breq	.+8      	; 0x1382 <__floatsisf+0x54>
    137a:	9e e8       	ldi	r25, 0x8E	; 142
    137c:	87 2f       	mov	r24, r23
    137e:	76 2f       	mov	r23, r22
    1380:	05 c0       	rjmp	.+10     	; 0x138c <__floatsisf+0x5e>
    1382:	66 23       	and	r22, r22
    1384:	71 f0       	breq	.+28     	; 0x13a2 <__floatsisf+0x74>
    1386:	96 e8       	ldi	r25, 0x86	; 134
    1388:	86 2f       	mov	r24, r22
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	2a f0       	brmi	.+10     	; 0x139a <__floatsisf+0x6c>
    1390:	9a 95       	dec	r25
    1392:	66 0f       	add	r22, r22
    1394:	77 1f       	adc	r23, r23
    1396:	88 1f       	adc	r24, r24
    1398:	da f7       	brpl	.-10     	; 0x1390 <__floatsisf+0x62>
    139a:	88 0f       	add	r24, r24
    139c:	96 95       	lsr	r25
    139e:	87 95       	ror	r24
    13a0:	97 f9       	bld	r25, 7
    13a2:	08 95       	ret

000013a4 <__fp_cmp>:
    13a4:	99 0f       	add	r25, r25
    13a6:	00 08       	sbc	r0, r0
    13a8:	55 0f       	add	r21, r21
    13aa:	aa 0b       	sbc	r26, r26
    13ac:	e0 e8       	ldi	r30, 0x80	; 128
    13ae:	fe ef       	ldi	r31, 0xFE	; 254
    13b0:	16 16       	cp	r1, r22
    13b2:	17 06       	cpc	r1, r23
    13b4:	e8 07       	cpc	r30, r24
    13b6:	f9 07       	cpc	r31, r25
    13b8:	c0 f0       	brcs	.+48     	; 0x13ea <__fp_cmp+0x46>
    13ba:	12 16       	cp	r1, r18
    13bc:	13 06       	cpc	r1, r19
    13be:	e4 07       	cpc	r30, r20
    13c0:	f5 07       	cpc	r31, r21
    13c2:	98 f0       	brcs	.+38     	; 0x13ea <__fp_cmp+0x46>
    13c4:	62 1b       	sub	r22, r18
    13c6:	73 0b       	sbc	r23, r19
    13c8:	84 0b       	sbc	r24, r20
    13ca:	95 0b       	sbc	r25, r21
    13cc:	39 f4       	brne	.+14     	; 0x13dc <__fp_cmp+0x38>
    13ce:	0a 26       	eor	r0, r26
    13d0:	61 f0       	breq	.+24     	; 0x13ea <__fp_cmp+0x46>
    13d2:	23 2b       	or	r18, r19
    13d4:	24 2b       	or	r18, r20
    13d6:	25 2b       	or	r18, r21
    13d8:	21 f4       	brne	.+8      	; 0x13e2 <__fp_cmp+0x3e>
    13da:	08 95       	ret
    13dc:	0a 26       	eor	r0, r26
    13de:	09 f4       	brne	.+2      	; 0x13e2 <__fp_cmp+0x3e>
    13e0:	a1 40       	sbci	r26, 0x01	; 1
    13e2:	a6 95       	lsr	r26
    13e4:	8f ef       	ldi	r24, 0xFF	; 255
    13e6:	81 1d       	adc	r24, r1
    13e8:	81 1d       	adc	r24, r1
    13ea:	08 95       	ret

000013ec <__fp_inf>:
    13ec:	97 f9       	bld	r25, 7
    13ee:	9f 67       	ori	r25, 0x7F	; 127
    13f0:	80 e8       	ldi	r24, 0x80	; 128
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	08 95       	ret

000013f8 <__fp_nan>:
    13f8:	9f ef       	ldi	r25, 0xFF	; 255
    13fa:	80 ec       	ldi	r24, 0xC0	; 192
    13fc:	08 95       	ret

000013fe <__fp_powser>:
    13fe:	df 93       	push	r29
    1400:	cf 93       	push	r28
    1402:	1f 93       	push	r17
    1404:	0f 93       	push	r16
    1406:	ff 92       	push	r15
    1408:	ef 92       	push	r14
    140a:	df 92       	push	r13
    140c:	7b 01       	movw	r14, r22
    140e:	8c 01       	movw	r16, r24
    1410:	68 94       	set
    1412:	06 c0       	rjmp	.+12     	; 0x1420 <__fp_powser+0x22>
    1414:	da 2e       	mov	r13, r26
    1416:	ef 01       	movw	r28, r30
    1418:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3x>
    141c:	fe 01       	movw	r30, r28
    141e:	e8 94       	clt
    1420:	a5 91       	lpm	r26, Z+
    1422:	25 91       	lpm	r18, Z+
    1424:	35 91       	lpm	r19, Z+
    1426:	45 91       	lpm	r20, Z+
    1428:	55 91       	lpm	r21, Z+
    142a:	a6 f3       	brts	.-24     	; 0x1414 <__fp_powser+0x16>
    142c:	ef 01       	movw	r28, r30
    142e:	0e 94 57 08 	call	0x10ae	; 0x10ae <__addsf3x>
    1432:	fe 01       	movw	r30, r28
    1434:	97 01       	movw	r18, r14
    1436:	a8 01       	movw	r20, r16
    1438:	da 94       	dec	r13
    143a:	69 f7       	brne	.-38     	; 0x1416 <__fp_powser+0x18>
    143c:	df 90       	pop	r13
    143e:	ef 90       	pop	r14
    1440:	ff 90       	pop	r15
    1442:	0f 91       	pop	r16
    1444:	1f 91       	pop	r17
    1446:	cf 91       	pop	r28
    1448:	df 91       	pop	r29
    144a:	08 95       	ret

0000144c <__fp_pscA>:
    144c:	00 24       	eor	r0, r0
    144e:	0a 94       	dec	r0
    1450:	16 16       	cp	r1, r22
    1452:	17 06       	cpc	r1, r23
    1454:	18 06       	cpc	r1, r24
    1456:	09 06       	cpc	r0, r25
    1458:	08 95       	ret

0000145a <__fp_pscB>:
    145a:	00 24       	eor	r0, r0
    145c:	0a 94       	dec	r0
    145e:	12 16       	cp	r1, r18
    1460:	13 06       	cpc	r1, r19
    1462:	14 06       	cpc	r1, r20
    1464:	05 06       	cpc	r0, r21
    1466:	08 95       	ret

00001468 <__fp_round>:
    1468:	09 2e       	mov	r0, r25
    146a:	03 94       	inc	r0
    146c:	00 0c       	add	r0, r0
    146e:	11 f4       	brne	.+4      	; 0x1474 <__fp_round+0xc>
    1470:	88 23       	and	r24, r24
    1472:	52 f0       	brmi	.+20     	; 0x1488 <__fp_round+0x20>
    1474:	bb 0f       	add	r27, r27
    1476:	40 f4       	brcc	.+16     	; 0x1488 <__fp_round+0x20>
    1478:	bf 2b       	or	r27, r31
    147a:	11 f4       	brne	.+4      	; 0x1480 <__fp_round+0x18>
    147c:	60 ff       	sbrs	r22, 0
    147e:	04 c0       	rjmp	.+8      	; 0x1488 <__fp_round+0x20>
    1480:	6f 5f       	subi	r22, 0xFF	; 255
    1482:	7f 4f       	sbci	r23, 0xFF	; 255
    1484:	8f 4f       	sbci	r24, 0xFF	; 255
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	08 95       	ret

0000148a <__fp_split3>:
    148a:	57 fd       	sbrc	r21, 7
    148c:	90 58       	subi	r25, 0x80	; 128
    148e:	44 0f       	add	r20, r20
    1490:	55 1f       	adc	r21, r21
    1492:	59 f0       	breq	.+22     	; 0x14aa <__fp_splitA+0x10>
    1494:	5f 3f       	cpi	r21, 0xFF	; 255
    1496:	71 f0       	breq	.+28     	; 0x14b4 <__fp_splitA+0x1a>
    1498:	47 95       	ror	r20

0000149a <__fp_splitA>:
    149a:	88 0f       	add	r24, r24
    149c:	97 fb       	bst	r25, 7
    149e:	99 1f       	adc	r25, r25
    14a0:	61 f0       	breq	.+24     	; 0x14ba <__fp_splitA+0x20>
    14a2:	9f 3f       	cpi	r25, 0xFF	; 255
    14a4:	79 f0       	breq	.+30     	; 0x14c4 <__fp_splitA+0x2a>
    14a6:	87 95       	ror	r24
    14a8:	08 95       	ret
    14aa:	12 16       	cp	r1, r18
    14ac:	13 06       	cpc	r1, r19
    14ae:	14 06       	cpc	r1, r20
    14b0:	55 1f       	adc	r21, r21
    14b2:	f2 cf       	rjmp	.-28     	; 0x1498 <__fp_split3+0xe>
    14b4:	46 95       	lsr	r20
    14b6:	f1 df       	rcall	.-30     	; 0x149a <__fp_splitA>
    14b8:	08 c0       	rjmp	.+16     	; 0x14ca <__fp_splitA+0x30>
    14ba:	16 16       	cp	r1, r22
    14bc:	17 06       	cpc	r1, r23
    14be:	18 06       	cpc	r1, r24
    14c0:	99 1f       	adc	r25, r25
    14c2:	f1 cf       	rjmp	.-30     	; 0x14a6 <__fp_splitA+0xc>
    14c4:	86 95       	lsr	r24
    14c6:	71 05       	cpc	r23, r1
    14c8:	61 05       	cpc	r22, r1
    14ca:	08 94       	sec
    14cc:	08 95       	ret

000014ce <__fp_zero>:
    14ce:	e8 94       	clt

000014d0 <__fp_szero>:
    14d0:	bb 27       	eor	r27, r27
    14d2:	66 27       	eor	r22, r22
    14d4:	77 27       	eor	r23, r23
    14d6:	cb 01       	movw	r24, r22
    14d8:	97 f9       	bld	r25, 7
    14da:	08 95       	ret

000014dc <__gesf2>:
    14dc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__fp_cmp>
    14e0:	08 f4       	brcc	.+2      	; 0x14e4 <__gesf2+0x8>
    14e2:	8f ef       	ldi	r24, 0xFF	; 255
    14e4:	08 95       	ret

000014e6 <inverse>:
    14e6:	9b 01       	movw	r18, r22
    14e8:	ac 01       	movw	r20, r24
    14ea:	60 e0       	ldi	r22, 0x00	; 0
    14ec:	70 e0       	ldi	r23, 0x00	; 0
    14ee:	80 e8       	ldi	r24, 0x80	; 128
    14f0:	9f e3       	ldi	r25, 0x3F	; 63
    14f2:	0c 94 23 09 	jmp	0x1246	; 0x1246 <__divsf3>
    14f6:	0e 94 26 0a 	call	0x144c	; 0x144c <__fp_pscA>
    14fa:	38 f0       	brcs	.+14     	; 0x150a <inverse+0x24>
    14fc:	0e 94 2d 0a 	call	0x145a	; 0x145a <__fp_pscB>
    1500:	20 f0       	brcs	.+8      	; 0x150a <inverse+0x24>
    1502:	95 23       	and	r25, r21
    1504:	11 f0       	breq	.+4      	; 0x150a <inverse+0x24>
    1506:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    150a:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    150e:	11 24       	eor	r1, r1
    1510:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_szero>

00001514 <__mulsf3x>:
    1514:	0e 94 45 0a 	call	0x148a	; 0x148a <__fp_split3>
    1518:	70 f3       	brcs	.-36     	; 0x14f6 <inverse+0x10>

0000151a <__mulsf3_pse>:
    151a:	95 9f       	mul	r25, r21
    151c:	c1 f3       	breq	.-16     	; 0x150e <inverse+0x28>
    151e:	95 0f       	add	r25, r21
    1520:	50 e0       	ldi	r21, 0x00	; 0
    1522:	55 1f       	adc	r21, r21
    1524:	62 9f       	mul	r22, r18
    1526:	f0 01       	movw	r30, r0
    1528:	72 9f       	mul	r23, r18
    152a:	bb 27       	eor	r27, r27
    152c:	f0 0d       	add	r31, r0
    152e:	b1 1d       	adc	r27, r1
    1530:	63 9f       	mul	r22, r19
    1532:	aa 27       	eor	r26, r26
    1534:	f0 0d       	add	r31, r0
    1536:	b1 1d       	adc	r27, r1
    1538:	aa 1f       	adc	r26, r26
    153a:	64 9f       	mul	r22, r20
    153c:	66 27       	eor	r22, r22
    153e:	b0 0d       	add	r27, r0
    1540:	a1 1d       	adc	r26, r1
    1542:	66 1f       	adc	r22, r22
    1544:	82 9f       	mul	r24, r18
    1546:	22 27       	eor	r18, r18
    1548:	b0 0d       	add	r27, r0
    154a:	a1 1d       	adc	r26, r1
    154c:	62 1f       	adc	r22, r18
    154e:	73 9f       	mul	r23, r19
    1550:	b0 0d       	add	r27, r0
    1552:	a1 1d       	adc	r26, r1
    1554:	62 1f       	adc	r22, r18
    1556:	83 9f       	mul	r24, r19
    1558:	a0 0d       	add	r26, r0
    155a:	61 1d       	adc	r22, r1
    155c:	22 1f       	adc	r18, r18
    155e:	74 9f       	mul	r23, r20
    1560:	33 27       	eor	r19, r19
    1562:	a0 0d       	add	r26, r0
    1564:	61 1d       	adc	r22, r1
    1566:	23 1f       	adc	r18, r19
    1568:	84 9f       	mul	r24, r20
    156a:	60 0d       	add	r22, r0
    156c:	21 1d       	adc	r18, r1
    156e:	82 2f       	mov	r24, r18
    1570:	76 2f       	mov	r23, r22
    1572:	6a 2f       	mov	r22, r26
    1574:	11 24       	eor	r1, r1
    1576:	9f 57       	subi	r25, 0x7F	; 127
    1578:	50 40       	sbci	r21, 0x00	; 0
    157a:	9a f0       	brmi	.+38     	; 0x15a2 <__mulsf3_pse+0x88>
    157c:	f1 f0       	breq	.+60     	; 0x15ba <__mulsf3_pse+0xa0>
    157e:	88 23       	and	r24, r24
    1580:	4a f0       	brmi	.+18     	; 0x1594 <__mulsf3_pse+0x7a>
    1582:	ee 0f       	add	r30, r30
    1584:	ff 1f       	adc	r31, r31
    1586:	bb 1f       	adc	r27, r27
    1588:	66 1f       	adc	r22, r22
    158a:	77 1f       	adc	r23, r23
    158c:	88 1f       	adc	r24, r24
    158e:	91 50       	subi	r25, 0x01	; 1
    1590:	50 40       	sbci	r21, 0x00	; 0
    1592:	a9 f7       	brne	.-22     	; 0x157e <__mulsf3_pse+0x64>
    1594:	9e 3f       	cpi	r25, 0xFE	; 254
    1596:	51 05       	cpc	r21, r1
    1598:	80 f0       	brcs	.+32     	; 0x15ba <__mulsf3_pse+0xa0>
    159a:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    159e:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_szero>
    15a2:	5f 3f       	cpi	r21, 0xFF	; 255
    15a4:	e4 f3       	brlt	.-8      	; 0x159e <__mulsf3_pse+0x84>
    15a6:	98 3e       	cpi	r25, 0xE8	; 232
    15a8:	d4 f3       	brlt	.-12     	; 0x159e <__mulsf3_pse+0x84>
    15aa:	86 95       	lsr	r24
    15ac:	77 95       	ror	r23
    15ae:	67 95       	ror	r22
    15b0:	b7 95       	ror	r27
    15b2:	f7 95       	ror	r31
    15b4:	e7 95       	ror	r30
    15b6:	9f 5f       	subi	r25, 0xFF	; 255
    15b8:	c1 f7       	brne	.-16     	; 0x15aa <__mulsf3_pse+0x90>
    15ba:	fe 2b       	or	r31, r30
    15bc:	88 0f       	add	r24, r24
    15be:	91 1d       	adc	r25, r1
    15c0:	96 95       	lsr	r25
    15c2:	87 95       	ror	r24
    15c4:	97 f9       	bld	r25, 7
    15c6:	08 95       	ret

000015c8 <pow>:
    15c8:	fa 01       	movw	r30, r20
    15ca:	ee 0f       	add	r30, r30
    15cc:	ff 1f       	adc	r31, r31
    15ce:	30 96       	adiw	r30, 0x00	; 0
    15d0:	21 05       	cpc	r18, r1
    15d2:	31 05       	cpc	r19, r1
    15d4:	a1 f1       	breq	.+104    	; 0x163e <pow+0x76>
    15d6:	61 15       	cp	r22, r1
    15d8:	71 05       	cpc	r23, r1
    15da:	61 f4       	brne	.+24     	; 0x15f4 <pow+0x2c>
    15dc:	80 38       	cpi	r24, 0x80	; 128
    15de:	bf e3       	ldi	r27, 0x3F	; 63
    15e0:	9b 07       	cpc	r25, r27
    15e2:	49 f1       	breq	.+82     	; 0x1636 <pow+0x6e>
    15e4:	68 94       	set
    15e6:	90 38       	cpi	r25, 0x80	; 128
    15e8:	81 05       	cpc	r24, r1
    15ea:	61 f0       	breq	.+24     	; 0x1604 <pow+0x3c>
    15ec:	80 38       	cpi	r24, 0x80	; 128
    15ee:	bf ef       	ldi	r27, 0xFF	; 255
    15f0:	9b 07       	cpc	r25, r27
    15f2:	41 f0       	breq	.+16     	; 0x1604 <pow+0x3c>
    15f4:	99 23       	and	r25, r25
    15f6:	4a f5       	brpl	.+82     	; 0x164a <pow+0x82>
    15f8:	ff 3f       	cpi	r31, 0xFF	; 255
    15fa:	e1 05       	cpc	r30, r1
    15fc:	31 05       	cpc	r19, r1
    15fe:	21 05       	cpc	r18, r1
    1600:	19 f1       	breq	.+70     	; 0x1648 <pow+0x80>
    1602:	e8 94       	clt
    1604:	08 94       	sec
    1606:	e7 95       	ror	r30
    1608:	d9 01       	movw	r26, r18
    160a:	aa 23       	and	r26, r26
    160c:	29 f4       	brne	.+10     	; 0x1618 <pow+0x50>
    160e:	ab 2f       	mov	r26, r27
    1610:	be 2f       	mov	r27, r30
    1612:	f8 5f       	subi	r31, 0xF8	; 248
    1614:	d0 f3       	brcs	.-12     	; 0x160a <pow+0x42>
    1616:	10 c0       	rjmp	.+32     	; 0x1638 <pow+0x70>
    1618:	ff 5f       	subi	r31, 0xFF	; 255
    161a:	70 f4       	brcc	.+28     	; 0x1638 <pow+0x70>
    161c:	a6 95       	lsr	r26
    161e:	e0 f7       	brcc	.-8      	; 0x1618 <pow+0x50>
    1620:	f7 39       	cpi	r31, 0x97	; 151
    1622:	50 f0       	brcs	.+20     	; 0x1638 <pow+0x70>
    1624:	19 f0       	breq	.+6      	; 0x162c <pow+0x64>
    1626:	ff 3a       	cpi	r31, 0xAF	; 175
    1628:	38 f4       	brcc	.+14     	; 0x1638 <pow+0x70>
    162a:	9f 77       	andi	r25, 0x7F	; 127
    162c:	9f 93       	push	r25
    162e:	0d d0       	rcall	.+26     	; 0x164a <pow+0x82>
    1630:	0f 90       	pop	r0
    1632:	07 fc       	sbrc	r0, 7
    1634:	90 58       	subi	r25, 0x80	; 128
    1636:	08 95       	ret
    1638:	46 f0       	brts	.+16     	; 0x164a <pow+0x82>
    163a:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    163e:	60 e0       	ldi	r22, 0x00	; 0
    1640:	70 e0       	ldi	r23, 0x00	; 0
    1642:	80 e8       	ldi	r24, 0x80	; 128
    1644:	9f e3       	ldi	r25, 0x3F	; 63
    1646:	08 95       	ret
    1648:	4f e7       	ldi	r20, 0x7F	; 127
    164a:	9f 77       	andi	r25, 0x7F	; 127
    164c:	5f 93       	push	r21
    164e:	4f 93       	push	r20
    1650:	3f 93       	push	r19
    1652:	2f 93       	push	r18
    1654:	0e 94 0f 0c 	call	0x181e	; 0x181e <log>
    1658:	2f 91       	pop	r18
    165a:	3f 91       	pop	r19
    165c:	4f 91       	pop	r20
    165e:	5f 91       	pop	r21
    1660:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__mulsf3>
    1664:	0c 94 86 0b 	jmp	0x170c	; 0x170c <exp>
    1668:	19 f4       	brne	.+6      	; 0x1670 <pow+0xa8>
    166a:	16 f4       	brtc	.+4      	; 0x1670 <pow+0xa8>
    166c:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    1670:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__fp_mpack>

00001674 <sqrt>:
    1674:	0e 94 4d 0a 	call	0x149a	; 0x149a <__fp_splitA>
    1678:	b8 f3       	brcs	.-18     	; 0x1668 <pow+0xa0>
    167a:	99 23       	and	r25, r25
    167c:	c9 f3       	breq	.-14     	; 0x1670 <pow+0xa8>
    167e:	b6 f3       	brts	.-20     	; 0x166c <pow+0xa4>
    1680:	9f 57       	subi	r25, 0x7F	; 127
    1682:	55 0b       	sbc	r21, r21
    1684:	87 ff       	sbrs	r24, 7
    1686:	0e 94 c6 0b 	call	0x178c	; 0x178c <__fp_norm2>
    168a:	00 24       	eor	r0, r0
    168c:	a0 e6       	ldi	r26, 0x60	; 96
    168e:	40 ea       	ldi	r20, 0xA0	; 160
    1690:	90 01       	movw	r18, r0
    1692:	80 58       	subi	r24, 0x80	; 128
    1694:	56 95       	lsr	r21
    1696:	97 95       	ror	r25
    1698:	28 f4       	brcc	.+10     	; 0x16a4 <sqrt+0x30>
    169a:	80 5c       	subi	r24, 0xC0	; 192
    169c:	66 0f       	add	r22, r22
    169e:	77 1f       	adc	r23, r23
    16a0:	88 1f       	adc	r24, r24
    16a2:	20 f0       	brcs	.+8      	; 0x16ac <sqrt+0x38>
    16a4:	26 17       	cp	r18, r22
    16a6:	37 07       	cpc	r19, r23
    16a8:	48 07       	cpc	r20, r24
    16aa:	30 f4       	brcc	.+12     	; 0x16b8 <sqrt+0x44>
    16ac:	62 1b       	sub	r22, r18
    16ae:	73 0b       	sbc	r23, r19
    16b0:	84 0b       	sbc	r24, r20
    16b2:	20 29       	or	r18, r0
    16b4:	31 29       	or	r19, r1
    16b6:	4a 2b       	or	r20, r26
    16b8:	a6 95       	lsr	r26
    16ba:	17 94       	ror	r1
    16bc:	07 94       	ror	r0
    16be:	20 25       	eor	r18, r0
    16c0:	31 25       	eor	r19, r1
    16c2:	4a 27       	eor	r20, r26
    16c4:	58 f7       	brcc	.-42     	; 0x169c <sqrt+0x28>
    16c6:	66 0f       	add	r22, r22
    16c8:	77 1f       	adc	r23, r23
    16ca:	88 1f       	adc	r24, r24
    16cc:	20 f0       	brcs	.+8      	; 0x16d6 <sqrt+0x62>
    16ce:	26 17       	cp	r18, r22
    16d0:	37 07       	cpc	r19, r23
    16d2:	48 07       	cpc	r20, r24
    16d4:	30 f4       	brcc	.+12     	; 0x16e2 <sqrt+0x6e>
    16d6:	62 0b       	sbc	r22, r18
    16d8:	73 0b       	sbc	r23, r19
    16da:	84 0b       	sbc	r24, r20
    16dc:	20 0d       	add	r18, r0
    16de:	31 1d       	adc	r19, r1
    16e0:	41 1d       	adc	r20, r1
    16e2:	a0 95       	com	r26
    16e4:	81 f7       	brne	.-32     	; 0x16c6 <sqrt+0x52>
    16e6:	b9 01       	movw	r22, r18
    16e8:	84 2f       	mov	r24, r20
    16ea:	91 58       	subi	r25, 0x81	; 129
    16ec:	88 0f       	add	r24, r24
    16ee:	96 95       	lsr	r25
    16f0:	87 95       	ror	r24
    16f2:	08 95       	ret

000016f4 <square>:
    16f4:	9b 01       	movw	r18, r22
    16f6:	ac 01       	movw	r20, r24
    16f8:	0c 94 8b 0c 	jmp	0x1916	; 0x1916 <__mulsf3>
    16fc:	29 f4       	brne	.+10     	; 0x1708 <square+0x14>
    16fe:	16 f0       	brts	.+4      	; 0x1704 <square+0x10>
    1700:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    1704:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__fp_zero>
    1708:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>

0000170c <exp>:
    170c:	0e 94 4d 0a 	call	0x149a	; 0x149a <__fp_splitA>
    1710:	a8 f3       	brcs	.-22     	; 0x16fc <square+0x8>
    1712:	96 38       	cpi	r25, 0x86	; 134
    1714:	a0 f7       	brcc	.-24     	; 0x16fe <square+0xa>
    1716:	07 f8       	bld	r0, 7
    1718:	0f 92       	push	r0
    171a:	e8 94       	clt
    171c:	2b e3       	ldi	r18, 0x3B	; 59
    171e:	3a ea       	ldi	r19, 0xAA	; 170
    1720:	48 eb       	ldi	r20, 0xB8	; 184
    1722:	5f e7       	ldi	r21, 0x7F	; 127
    1724:	0e 94 8d 0a 	call	0x151a	; 0x151a <__mulsf3_pse>
    1728:	0f 92       	push	r0
    172a:	0f 92       	push	r0
    172c:	0f 92       	push	r0
    172e:	4d b7       	in	r20, 0x3d	; 61
    1730:	5e b7       	in	r21, 0x3e	; 62
    1732:	0f 92       	push	r0
    1734:	0e 94 57 0c 	call	0x18ae	; 0x18ae <modf>
    1738:	ed e9       	ldi	r30, 0x9D	; 157
    173a:	f0 e0       	ldi	r31, 0x00	; 0
    173c:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fp_powser>
    1740:	4f 91       	pop	r20
    1742:	5f 91       	pop	r21
    1744:	ef 91       	pop	r30
    1746:	ff 91       	pop	r31
    1748:	e5 95       	asr	r30
    174a:	ee 1f       	adc	r30, r30
    174c:	ff 1f       	adc	r31, r31
    174e:	49 f0       	breq	.+18     	; 0x1762 <exp+0x56>
    1750:	fe 57       	subi	r31, 0x7E	; 126
    1752:	e0 68       	ori	r30, 0x80	; 128
    1754:	44 27       	eor	r20, r20
    1756:	ee 0f       	add	r30, r30
    1758:	44 1f       	adc	r20, r20
    175a:	fa 95       	dec	r31
    175c:	e1 f7       	brne	.-8      	; 0x1756 <exp+0x4a>
    175e:	41 95       	neg	r20
    1760:	55 0b       	sbc	r21, r21
    1762:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <ldexp>
    1766:	0f 90       	pop	r0
    1768:	07 fe       	sbrs	r0, 7
    176a:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <inverse>
    176e:	08 95       	ret

00001770 <__fp_mpack>:
    1770:	9f 3f       	cpi	r25, 0xFF	; 255
    1772:	31 f0       	breq	.+12     	; 0x1780 <__fp_mpack_finite+0xc>

00001774 <__fp_mpack_finite>:
    1774:	91 50       	subi	r25, 0x01	; 1
    1776:	20 f4       	brcc	.+8      	; 0x1780 <__fp_mpack_finite+0xc>
    1778:	87 95       	ror	r24
    177a:	77 95       	ror	r23
    177c:	67 95       	ror	r22
    177e:	b7 95       	ror	r27
    1780:	88 0f       	add	r24, r24
    1782:	91 1d       	adc	r25, r1
    1784:	96 95       	lsr	r25
    1786:	87 95       	ror	r24
    1788:	97 f9       	bld	r25, 7
    178a:	08 95       	ret

0000178c <__fp_norm2>:
    178c:	91 50       	subi	r25, 0x01	; 1
    178e:	50 40       	sbci	r21, 0x00	; 0
    1790:	66 0f       	add	r22, r22
    1792:	77 1f       	adc	r23, r23
    1794:	88 1f       	adc	r24, r24
    1796:	d2 f7       	brpl	.-12     	; 0x178c <__fp_norm2>
    1798:	08 95       	ret
    179a:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>
    179e:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__fp_mpack>

000017a2 <ldexp>:
    17a2:	0e 94 4d 0a 	call	0x149a	; 0x149a <__fp_splitA>
    17a6:	d8 f3       	brcs	.-10     	; 0x179e <__fp_norm2+0x12>
    17a8:	99 23       	and	r25, r25
    17aa:	c9 f3       	breq	.-14     	; 0x179e <__fp_norm2+0x12>
    17ac:	94 0f       	add	r25, r20
    17ae:	51 1d       	adc	r21, r1
    17b0:	a3 f3       	brvs	.-24     	; 0x179a <__fp_norm2+0xe>
    17b2:	91 50       	subi	r25, 0x01	; 1
    17b4:	50 40       	sbci	r21, 0x00	; 0
    17b6:	94 f0       	brlt	.+36     	; 0x17dc <ldexp+0x3a>
    17b8:	59 f0       	breq	.+22     	; 0x17d0 <ldexp+0x2e>
    17ba:	88 23       	and	r24, r24
    17bc:	32 f0       	brmi	.+12     	; 0x17ca <ldexp+0x28>
    17be:	66 0f       	add	r22, r22
    17c0:	77 1f       	adc	r23, r23
    17c2:	88 1f       	adc	r24, r24
    17c4:	91 50       	subi	r25, 0x01	; 1
    17c6:	50 40       	sbci	r21, 0x00	; 0
    17c8:	c1 f7       	brne	.-16     	; 0x17ba <ldexp+0x18>
    17ca:	9e 3f       	cpi	r25, 0xFE	; 254
    17cc:	51 05       	cpc	r21, r1
    17ce:	2c f7       	brge	.-54     	; 0x179a <__fp_norm2+0xe>
    17d0:	88 0f       	add	r24, r24
    17d2:	91 1d       	adc	r25, r1
    17d4:	96 95       	lsr	r25
    17d6:	87 95       	ror	r24
    17d8:	97 f9       	bld	r25, 7
    17da:	08 95       	ret
    17dc:	5f 3f       	cpi	r21, 0xFF	; 255
    17de:	ac f0       	brlt	.+42     	; 0x180a <ldexp+0x68>
    17e0:	98 3e       	cpi	r25, 0xE8	; 232
    17e2:	9c f0       	brlt	.+38     	; 0x180a <ldexp+0x68>
    17e4:	bb 27       	eor	r27, r27
    17e6:	86 95       	lsr	r24
    17e8:	77 95       	ror	r23
    17ea:	67 95       	ror	r22
    17ec:	b7 95       	ror	r27
    17ee:	08 f4       	brcc	.+2      	; 0x17f2 <ldexp+0x50>
    17f0:	b1 60       	ori	r27, 0x01	; 1
    17f2:	93 95       	inc	r25
    17f4:	c1 f7       	brne	.-16     	; 0x17e6 <ldexp+0x44>
    17f6:	bb 0f       	add	r27, r27
    17f8:	58 f7       	brcc	.-42     	; 0x17d0 <ldexp+0x2e>
    17fa:	11 f4       	brne	.+4      	; 0x1800 <ldexp+0x5e>
    17fc:	60 ff       	sbrs	r22, 0
    17fe:	e8 cf       	rjmp	.-48     	; 0x17d0 <ldexp+0x2e>
    1800:	6f 5f       	subi	r22, 0xFF	; 255
    1802:	7f 4f       	sbci	r23, 0xFF	; 255
    1804:	8f 4f       	sbci	r24, 0xFF	; 255
    1806:	9f 4f       	sbci	r25, 0xFF	; 255
    1808:	e3 cf       	rjmp	.-58     	; 0x17d0 <ldexp+0x2e>
    180a:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_szero>
    180e:	16 f0       	brts	.+4      	; 0x1814 <ldexp+0x72>
    1810:	0c 94 b8 0b 	jmp	0x1770	; 0x1770 <__fp_mpack>
    1814:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_nan>
    1818:	68 94       	set
    181a:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_inf>

0000181e <log>:
    181e:	0e 94 4d 0a 	call	0x149a	; 0x149a <__fp_splitA>
    1822:	a8 f3       	brcs	.-22     	; 0x180e <ldexp+0x6c>
    1824:	99 23       	and	r25, r25
    1826:	c1 f3       	breq	.-16     	; 0x1818 <ldexp+0x76>
    1828:	ae f3       	brts	.-22     	; 0x1814 <ldexp+0x72>
    182a:	df 93       	push	r29
    182c:	cf 93       	push	r28
    182e:	1f 93       	push	r17
    1830:	0f 93       	push	r16
    1832:	ff 92       	push	r15
    1834:	c9 2f       	mov	r28, r25
    1836:	dd 27       	eor	r29, r29
    1838:	88 23       	and	r24, r24
    183a:	2a f0       	brmi	.+10     	; 0x1846 <log+0x28>
    183c:	21 97       	sbiw	r28, 0x01	; 1
    183e:	66 0f       	add	r22, r22
    1840:	77 1f       	adc	r23, r23
    1842:	88 1f       	adc	r24, r24
    1844:	da f7       	brpl	.-10     	; 0x183c <log+0x1e>
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	40 e8       	ldi	r20, 0x80	; 128
    184c:	5f eb       	ldi	r21, 0xBF	; 191
    184e:	9f e3       	ldi	r25, 0x3F	; 63
    1850:	88 39       	cpi	r24, 0x98	; 152
    1852:	20 f0       	brcs	.+8      	; 0x185c <log+0x3e>
    1854:	80 3e       	cpi	r24, 0xE0	; 224
    1856:	38 f0       	brcs	.+14     	; 0x1866 <log+0x48>
    1858:	21 96       	adiw	r28, 0x01	; 1
    185a:	8f 77       	andi	r24, 0x7F	; 127
    185c:	0e 94 40 08 	call	0x1080	; 0x1080 <__addsf3>
    1860:	e5 ec       	ldi	r30, 0xC5	; 197
    1862:	f0 e0       	ldi	r31, 0x00	; 0
    1864:	04 c0       	rjmp	.+8      	; 0x186e <log+0x50>
    1866:	0e 94 40 08 	call	0x1080	; 0x1080 <__addsf3>
    186a:	e2 ef       	ldi	r30, 0xF2	; 242
    186c:	f0 e0       	ldi	r31, 0x00	; 0
    186e:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__fp_powser>
    1872:	8b 01       	movw	r16, r22
    1874:	be 01       	movw	r22, r28
    1876:	ec 01       	movw	r28, r24
    1878:	fb 2e       	mov	r15, r27
    187a:	6f 57       	subi	r22, 0x7F	; 127
    187c:	71 09       	sbc	r23, r1
    187e:	75 95       	asr	r23
    1880:	77 1f       	adc	r23, r23
    1882:	88 0b       	sbc	r24, r24
    1884:	99 0b       	sbc	r25, r25
    1886:	0e 94 97 09 	call	0x132e	; 0x132e <__floatsisf>
    188a:	28 e1       	ldi	r18, 0x18	; 24
    188c:	32 e7       	ldi	r19, 0x72	; 114
    188e:	41 e3       	ldi	r20, 0x31	; 49
    1890:	5f e3       	ldi	r21, 0x3F	; 63
    1892:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3x>
    1896:	af 2d       	mov	r26, r15
    1898:	98 01       	movw	r18, r16
    189a:	ae 01       	movw	r20, r28
    189c:	ff 90       	pop	r15
    189e:	0f 91       	pop	r16
    18a0:	1f 91       	pop	r17
    18a2:	cf 91       	pop	r28
    18a4:	df 91       	pop	r29
    18a6:	0e 94 57 08 	call	0x10ae	; 0x10ae <__addsf3x>
    18aa:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__fp_round>

000018ae <modf>:
    18ae:	fa 01       	movw	r30, r20
    18b0:	dc 01       	movw	r26, r24
    18b2:	aa 0f       	add	r26, r26
    18b4:	bb 1f       	adc	r27, r27
    18b6:	9b 01       	movw	r18, r22
    18b8:	ac 01       	movw	r20, r24
    18ba:	bf 57       	subi	r27, 0x7F	; 127
    18bc:	28 f4       	brcc	.+10     	; 0x18c8 <modf+0x1a>
    18be:	22 27       	eor	r18, r18
    18c0:	33 27       	eor	r19, r19
    18c2:	44 27       	eor	r20, r20
    18c4:	50 78       	andi	r21, 0x80	; 128
    18c6:	20 c0       	rjmp	.+64     	; 0x1908 <modf+0x5a>
    18c8:	b7 51       	subi	r27, 0x17	; 23
    18ca:	90 f4       	brcc	.+36     	; 0x18f0 <modf+0x42>
    18cc:	ab 2f       	mov	r26, r27
    18ce:	00 24       	eor	r0, r0
    18d0:	46 95       	lsr	r20
    18d2:	37 95       	ror	r19
    18d4:	27 95       	ror	r18
    18d6:	01 1c       	adc	r0, r1
    18d8:	a3 95       	inc	r26
    18da:	d2 f3       	brmi	.-12     	; 0x18d0 <modf+0x22>
    18dc:	00 20       	and	r0, r0
    18de:	71 f0       	breq	.+28     	; 0x18fc <modf+0x4e>
    18e0:	22 0f       	add	r18, r18
    18e2:	33 1f       	adc	r19, r19
    18e4:	44 1f       	adc	r20, r20
    18e6:	b3 95       	inc	r27
    18e8:	da f3       	brmi	.-10     	; 0x18e0 <modf+0x32>
    18ea:	0e d0       	rcall	.+28     	; 0x1908 <modf+0x5a>
    18ec:	0c 94 3f 08 	jmp	0x107e	; 0x107e <__subsf3>
    18f0:	61 30       	cpi	r22, 0x01	; 1
    18f2:	71 05       	cpc	r23, r1
    18f4:	a0 e8       	ldi	r26, 0x80	; 128
    18f6:	8a 07       	cpc	r24, r26
    18f8:	b9 46       	sbci	r27, 0x69	; 105
    18fa:	30 f4       	brcc	.+12     	; 0x1908 <modf+0x5a>
    18fc:	9b 01       	movw	r18, r22
    18fe:	ac 01       	movw	r20, r24
    1900:	66 27       	eor	r22, r22
    1902:	77 27       	eor	r23, r23
    1904:	88 27       	eor	r24, r24
    1906:	90 78       	andi	r25, 0x80	; 128
    1908:	30 96       	adiw	r30, 0x00	; 0
    190a:	21 f0       	breq	.+8      	; 0x1914 <modf+0x66>
    190c:	20 83       	st	Z, r18
    190e:	31 83       	std	Z+1, r19	; 0x01
    1910:	42 83       	std	Z+2, r20	; 0x02
    1912:	53 83       	std	Z+3, r21	; 0x03
    1914:	08 95       	ret

00001916 <__mulsf3>:
    1916:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3x>
    191a:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__fp_round>

0000191e <do_rand>:
    191e:	8f 92       	push	r8
    1920:	9f 92       	push	r9
    1922:	af 92       	push	r10
    1924:	bf 92       	push	r11
    1926:	cf 92       	push	r12
    1928:	df 92       	push	r13
    192a:	ef 92       	push	r14
    192c:	ff 92       	push	r15
    192e:	cf 93       	push	r28
    1930:	df 93       	push	r29
    1932:	ec 01       	movw	r28, r24
    1934:	68 81       	ld	r22, Y
    1936:	79 81       	ldd	r23, Y+1	; 0x01
    1938:	8a 81       	ldd	r24, Y+2	; 0x02
    193a:	9b 81       	ldd	r25, Y+3	; 0x03
    193c:	61 15       	cp	r22, r1
    193e:	71 05       	cpc	r23, r1
    1940:	81 05       	cpc	r24, r1
    1942:	91 05       	cpc	r25, r1
    1944:	21 f4       	brne	.+8      	; 0x194e <do_rand+0x30>
    1946:	64 e2       	ldi	r22, 0x24	; 36
    1948:	79 ed       	ldi	r23, 0xD9	; 217
    194a:	8b e5       	ldi	r24, 0x5B	; 91
    194c:	97 e0       	ldi	r25, 0x07	; 7
    194e:	2d e1       	ldi	r18, 0x1D	; 29
    1950:	33 ef       	ldi	r19, 0xF3	; 243
    1952:	41 e0       	ldi	r20, 0x01	; 1
    1954:	50 e0       	ldi	r21, 0x00	; 0
    1956:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__divmodsi4>
    195a:	49 01       	movw	r8, r18
    195c:	5a 01       	movw	r10, r20
    195e:	9b 01       	movw	r18, r22
    1960:	ac 01       	movw	r20, r24
    1962:	a7 ea       	ldi	r26, 0xA7	; 167
    1964:	b1 e4       	ldi	r27, 0x41	; 65
    1966:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__muluhisi3>
    196a:	6b 01       	movw	r12, r22
    196c:	7c 01       	movw	r14, r24
    196e:	ac ee       	ldi	r26, 0xEC	; 236
    1970:	b4 ef       	ldi	r27, 0xF4	; 244
    1972:	a5 01       	movw	r20, r10
    1974:	94 01       	movw	r18, r8
    1976:	0e 94 7e 11 	call	0x22fc	; 0x22fc <__mulohisi3>
    197a:	dc 01       	movw	r26, r24
    197c:	cb 01       	movw	r24, r22
    197e:	8c 0d       	add	r24, r12
    1980:	9d 1d       	adc	r25, r13
    1982:	ae 1d       	adc	r26, r14
    1984:	bf 1d       	adc	r27, r15
    1986:	b7 ff       	sbrs	r27, 7
    1988:	03 c0       	rjmp	.+6      	; 0x1990 <do_rand+0x72>
    198a:	01 97       	sbiw	r24, 0x01	; 1
    198c:	a1 09       	sbc	r26, r1
    198e:	b0 48       	sbci	r27, 0x80	; 128
    1990:	88 83       	st	Y, r24
    1992:	99 83       	std	Y+1, r25	; 0x01
    1994:	aa 83       	std	Y+2, r26	; 0x02
    1996:	bb 83       	std	Y+3, r27	; 0x03
    1998:	9f 77       	andi	r25, 0x7F	; 127
    199a:	df 91       	pop	r29
    199c:	cf 91       	pop	r28
    199e:	ff 90       	pop	r15
    19a0:	ef 90       	pop	r14
    19a2:	df 90       	pop	r13
    19a4:	cf 90       	pop	r12
    19a6:	bf 90       	pop	r11
    19a8:	af 90       	pop	r10
    19aa:	9f 90       	pop	r9
    19ac:	8f 90       	pop	r8
    19ae:	08 95       	ret

000019b0 <rand_r>:
    19b0:	0e 94 8f 0c 	call	0x191e	; 0x191e <do_rand>
    19b4:	08 95       	ret

000019b6 <rand>:
    19b6:	80 e0       	ldi	r24, 0x00	; 0
    19b8:	91 e0       	ldi	r25, 0x01	; 1
    19ba:	0e 94 8f 0c 	call	0x191e	; 0x191e <do_rand>
    19be:	08 95       	ret

000019c0 <srand>:
    19c0:	a0 e0       	ldi	r26, 0x00	; 0
    19c2:	b0 e0       	ldi	r27, 0x00	; 0
    19c4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    19c8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19cc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    19d0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    19d4:	08 95       	ret

000019d6 <fdevopen>:
    19d6:	0f 93       	push	r16
    19d8:	1f 93       	push	r17
    19da:	cf 93       	push	r28
    19dc:	df 93       	push	r29
    19de:	00 97       	sbiw	r24, 0x00	; 0
    19e0:	31 f4       	brne	.+12     	; 0x19ee <fdevopen+0x18>
    19e2:	61 15       	cp	r22, r1
    19e4:	71 05       	cpc	r23, r1
    19e6:	19 f4       	brne	.+6      	; 0x19ee <fdevopen+0x18>
    19e8:	80 e0       	ldi	r24, 0x00	; 0
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	3a c0       	rjmp	.+116    	; 0x1a62 <fdevopen+0x8c>
    19ee:	8b 01       	movw	r16, r22
    19f0:	ec 01       	movw	r28, r24
    19f2:	6e e0       	ldi	r22, 0x0E	; 14
    19f4:	70 e0       	ldi	r23, 0x00	; 0
    19f6:	81 e0       	ldi	r24, 0x01	; 1
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <calloc>
    19fe:	fc 01       	movw	r30, r24
    1a00:	89 2b       	or	r24, r25
    1a02:	91 f3       	breq	.-28     	; 0x19e8 <fdevopen+0x12>
    1a04:	80 e8       	ldi	r24, 0x80	; 128
    1a06:	83 83       	std	Z+3, r24	; 0x03
    1a08:	01 15       	cp	r16, r1
    1a0a:	11 05       	cpc	r17, r1
    1a0c:	71 f0       	breq	.+28     	; 0x1a2a <fdevopen+0x54>
    1a0e:	13 87       	std	Z+11, r17	; 0x0b
    1a10:	02 87       	std	Z+10, r16	; 0x0a
    1a12:	81 e8       	ldi	r24, 0x81	; 129
    1a14:	83 83       	std	Z+3, r24	; 0x03
    1a16:	80 91 51 02 	lds	r24, 0x0251	; 0x800251 <__iob>
    1a1a:	90 91 52 02 	lds	r25, 0x0252	; 0x800252 <__iob+0x1>
    1a1e:	89 2b       	or	r24, r25
    1a20:	21 f4       	brne	.+8      	; 0x1a2a <fdevopen+0x54>
    1a22:	f0 93 52 02 	sts	0x0252, r31	; 0x800252 <__iob+0x1>
    1a26:	e0 93 51 02 	sts	0x0251, r30	; 0x800251 <__iob>
    1a2a:	20 97       	sbiw	r28, 0x00	; 0
    1a2c:	c9 f0       	breq	.+50     	; 0x1a60 <fdevopen+0x8a>
    1a2e:	d1 87       	std	Z+9, r29	; 0x09
    1a30:	c0 87       	std	Z+8, r28	; 0x08
    1a32:	83 81       	ldd	r24, Z+3	; 0x03
    1a34:	82 60       	ori	r24, 0x02	; 2
    1a36:	83 83       	std	Z+3, r24	; 0x03
    1a38:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <__iob+0x2>
    1a3c:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <__iob+0x3>
    1a40:	89 2b       	or	r24, r25
    1a42:	71 f4       	brne	.+28     	; 0x1a60 <fdevopen+0x8a>
    1a44:	f0 93 54 02 	sts	0x0254, r31	; 0x800254 <__iob+0x3>
    1a48:	e0 93 53 02 	sts	0x0253, r30	; 0x800253 <__iob+0x2>
    1a4c:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <__iob+0x4>
    1a50:	90 91 56 02 	lds	r25, 0x0256	; 0x800256 <__iob+0x5>
    1a54:	89 2b       	or	r24, r25
    1a56:	21 f4       	brne	.+8      	; 0x1a60 <fdevopen+0x8a>
    1a58:	f0 93 56 02 	sts	0x0256, r31	; 0x800256 <__iob+0x5>
    1a5c:	e0 93 55 02 	sts	0x0255, r30	; 0x800255 <__iob+0x4>
    1a60:	cf 01       	movw	r24, r30
    1a62:	df 91       	pop	r29
    1a64:	cf 91       	pop	r28
    1a66:	1f 91       	pop	r17
    1a68:	0f 91       	pop	r16
    1a6a:	08 95       	ret

00001a6c <printf>:
    1a6c:	a0 e0       	ldi	r26, 0x00	; 0
    1a6e:	b0 e0       	ldi	r27, 0x00	; 0
    1a70:	ec e3       	ldi	r30, 0x3C	; 60
    1a72:	fd e0       	ldi	r31, 0x0D	; 13
    1a74:	0c 94 93 11 	jmp	0x2326	; 0x2326 <__prologue_saves__+0x20>
    1a78:	ae 01       	movw	r20, r28
    1a7a:	4b 5f       	subi	r20, 0xFB	; 251
    1a7c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a7e:	fa 01       	movw	r30, r20
    1a80:	61 91       	ld	r22, Z+
    1a82:	71 91       	ld	r23, Z+
    1a84:	af 01       	movw	r20, r30
    1a86:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <__iob+0x2>
    1a8a:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <__iob+0x3>
    1a8e:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <vfprintf>
    1a92:	e2 e0       	ldi	r30, 0x02	; 2
    1a94:	0c 94 af 11 	jmp	0x235e	; 0x235e <__epilogue_restores__+0x20>

00001a98 <puts>:
    1a98:	0f 93       	push	r16
    1a9a:	1f 93       	push	r17
    1a9c:	cf 93       	push	r28
    1a9e:	df 93       	push	r29
    1aa0:	e0 91 53 02 	lds	r30, 0x0253	; 0x800253 <__iob+0x2>
    1aa4:	f0 91 54 02 	lds	r31, 0x0254	; 0x800254 <__iob+0x3>
    1aa8:	23 81       	ldd	r18, Z+3	; 0x03
    1aaa:	21 ff       	sbrs	r18, 1
    1aac:	1b c0       	rjmp	.+54     	; 0x1ae4 <puts+0x4c>
    1aae:	8c 01       	movw	r16, r24
    1ab0:	d0 e0       	ldi	r29, 0x00	; 0
    1ab2:	c0 e0       	ldi	r28, 0x00	; 0
    1ab4:	f8 01       	movw	r30, r16
    1ab6:	81 91       	ld	r24, Z+
    1ab8:	8f 01       	movw	r16, r30
    1aba:	60 91 53 02 	lds	r22, 0x0253	; 0x800253 <__iob+0x2>
    1abe:	70 91 54 02 	lds	r23, 0x0254	; 0x800254 <__iob+0x3>
    1ac2:	db 01       	movw	r26, r22
    1ac4:	18 96       	adiw	r26, 0x08	; 8
    1ac6:	ed 91       	ld	r30, X+
    1ac8:	fc 91       	ld	r31, X
    1aca:	19 97       	sbiw	r26, 0x09	; 9
    1acc:	88 23       	and	r24, r24
    1ace:	31 f0       	breq	.+12     	; 0x1adc <puts+0x44>
    1ad0:	09 95       	icall
    1ad2:	89 2b       	or	r24, r25
    1ad4:	79 f3       	breq	.-34     	; 0x1ab4 <puts+0x1c>
    1ad6:	df ef       	ldi	r29, 0xFF	; 255
    1ad8:	cf ef       	ldi	r28, 0xFF	; 255
    1ada:	ec cf       	rjmp	.-40     	; 0x1ab4 <puts+0x1c>
    1adc:	8a e0       	ldi	r24, 0x0A	; 10
    1ade:	09 95       	icall
    1ae0:	89 2b       	or	r24, r25
    1ae2:	19 f0       	breq	.+6      	; 0x1aea <puts+0x52>
    1ae4:	8f ef       	ldi	r24, 0xFF	; 255
    1ae6:	9f ef       	ldi	r25, 0xFF	; 255
    1ae8:	02 c0       	rjmp	.+4      	; 0x1aee <puts+0x56>
    1aea:	8d 2f       	mov	r24, r29
    1aec:	9c 2f       	mov	r25, r28
    1aee:	df 91       	pop	r29
    1af0:	cf 91       	pop	r28
    1af2:	1f 91       	pop	r17
    1af4:	0f 91       	pop	r16
    1af6:	08 95       	ret

00001af8 <vfprintf>:
    1af8:	ab e0       	ldi	r26, 0x0B	; 11
    1afa:	b0 e0       	ldi	r27, 0x00	; 0
    1afc:	e2 e8       	ldi	r30, 0x82	; 130
    1afe:	fd e0       	ldi	r31, 0x0D	; 13
    1b00:	0c 94 83 11 	jmp	0x2306	; 0x2306 <__prologue_saves__>
    1b04:	6c 01       	movw	r12, r24
    1b06:	7b 01       	movw	r14, r22
    1b08:	8a 01       	movw	r16, r20
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	17 82       	std	Z+7, r1	; 0x07
    1b0e:	16 82       	std	Z+6, r1	; 0x06
    1b10:	83 81       	ldd	r24, Z+3	; 0x03
    1b12:	81 ff       	sbrs	r24, 1
    1b14:	cc c1       	rjmp	.+920    	; 0x1eae <vfprintf+0x3b6>
    1b16:	ce 01       	movw	r24, r28
    1b18:	01 96       	adiw	r24, 0x01	; 1
    1b1a:	3c 01       	movw	r6, r24
    1b1c:	f6 01       	movw	r30, r12
    1b1e:	93 81       	ldd	r25, Z+3	; 0x03
    1b20:	f7 01       	movw	r30, r14
    1b22:	93 fd       	sbrc	r25, 3
    1b24:	85 91       	lpm	r24, Z+
    1b26:	93 ff       	sbrs	r25, 3
    1b28:	81 91       	ld	r24, Z+
    1b2a:	7f 01       	movw	r14, r30
    1b2c:	88 23       	and	r24, r24
    1b2e:	09 f4       	brne	.+2      	; 0x1b32 <vfprintf+0x3a>
    1b30:	ba c1       	rjmp	.+884    	; 0x1ea6 <vfprintf+0x3ae>
    1b32:	85 32       	cpi	r24, 0x25	; 37
    1b34:	39 f4       	brne	.+14     	; 0x1b44 <vfprintf+0x4c>
    1b36:	93 fd       	sbrc	r25, 3
    1b38:	85 91       	lpm	r24, Z+
    1b3a:	93 ff       	sbrs	r25, 3
    1b3c:	81 91       	ld	r24, Z+
    1b3e:	7f 01       	movw	r14, r30
    1b40:	85 32       	cpi	r24, 0x25	; 37
    1b42:	29 f4       	brne	.+10     	; 0x1b4e <vfprintf+0x56>
    1b44:	b6 01       	movw	r22, r12
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1b4c:	e7 cf       	rjmp	.-50     	; 0x1b1c <vfprintf+0x24>
    1b4e:	91 2c       	mov	r9, r1
    1b50:	21 2c       	mov	r2, r1
    1b52:	31 2c       	mov	r3, r1
    1b54:	ff e1       	ldi	r31, 0x1F	; 31
    1b56:	f3 15       	cp	r31, r3
    1b58:	d8 f0       	brcs	.+54     	; 0x1b90 <vfprintf+0x98>
    1b5a:	8b 32       	cpi	r24, 0x2B	; 43
    1b5c:	79 f0       	breq	.+30     	; 0x1b7c <vfprintf+0x84>
    1b5e:	38 f4       	brcc	.+14     	; 0x1b6e <vfprintf+0x76>
    1b60:	80 32       	cpi	r24, 0x20	; 32
    1b62:	79 f0       	breq	.+30     	; 0x1b82 <vfprintf+0x8a>
    1b64:	83 32       	cpi	r24, 0x23	; 35
    1b66:	a1 f4       	brne	.+40     	; 0x1b90 <vfprintf+0x98>
    1b68:	23 2d       	mov	r18, r3
    1b6a:	20 61       	ori	r18, 0x10	; 16
    1b6c:	1d c0       	rjmp	.+58     	; 0x1ba8 <vfprintf+0xb0>
    1b6e:	8d 32       	cpi	r24, 0x2D	; 45
    1b70:	61 f0       	breq	.+24     	; 0x1b8a <vfprintf+0x92>
    1b72:	80 33       	cpi	r24, 0x30	; 48
    1b74:	69 f4       	brne	.+26     	; 0x1b90 <vfprintf+0x98>
    1b76:	23 2d       	mov	r18, r3
    1b78:	21 60       	ori	r18, 0x01	; 1
    1b7a:	16 c0       	rjmp	.+44     	; 0x1ba8 <vfprintf+0xb0>
    1b7c:	83 2d       	mov	r24, r3
    1b7e:	82 60       	ori	r24, 0x02	; 2
    1b80:	38 2e       	mov	r3, r24
    1b82:	e3 2d       	mov	r30, r3
    1b84:	e4 60       	ori	r30, 0x04	; 4
    1b86:	3e 2e       	mov	r3, r30
    1b88:	2a c0       	rjmp	.+84     	; 0x1bde <vfprintf+0xe6>
    1b8a:	f3 2d       	mov	r31, r3
    1b8c:	f8 60       	ori	r31, 0x08	; 8
    1b8e:	1d c0       	rjmp	.+58     	; 0x1bca <vfprintf+0xd2>
    1b90:	37 fc       	sbrc	r3, 7
    1b92:	2d c0       	rjmp	.+90     	; 0x1bee <vfprintf+0xf6>
    1b94:	20 ed       	ldi	r18, 0xD0	; 208
    1b96:	28 0f       	add	r18, r24
    1b98:	2a 30       	cpi	r18, 0x0A	; 10
    1b9a:	40 f0       	brcs	.+16     	; 0x1bac <vfprintf+0xb4>
    1b9c:	8e 32       	cpi	r24, 0x2E	; 46
    1b9e:	b9 f4       	brne	.+46     	; 0x1bce <vfprintf+0xd6>
    1ba0:	36 fc       	sbrc	r3, 6
    1ba2:	81 c1       	rjmp	.+770    	; 0x1ea6 <vfprintf+0x3ae>
    1ba4:	23 2d       	mov	r18, r3
    1ba6:	20 64       	ori	r18, 0x40	; 64
    1ba8:	32 2e       	mov	r3, r18
    1baa:	19 c0       	rjmp	.+50     	; 0x1bde <vfprintf+0xe6>
    1bac:	36 fe       	sbrs	r3, 6
    1bae:	06 c0       	rjmp	.+12     	; 0x1bbc <vfprintf+0xc4>
    1bb0:	8a e0       	ldi	r24, 0x0A	; 10
    1bb2:	98 9e       	mul	r9, r24
    1bb4:	20 0d       	add	r18, r0
    1bb6:	11 24       	eor	r1, r1
    1bb8:	92 2e       	mov	r9, r18
    1bba:	11 c0       	rjmp	.+34     	; 0x1bde <vfprintf+0xe6>
    1bbc:	ea e0       	ldi	r30, 0x0A	; 10
    1bbe:	2e 9e       	mul	r2, r30
    1bc0:	20 0d       	add	r18, r0
    1bc2:	11 24       	eor	r1, r1
    1bc4:	22 2e       	mov	r2, r18
    1bc6:	f3 2d       	mov	r31, r3
    1bc8:	f0 62       	ori	r31, 0x20	; 32
    1bca:	3f 2e       	mov	r3, r31
    1bcc:	08 c0       	rjmp	.+16     	; 0x1bde <vfprintf+0xe6>
    1bce:	8c 36       	cpi	r24, 0x6C	; 108
    1bd0:	21 f4       	brne	.+8      	; 0x1bda <vfprintf+0xe2>
    1bd2:	83 2d       	mov	r24, r3
    1bd4:	80 68       	ori	r24, 0x80	; 128
    1bd6:	38 2e       	mov	r3, r24
    1bd8:	02 c0       	rjmp	.+4      	; 0x1bde <vfprintf+0xe6>
    1bda:	88 36       	cpi	r24, 0x68	; 104
    1bdc:	41 f4       	brne	.+16     	; 0x1bee <vfprintf+0xf6>
    1bde:	f7 01       	movw	r30, r14
    1be0:	93 fd       	sbrc	r25, 3
    1be2:	85 91       	lpm	r24, Z+
    1be4:	93 ff       	sbrs	r25, 3
    1be6:	81 91       	ld	r24, Z+
    1be8:	7f 01       	movw	r14, r30
    1bea:	81 11       	cpse	r24, r1
    1bec:	b3 cf       	rjmp	.-154    	; 0x1b54 <vfprintf+0x5c>
    1bee:	98 2f       	mov	r25, r24
    1bf0:	9f 7d       	andi	r25, 0xDF	; 223
    1bf2:	95 54       	subi	r25, 0x45	; 69
    1bf4:	93 30       	cpi	r25, 0x03	; 3
    1bf6:	28 f4       	brcc	.+10     	; 0x1c02 <vfprintf+0x10a>
    1bf8:	0c 5f       	subi	r16, 0xFC	; 252
    1bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    1bfc:	9f e3       	ldi	r25, 0x3F	; 63
    1bfe:	99 83       	std	Y+1, r25	; 0x01
    1c00:	0d c0       	rjmp	.+26     	; 0x1c1c <vfprintf+0x124>
    1c02:	83 36       	cpi	r24, 0x63	; 99
    1c04:	31 f0       	breq	.+12     	; 0x1c12 <vfprintf+0x11a>
    1c06:	83 37       	cpi	r24, 0x73	; 115
    1c08:	71 f0       	breq	.+28     	; 0x1c26 <vfprintf+0x12e>
    1c0a:	83 35       	cpi	r24, 0x53	; 83
    1c0c:	09 f0       	breq	.+2      	; 0x1c10 <vfprintf+0x118>
    1c0e:	59 c0       	rjmp	.+178    	; 0x1cc2 <vfprintf+0x1ca>
    1c10:	21 c0       	rjmp	.+66     	; 0x1c54 <vfprintf+0x15c>
    1c12:	f8 01       	movw	r30, r16
    1c14:	80 81       	ld	r24, Z
    1c16:	89 83       	std	Y+1, r24	; 0x01
    1c18:	0e 5f       	subi	r16, 0xFE	; 254
    1c1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c1c:	88 24       	eor	r8, r8
    1c1e:	83 94       	inc	r8
    1c20:	91 2c       	mov	r9, r1
    1c22:	53 01       	movw	r10, r6
    1c24:	13 c0       	rjmp	.+38     	; 0x1c4c <vfprintf+0x154>
    1c26:	28 01       	movw	r4, r16
    1c28:	f2 e0       	ldi	r31, 0x02	; 2
    1c2a:	4f 0e       	add	r4, r31
    1c2c:	51 1c       	adc	r5, r1
    1c2e:	f8 01       	movw	r30, r16
    1c30:	a0 80       	ld	r10, Z
    1c32:	b1 80       	ldd	r11, Z+1	; 0x01
    1c34:	36 fe       	sbrs	r3, 6
    1c36:	03 c0       	rjmp	.+6      	; 0x1c3e <vfprintf+0x146>
    1c38:	69 2d       	mov	r22, r9
    1c3a:	70 e0       	ldi	r23, 0x00	; 0
    1c3c:	02 c0       	rjmp	.+4      	; 0x1c42 <vfprintf+0x14a>
    1c3e:	6f ef       	ldi	r22, 0xFF	; 255
    1c40:	7f ef       	ldi	r23, 0xFF	; 255
    1c42:	c5 01       	movw	r24, r10
    1c44:	0e 94 ac 10 	call	0x2158	; 0x2158 <strnlen>
    1c48:	4c 01       	movw	r8, r24
    1c4a:	82 01       	movw	r16, r4
    1c4c:	f3 2d       	mov	r31, r3
    1c4e:	ff 77       	andi	r31, 0x7F	; 127
    1c50:	3f 2e       	mov	r3, r31
    1c52:	16 c0       	rjmp	.+44     	; 0x1c80 <vfprintf+0x188>
    1c54:	28 01       	movw	r4, r16
    1c56:	22 e0       	ldi	r18, 0x02	; 2
    1c58:	42 0e       	add	r4, r18
    1c5a:	51 1c       	adc	r5, r1
    1c5c:	f8 01       	movw	r30, r16
    1c5e:	a0 80       	ld	r10, Z
    1c60:	b1 80       	ldd	r11, Z+1	; 0x01
    1c62:	36 fe       	sbrs	r3, 6
    1c64:	03 c0       	rjmp	.+6      	; 0x1c6c <vfprintf+0x174>
    1c66:	69 2d       	mov	r22, r9
    1c68:	70 e0       	ldi	r23, 0x00	; 0
    1c6a:	02 c0       	rjmp	.+4      	; 0x1c70 <vfprintf+0x178>
    1c6c:	6f ef       	ldi	r22, 0xFF	; 255
    1c6e:	7f ef       	ldi	r23, 0xFF	; 255
    1c70:	c5 01       	movw	r24, r10
    1c72:	0e 94 9a 10 	call	0x2134	; 0x2134 <strnlen_P>
    1c76:	4c 01       	movw	r8, r24
    1c78:	f3 2d       	mov	r31, r3
    1c7a:	f0 68       	ori	r31, 0x80	; 128
    1c7c:	3f 2e       	mov	r3, r31
    1c7e:	82 01       	movw	r16, r4
    1c80:	33 fc       	sbrc	r3, 3
    1c82:	1b c0       	rjmp	.+54     	; 0x1cba <vfprintf+0x1c2>
    1c84:	82 2d       	mov	r24, r2
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	88 16       	cp	r8, r24
    1c8a:	99 06       	cpc	r9, r25
    1c8c:	b0 f4       	brcc	.+44     	; 0x1cba <vfprintf+0x1c2>
    1c8e:	b6 01       	movw	r22, r12
    1c90:	80 e2       	ldi	r24, 0x20	; 32
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1c98:	2a 94       	dec	r2
    1c9a:	f4 cf       	rjmp	.-24     	; 0x1c84 <vfprintf+0x18c>
    1c9c:	f5 01       	movw	r30, r10
    1c9e:	37 fc       	sbrc	r3, 7
    1ca0:	85 91       	lpm	r24, Z+
    1ca2:	37 fe       	sbrs	r3, 7
    1ca4:	81 91       	ld	r24, Z+
    1ca6:	5f 01       	movw	r10, r30
    1ca8:	b6 01       	movw	r22, r12
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1cb0:	21 10       	cpse	r2, r1
    1cb2:	2a 94       	dec	r2
    1cb4:	21 e0       	ldi	r18, 0x01	; 1
    1cb6:	82 1a       	sub	r8, r18
    1cb8:	91 08       	sbc	r9, r1
    1cba:	81 14       	cp	r8, r1
    1cbc:	91 04       	cpc	r9, r1
    1cbe:	71 f7       	brne	.-36     	; 0x1c9c <vfprintf+0x1a4>
    1cc0:	e8 c0       	rjmp	.+464    	; 0x1e92 <vfprintf+0x39a>
    1cc2:	84 36       	cpi	r24, 0x64	; 100
    1cc4:	11 f0       	breq	.+4      	; 0x1cca <vfprintf+0x1d2>
    1cc6:	89 36       	cpi	r24, 0x69	; 105
    1cc8:	41 f5       	brne	.+80     	; 0x1d1a <vfprintf+0x222>
    1cca:	f8 01       	movw	r30, r16
    1ccc:	37 fe       	sbrs	r3, 7
    1cce:	07 c0       	rjmp	.+14     	; 0x1cde <vfprintf+0x1e6>
    1cd0:	60 81       	ld	r22, Z
    1cd2:	71 81       	ldd	r23, Z+1	; 0x01
    1cd4:	82 81       	ldd	r24, Z+2	; 0x02
    1cd6:	93 81       	ldd	r25, Z+3	; 0x03
    1cd8:	0c 5f       	subi	r16, 0xFC	; 252
    1cda:	1f 4f       	sbci	r17, 0xFF	; 255
    1cdc:	08 c0       	rjmp	.+16     	; 0x1cee <vfprintf+0x1f6>
    1cde:	60 81       	ld	r22, Z
    1ce0:	71 81       	ldd	r23, Z+1	; 0x01
    1ce2:	07 2e       	mov	r0, r23
    1ce4:	00 0c       	add	r0, r0
    1ce6:	88 0b       	sbc	r24, r24
    1ce8:	99 0b       	sbc	r25, r25
    1cea:	0e 5f       	subi	r16, 0xFE	; 254
    1cec:	1f 4f       	sbci	r17, 0xFF	; 255
    1cee:	f3 2d       	mov	r31, r3
    1cf0:	ff 76       	andi	r31, 0x6F	; 111
    1cf2:	3f 2e       	mov	r3, r31
    1cf4:	97 ff       	sbrs	r25, 7
    1cf6:	09 c0       	rjmp	.+18     	; 0x1d0a <vfprintf+0x212>
    1cf8:	90 95       	com	r25
    1cfa:	80 95       	com	r24
    1cfc:	70 95       	com	r23
    1cfe:	61 95       	neg	r22
    1d00:	7f 4f       	sbci	r23, 0xFF	; 255
    1d02:	8f 4f       	sbci	r24, 0xFF	; 255
    1d04:	9f 4f       	sbci	r25, 0xFF	; 255
    1d06:	f0 68       	ori	r31, 0x80	; 128
    1d08:	3f 2e       	mov	r3, r31
    1d0a:	2a e0       	ldi	r18, 0x0A	; 10
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	a3 01       	movw	r20, r6
    1d10:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__ultoa_invert>
    1d14:	88 2e       	mov	r8, r24
    1d16:	86 18       	sub	r8, r6
    1d18:	45 c0       	rjmp	.+138    	; 0x1da4 <vfprintf+0x2ac>
    1d1a:	85 37       	cpi	r24, 0x75	; 117
    1d1c:	31 f4       	brne	.+12     	; 0x1d2a <vfprintf+0x232>
    1d1e:	23 2d       	mov	r18, r3
    1d20:	2f 7e       	andi	r18, 0xEF	; 239
    1d22:	b2 2e       	mov	r11, r18
    1d24:	2a e0       	ldi	r18, 0x0A	; 10
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	25 c0       	rjmp	.+74     	; 0x1d74 <vfprintf+0x27c>
    1d2a:	93 2d       	mov	r25, r3
    1d2c:	99 7f       	andi	r25, 0xF9	; 249
    1d2e:	b9 2e       	mov	r11, r25
    1d30:	8f 36       	cpi	r24, 0x6F	; 111
    1d32:	c1 f0       	breq	.+48     	; 0x1d64 <vfprintf+0x26c>
    1d34:	18 f4       	brcc	.+6      	; 0x1d3c <vfprintf+0x244>
    1d36:	88 35       	cpi	r24, 0x58	; 88
    1d38:	79 f0       	breq	.+30     	; 0x1d58 <vfprintf+0x260>
    1d3a:	b5 c0       	rjmp	.+362    	; 0x1ea6 <vfprintf+0x3ae>
    1d3c:	80 37       	cpi	r24, 0x70	; 112
    1d3e:	19 f0       	breq	.+6      	; 0x1d46 <vfprintf+0x24e>
    1d40:	88 37       	cpi	r24, 0x78	; 120
    1d42:	21 f0       	breq	.+8      	; 0x1d4c <vfprintf+0x254>
    1d44:	b0 c0       	rjmp	.+352    	; 0x1ea6 <vfprintf+0x3ae>
    1d46:	e9 2f       	mov	r30, r25
    1d48:	e0 61       	ori	r30, 0x10	; 16
    1d4a:	be 2e       	mov	r11, r30
    1d4c:	b4 fe       	sbrs	r11, 4
    1d4e:	0d c0       	rjmp	.+26     	; 0x1d6a <vfprintf+0x272>
    1d50:	fb 2d       	mov	r31, r11
    1d52:	f4 60       	ori	r31, 0x04	; 4
    1d54:	bf 2e       	mov	r11, r31
    1d56:	09 c0       	rjmp	.+18     	; 0x1d6a <vfprintf+0x272>
    1d58:	34 fe       	sbrs	r3, 4
    1d5a:	0a c0       	rjmp	.+20     	; 0x1d70 <vfprintf+0x278>
    1d5c:	29 2f       	mov	r18, r25
    1d5e:	26 60       	ori	r18, 0x06	; 6
    1d60:	b2 2e       	mov	r11, r18
    1d62:	06 c0       	rjmp	.+12     	; 0x1d70 <vfprintf+0x278>
    1d64:	28 e0       	ldi	r18, 0x08	; 8
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	05 c0       	rjmp	.+10     	; 0x1d74 <vfprintf+0x27c>
    1d6a:	20 e1       	ldi	r18, 0x10	; 16
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	02 c0       	rjmp	.+4      	; 0x1d74 <vfprintf+0x27c>
    1d70:	20 e1       	ldi	r18, 0x10	; 16
    1d72:	32 e0       	ldi	r19, 0x02	; 2
    1d74:	f8 01       	movw	r30, r16
    1d76:	b7 fe       	sbrs	r11, 7
    1d78:	07 c0       	rjmp	.+14     	; 0x1d88 <vfprintf+0x290>
    1d7a:	60 81       	ld	r22, Z
    1d7c:	71 81       	ldd	r23, Z+1	; 0x01
    1d7e:	82 81       	ldd	r24, Z+2	; 0x02
    1d80:	93 81       	ldd	r25, Z+3	; 0x03
    1d82:	0c 5f       	subi	r16, 0xFC	; 252
    1d84:	1f 4f       	sbci	r17, 0xFF	; 255
    1d86:	06 c0       	rjmp	.+12     	; 0x1d94 <vfprintf+0x29c>
    1d88:	60 81       	ld	r22, Z
    1d8a:	71 81       	ldd	r23, Z+1	; 0x01
    1d8c:	80 e0       	ldi	r24, 0x00	; 0
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	0e 5f       	subi	r16, 0xFE	; 254
    1d92:	1f 4f       	sbci	r17, 0xFF	; 255
    1d94:	a3 01       	movw	r20, r6
    1d96:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__ultoa_invert>
    1d9a:	88 2e       	mov	r8, r24
    1d9c:	86 18       	sub	r8, r6
    1d9e:	fb 2d       	mov	r31, r11
    1da0:	ff 77       	andi	r31, 0x7F	; 127
    1da2:	3f 2e       	mov	r3, r31
    1da4:	36 fe       	sbrs	r3, 6
    1da6:	0d c0       	rjmp	.+26     	; 0x1dc2 <vfprintf+0x2ca>
    1da8:	23 2d       	mov	r18, r3
    1daa:	2e 7f       	andi	r18, 0xFE	; 254
    1dac:	a2 2e       	mov	r10, r18
    1dae:	89 14       	cp	r8, r9
    1db0:	58 f4       	brcc	.+22     	; 0x1dc8 <vfprintf+0x2d0>
    1db2:	34 fe       	sbrs	r3, 4
    1db4:	0b c0       	rjmp	.+22     	; 0x1dcc <vfprintf+0x2d4>
    1db6:	32 fc       	sbrc	r3, 2
    1db8:	09 c0       	rjmp	.+18     	; 0x1dcc <vfprintf+0x2d4>
    1dba:	83 2d       	mov	r24, r3
    1dbc:	8e 7e       	andi	r24, 0xEE	; 238
    1dbe:	a8 2e       	mov	r10, r24
    1dc0:	05 c0       	rjmp	.+10     	; 0x1dcc <vfprintf+0x2d4>
    1dc2:	b8 2c       	mov	r11, r8
    1dc4:	a3 2c       	mov	r10, r3
    1dc6:	03 c0       	rjmp	.+6      	; 0x1dce <vfprintf+0x2d6>
    1dc8:	b8 2c       	mov	r11, r8
    1dca:	01 c0       	rjmp	.+2      	; 0x1dce <vfprintf+0x2d6>
    1dcc:	b9 2c       	mov	r11, r9
    1dce:	a4 fe       	sbrs	r10, 4
    1dd0:	0f c0       	rjmp	.+30     	; 0x1df0 <vfprintf+0x2f8>
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	e8 0d       	add	r30, r8
    1dd6:	f1 1d       	adc	r31, r1
    1dd8:	80 81       	ld	r24, Z
    1dda:	80 33       	cpi	r24, 0x30	; 48
    1ddc:	21 f4       	brne	.+8      	; 0x1de6 <vfprintf+0x2ee>
    1dde:	9a 2d       	mov	r25, r10
    1de0:	99 7e       	andi	r25, 0xE9	; 233
    1de2:	a9 2e       	mov	r10, r25
    1de4:	09 c0       	rjmp	.+18     	; 0x1df8 <vfprintf+0x300>
    1de6:	a2 fe       	sbrs	r10, 2
    1de8:	06 c0       	rjmp	.+12     	; 0x1df6 <vfprintf+0x2fe>
    1dea:	b3 94       	inc	r11
    1dec:	b3 94       	inc	r11
    1dee:	04 c0       	rjmp	.+8      	; 0x1df8 <vfprintf+0x300>
    1df0:	8a 2d       	mov	r24, r10
    1df2:	86 78       	andi	r24, 0x86	; 134
    1df4:	09 f0       	breq	.+2      	; 0x1df8 <vfprintf+0x300>
    1df6:	b3 94       	inc	r11
    1df8:	a3 fc       	sbrc	r10, 3
    1dfa:	11 c0       	rjmp	.+34     	; 0x1e1e <vfprintf+0x326>
    1dfc:	a0 fe       	sbrs	r10, 0
    1dfe:	06 c0       	rjmp	.+12     	; 0x1e0c <vfprintf+0x314>
    1e00:	b2 14       	cp	r11, r2
    1e02:	88 f4       	brcc	.+34     	; 0x1e26 <vfprintf+0x32e>
    1e04:	28 0c       	add	r2, r8
    1e06:	92 2c       	mov	r9, r2
    1e08:	9b 18       	sub	r9, r11
    1e0a:	0e c0       	rjmp	.+28     	; 0x1e28 <vfprintf+0x330>
    1e0c:	b2 14       	cp	r11, r2
    1e0e:	60 f4       	brcc	.+24     	; 0x1e28 <vfprintf+0x330>
    1e10:	b6 01       	movw	r22, r12
    1e12:	80 e2       	ldi	r24, 0x20	; 32
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1e1a:	b3 94       	inc	r11
    1e1c:	f7 cf       	rjmp	.-18     	; 0x1e0c <vfprintf+0x314>
    1e1e:	b2 14       	cp	r11, r2
    1e20:	18 f4       	brcc	.+6      	; 0x1e28 <vfprintf+0x330>
    1e22:	2b 18       	sub	r2, r11
    1e24:	02 c0       	rjmp	.+4      	; 0x1e2a <vfprintf+0x332>
    1e26:	98 2c       	mov	r9, r8
    1e28:	21 2c       	mov	r2, r1
    1e2a:	a4 fe       	sbrs	r10, 4
    1e2c:	10 c0       	rjmp	.+32     	; 0x1e4e <vfprintf+0x356>
    1e2e:	b6 01       	movw	r22, r12
    1e30:	80 e3       	ldi	r24, 0x30	; 48
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1e38:	a2 fe       	sbrs	r10, 2
    1e3a:	17 c0       	rjmp	.+46     	; 0x1e6a <vfprintf+0x372>
    1e3c:	a1 fc       	sbrc	r10, 1
    1e3e:	03 c0       	rjmp	.+6      	; 0x1e46 <vfprintf+0x34e>
    1e40:	88 e7       	ldi	r24, 0x78	; 120
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <vfprintf+0x352>
    1e46:	88 e5       	ldi	r24, 0x58	; 88
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	b6 01       	movw	r22, r12
    1e4c:	0c c0       	rjmp	.+24     	; 0x1e66 <vfprintf+0x36e>
    1e4e:	8a 2d       	mov	r24, r10
    1e50:	86 78       	andi	r24, 0x86	; 134
    1e52:	59 f0       	breq	.+22     	; 0x1e6a <vfprintf+0x372>
    1e54:	a1 fe       	sbrs	r10, 1
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <vfprintf+0x364>
    1e58:	8b e2       	ldi	r24, 0x2B	; 43
    1e5a:	01 c0       	rjmp	.+2      	; 0x1e5e <vfprintf+0x366>
    1e5c:	80 e2       	ldi	r24, 0x20	; 32
    1e5e:	a7 fc       	sbrc	r10, 7
    1e60:	8d e2       	ldi	r24, 0x2D	; 45
    1e62:	b6 01       	movw	r22, r12
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1e6a:	89 14       	cp	r8, r9
    1e6c:	38 f4       	brcc	.+14     	; 0x1e7c <vfprintf+0x384>
    1e6e:	b6 01       	movw	r22, r12
    1e70:	80 e3       	ldi	r24, 0x30	; 48
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1e78:	9a 94       	dec	r9
    1e7a:	f7 cf       	rjmp	.-18     	; 0x1e6a <vfprintf+0x372>
    1e7c:	8a 94       	dec	r8
    1e7e:	f3 01       	movw	r30, r6
    1e80:	e8 0d       	add	r30, r8
    1e82:	f1 1d       	adc	r31, r1
    1e84:	80 81       	ld	r24, Z
    1e86:	b6 01       	movw	r22, r12
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1e8e:	81 10       	cpse	r8, r1
    1e90:	f5 cf       	rjmp	.-22     	; 0x1e7c <vfprintf+0x384>
    1e92:	22 20       	and	r2, r2
    1e94:	09 f4       	brne	.+2      	; 0x1e98 <vfprintf+0x3a0>
    1e96:	42 ce       	rjmp	.-892    	; 0x1b1c <vfprintf+0x24>
    1e98:	b6 01       	movw	r22, r12
    1e9a:	80 e2       	ldi	r24, 0x20	; 32
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	0e 94 b7 10 	call	0x216e	; 0x216e <fputc>
    1ea2:	2a 94       	dec	r2
    1ea4:	f6 cf       	rjmp	.-20     	; 0x1e92 <vfprintf+0x39a>
    1ea6:	f6 01       	movw	r30, r12
    1ea8:	86 81       	ldd	r24, Z+6	; 0x06
    1eaa:	97 81       	ldd	r25, Z+7	; 0x07
    1eac:	02 c0       	rjmp	.+4      	; 0x1eb2 <vfprintf+0x3ba>
    1eae:	8f ef       	ldi	r24, 0xFF	; 255
    1eb0:	9f ef       	ldi	r25, 0xFF	; 255
    1eb2:	2b 96       	adiw	r28, 0x0b	; 11
    1eb4:	e2 e1       	ldi	r30, 0x12	; 18
    1eb6:	0c 94 9f 11 	jmp	0x233e	; 0x233e <__epilogue_restores__>

00001eba <calloc>:
    1eba:	0f 93       	push	r16
    1ebc:	1f 93       	push	r17
    1ebe:	cf 93       	push	r28
    1ec0:	df 93       	push	r29
    1ec2:	86 9f       	mul	r24, r22
    1ec4:	80 01       	movw	r16, r0
    1ec6:	87 9f       	mul	r24, r23
    1ec8:	10 0d       	add	r17, r0
    1eca:	96 9f       	mul	r25, r22
    1ecc:	10 0d       	add	r17, r0
    1ece:	11 24       	eor	r1, r1
    1ed0:	c8 01       	movw	r24, r16
    1ed2:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <malloc>
    1ed6:	ec 01       	movw	r28, r24
    1ed8:	00 97       	sbiw	r24, 0x00	; 0
    1eda:	29 f0       	breq	.+10     	; 0x1ee6 <calloc+0x2c>
    1edc:	a8 01       	movw	r20, r16
    1ede:	60 e0       	ldi	r22, 0x00	; 0
    1ee0:	70 e0       	ldi	r23, 0x00	; 0
    1ee2:	0e 94 a5 10 	call	0x214a	; 0x214a <memset>
    1ee6:	ce 01       	movw	r24, r28
    1ee8:	df 91       	pop	r29
    1eea:	cf 91       	pop	r28
    1eec:	1f 91       	pop	r17
    1eee:	0f 91       	pop	r16
    1ef0:	08 95       	ret

00001ef2 <malloc>:
    1ef2:	0f 93       	push	r16
    1ef4:	1f 93       	push	r17
    1ef6:	cf 93       	push	r28
    1ef8:	df 93       	push	r29
    1efa:	82 30       	cpi	r24, 0x02	; 2
    1efc:	91 05       	cpc	r25, r1
    1efe:	10 f4       	brcc	.+4      	; 0x1f04 <malloc+0x12>
    1f00:	82 e0       	ldi	r24, 0x02	; 2
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	e0 91 59 02 	lds	r30, 0x0259	; 0x800259 <__flp>
    1f08:	f0 91 5a 02 	lds	r31, 0x025A	; 0x80025a <__flp+0x1>
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	a0 e0       	ldi	r26, 0x00	; 0
    1f12:	b0 e0       	ldi	r27, 0x00	; 0
    1f14:	30 97       	sbiw	r30, 0x00	; 0
    1f16:	19 f1       	breq	.+70     	; 0x1f5e <malloc+0x6c>
    1f18:	40 81       	ld	r20, Z
    1f1a:	51 81       	ldd	r21, Z+1	; 0x01
    1f1c:	02 81       	ldd	r16, Z+2	; 0x02
    1f1e:	13 81       	ldd	r17, Z+3	; 0x03
    1f20:	48 17       	cp	r20, r24
    1f22:	59 07       	cpc	r21, r25
    1f24:	c8 f0       	brcs	.+50     	; 0x1f58 <malloc+0x66>
    1f26:	84 17       	cp	r24, r20
    1f28:	95 07       	cpc	r25, r21
    1f2a:	69 f4       	brne	.+26     	; 0x1f46 <malloc+0x54>
    1f2c:	10 97       	sbiw	r26, 0x00	; 0
    1f2e:	31 f0       	breq	.+12     	; 0x1f3c <malloc+0x4a>
    1f30:	12 96       	adiw	r26, 0x02	; 2
    1f32:	0c 93       	st	X, r16
    1f34:	12 97       	sbiw	r26, 0x02	; 2
    1f36:	13 96       	adiw	r26, 0x03	; 3
    1f38:	1c 93       	st	X, r17
    1f3a:	27 c0       	rjmp	.+78     	; 0x1f8a <malloc+0x98>
    1f3c:	00 93 59 02 	sts	0x0259, r16	; 0x800259 <__flp>
    1f40:	10 93 5a 02 	sts	0x025A, r17	; 0x80025a <__flp+0x1>
    1f44:	22 c0       	rjmp	.+68     	; 0x1f8a <malloc+0x98>
    1f46:	21 15       	cp	r18, r1
    1f48:	31 05       	cpc	r19, r1
    1f4a:	19 f0       	breq	.+6      	; 0x1f52 <malloc+0x60>
    1f4c:	42 17       	cp	r20, r18
    1f4e:	53 07       	cpc	r21, r19
    1f50:	18 f4       	brcc	.+6      	; 0x1f58 <malloc+0x66>
    1f52:	9a 01       	movw	r18, r20
    1f54:	bd 01       	movw	r22, r26
    1f56:	ef 01       	movw	r28, r30
    1f58:	df 01       	movw	r26, r30
    1f5a:	f8 01       	movw	r30, r16
    1f5c:	db cf       	rjmp	.-74     	; 0x1f14 <malloc+0x22>
    1f5e:	21 15       	cp	r18, r1
    1f60:	31 05       	cpc	r19, r1
    1f62:	f9 f0       	breq	.+62     	; 0x1fa2 <malloc+0xb0>
    1f64:	28 1b       	sub	r18, r24
    1f66:	39 0b       	sbc	r19, r25
    1f68:	24 30       	cpi	r18, 0x04	; 4
    1f6a:	31 05       	cpc	r19, r1
    1f6c:	80 f4       	brcc	.+32     	; 0x1f8e <malloc+0x9c>
    1f6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f70:	9b 81       	ldd	r25, Y+3	; 0x03
    1f72:	61 15       	cp	r22, r1
    1f74:	71 05       	cpc	r23, r1
    1f76:	21 f0       	breq	.+8      	; 0x1f80 <malloc+0x8e>
    1f78:	fb 01       	movw	r30, r22
    1f7a:	93 83       	std	Z+3, r25	; 0x03
    1f7c:	82 83       	std	Z+2, r24	; 0x02
    1f7e:	04 c0       	rjmp	.+8      	; 0x1f88 <malloc+0x96>
    1f80:	90 93 5a 02 	sts	0x025A, r25	; 0x80025a <__flp+0x1>
    1f84:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <__flp>
    1f88:	fe 01       	movw	r30, r28
    1f8a:	32 96       	adiw	r30, 0x02	; 2
    1f8c:	44 c0       	rjmp	.+136    	; 0x2016 <malloc+0x124>
    1f8e:	fe 01       	movw	r30, r28
    1f90:	e2 0f       	add	r30, r18
    1f92:	f3 1f       	adc	r31, r19
    1f94:	81 93       	st	Z+, r24
    1f96:	91 93       	st	Z+, r25
    1f98:	22 50       	subi	r18, 0x02	; 2
    1f9a:	31 09       	sbc	r19, r1
    1f9c:	39 83       	std	Y+1, r19	; 0x01
    1f9e:	28 83       	st	Y, r18
    1fa0:	3a c0       	rjmp	.+116    	; 0x2016 <malloc+0x124>
    1fa2:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <__brkval>
    1fa6:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <__brkval+0x1>
    1faa:	23 2b       	or	r18, r19
    1fac:	41 f4       	brne	.+16     	; 0x1fbe <malloc+0xcc>
    1fae:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1fb2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1fb6:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <__brkval+0x1>
    1fba:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <__brkval>
    1fbe:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1fc2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1fc6:	21 15       	cp	r18, r1
    1fc8:	31 05       	cpc	r19, r1
    1fca:	41 f4       	brne	.+16     	; 0x1fdc <malloc+0xea>
    1fcc:	2d b7       	in	r18, 0x3d	; 61
    1fce:	3e b7       	in	r19, 0x3e	; 62
    1fd0:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1fd4:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1fd8:	24 1b       	sub	r18, r20
    1fda:	35 0b       	sbc	r19, r21
    1fdc:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <__brkval>
    1fe0:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <__brkval+0x1>
    1fe4:	e2 17       	cp	r30, r18
    1fe6:	f3 07       	cpc	r31, r19
    1fe8:	a0 f4       	brcc	.+40     	; 0x2012 <malloc+0x120>
    1fea:	2e 1b       	sub	r18, r30
    1fec:	3f 0b       	sbc	r19, r31
    1fee:	28 17       	cp	r18, r24
    1ff0:	39 07       	cpc	r19, r25
    1ff2:	78 f0       	brcs	.+30     	; 0x2012 <malloc+0x120>
    1ff4:	ac 01       	movw	r20, r24
    1ff6:	4e 5f       	subi	r20, 0xFE	; 254
    1ff8:	5f 4f       	sbci	r21, 0xFF	; 255
    1ffa:	24 17       	cp	r18, r20
    1ffc:	35 07       	cpc	r19, r21
    1ffe:	48 f0       	brcs	.+18     	; 0x2012 <malloc+0x120>
    2000:	4e 0f       	add	r20, r30
    2002:	5f 1f       	adc	r21, r31
    2004:	50 93 58 02 	sts	0x0258, r21	; 0x800258 <__brkval+0x1>
    2008:	40 93 57 02 	sts	0x0257, r20	; 0x800257 <__brkval>
    200c:	81 93       	st	Z+, r24
    200e:	91 93       	st	Z+, r25
    2010:	02 c0       	rjmp	.+4      	; 0x2016 <malloc+0x124>
    2012:	e0 e0       	ldi	r30, 0x00	; 0
    2014:	f0 e0       	ldi	r31, 0x00	; 0
    2016:	cf 01       	movw	r24, r30
    2018:	df 91       	pop	r29
    201a:	cf 91       	pop	r28
    201c:	1f 91       	pop	r17
    201e:	0f 91       	pop	r16
    2020:	08 95       	ret

00002022 <free>:
    2022:	cf 93       	push	r28
    2024:	df 93       	push	r29
    2026:	00 97       	sbiw	r24, 0x00	; 0
    2028:	09 f4       	brne	.+2      	; 0x202c <free+0xa>
    202a:	81 c0       	rjmp	.+258    	; 0x212e <free+0x10c>
    202c:	fc 01       	movw	r30, r24
    202e:	32 97       	sbiw	r30, 0x02	; 2
    2030:	13 82       	std	Z+3, r1	; 0x03
    2032:	12 82       	std	Z+2, r1	; 0x02
    2034:	a0 91 59 02 	lds	r26, 0x0259	; 0x800259 <__flp>
    2038:	b0 91 5a 02 	lds	r27, 0x025A	; 0x80025a <__flp+0x1>
    203c:	10 97       	sbiw	r26, 0x00	; 0
    203e:	81 f4       	brne	.+32     	; 0x2060 <free+0x3e>
    2040:	20 81       	ld	r18, Z
    2042:	31 81       	ldd	r19, Z+1	; 0x01
    2044:	82 0f       	add	r24, r18
    2046:	93 1f       	adc	r25, r19
    2048:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <__brkval>
    204c:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <__brkval+0x1>
    2050:	28 17       	cp	r18, r24
    2052:	39 07       	cpc	r19, r25
    2054:	51 f5       	brne	.+84     	; 0x20aa <free+0x88>
    2056:	f0 93 58 02 	sts	0x0258, r31	; 0x800258 <__brkval+0x1>
    205a:	e0 93 57 02 	sts	0x0257, r30	; 0x800257 <__brkval>
    205e:	67 c0       	rjmp	.+206    	; 0x212e <free+0x10c>
    2060:	ed 01       	movw	r28, r26
    2062:	20 e0       	ldi	r18, 0x00	; 0
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	ce 17       	cp	r28, r30
    2068:	df 07       	cpc	r29, r31
    206a:	40 f4       	brcc	.+16     	; 0x207c <free+0x5a>
    206c:	4a 81       	ldd	r20, Y+2	; 0x02
    206e:	5b 81       	ldd	r21, Y+3	; 0x03
    2070:	9e 01       	movw	r18, r28
    2072:	41 15       	cp	r20, r1
    2074:	51 05       	cpc	r21, r1
    2076:	f1 f0       	breq	.+60     	; 0x20b4 <free+0x92>
    2078:	ea 01       	movw	r28, r20
    207a:	f5 cf       	rjmp	.-22     	; 0x2066 <free+0x44>
    207c:	d3 83       	std	Z+3, r29	; 0x03
    207e:	c2 83       	std	Z+2, r28	; 0x02
    2080:	40 81       	ld	r20, Z
    2082:	51 81       	ldd	r21, Z+1	; 0x01
    2084:	84 0f       	add	r24, r20
    2086:	95 1f       	adc	r25, r21
    2088:	c8 17       	cp	r28, r24
    208a:	d9 07       	cpc	r29, r25
    208c:	59 f4       	brne	.+22     	; 0x20a4 <free+0x82>
    208e:	88 81       	ld	r24, Y
    2090:	99 81       	ldd	r25, Y+1	; 0x01
    2092:	84 0f       	add	r24, r20
    2094:	95 1f       	adc	r25, r21
    2096:	02 96       	adiw	r24, 0x02	; 2
    2098:	91 83       	std	Z+1, r25	; 0x01
    209a:	80 83       	st	Z, r24
    209c:	8a 81       	ldd	r24, Y+2	; 0x02
    209e:	9b 81       	ldd	r25, Y+3	; 0x03
    20a0:	93 83       	std	Z+3, r25	; 0x03
    20a2:	82 83       	std	Z+2, r24	; 0x02
    20a4:	21 15       	cp	r18, r1
    20a6:	31 05       	cpc	r19, r1
    20a8:	29 f4       	brne	.+10     	; 0x20b4 <free+0x92>
    20aa:	f0 93 5a 02 	sts	0x025A, r31	; 0x80025a <__flp+0x1>
    20ae:	e0 93 59 02 	sts	0x0259, r30	; 0x800259 <__flp>
    20b2:	3d c0       	rjmp	.+122    	; 0x212e <free+0x10c>
    20b4:	e9 01       	movw	r28, r18
    20b6:	fb 83       	std	Y+3, r31	; 0x03
    20b8:	ea 83       	std	Y+2, r30	; 0x02
    20ba:	49 91       	ld	r20, Y+
    20bc:	59 91       	ld	r21, Y+
    20be:	c4 0f       	add	r28, r20
    20c0:	d5 1f       	adc	r29, r21
    20c2:	ec 17       	cp	r30, r28
    20c4:	fd 07       	cpc	r31, r29
    20c6:	61 f4       	brne	.+24     	; 0x20e0 <free+0xbe>
    20c8:	80 81       	ld	r24, Z
    20ca:	91 81       	ldd	r25, Z+1	; 0x01
    20cc:	84 0f       	add	r24, r20
    20ce:	95 1f       	adc	r25, r21
    20d0:	02 96       	adiw	r24, 0x02	; 2
    20d2:	e9 01       	movw	r28, r18
    20d4:	99 83       	std	Y+1, r25	; 0x01
    20d6:	88 83       	st	Y, r24
    20d8:	82 81       	ldd	r24, Z+2	; 0x02
    20da:	93 81       	ldd	r25, Z+3	; 0x03
    20dc:	9b 83       	std	Y+3, r25	; 0x03
    20de:	8a 83       	std	Y+2, r24	; 0x02
    20e0:	e0 e0       	ldi	r30, 0x00	; 0
    20e2:	f0 e0       	ldi	r31, 0x00	; 0
    20e4:	12 96       	adiw	r26, 0x02	; 2
    20e6:	8d 91       	ld	r24, X+
    20e8:	9c 91       	ld	r25, X
    20ea:	13 97       	sbiw	r26, 0x03	; 3
    20ec:	00 97       	sbiw	r24, 0x00	; 0
    20ee:	19 f0       	breq	.+6      	; 0x20f6 <free+0xd4>
    20f0:	fd 01       	movw	r30, r26
    20f2:	dc 01       	movw	r26, r24
    20f4:	f7 cf       	rjmp	.-18     	; 0x20e4 <free+0xc2>
    20f6:	8d 91       	ld	r24, X+
    20f8:	9c 91       	ld	r25, X
    20fa:	11 97       	sbiw	r26, 0x01	; 1
    20fc:	9d 01       	movw	r18, r26
    20fe:	2e 5f       	subi	r18, 0xFE	; 254
    2100:	3f 4f       	sbci	r19, 0xFF	; 255
    2102:	82 0f       	add	r24, r18
    2104:	93 1f       	adc	r25, r19
    2106:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <__brkval>
    210a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <__brkval+0x1>
    210e:	28 17       	cp	r18, r24
    2110:	39 07       	cpc	r19, r25
    2112:	69 f4       	brne	.+26     	; 0x212e <free+0x10c>
    2114:	30 97       	sbiw	r30, 0x00	; 0
    2116:	29 f4       	brne	.+10     	; 0x2122 <free+0x100>
    2118:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <__flp+0x1>
    211c:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <__flp>
    2120:	02 c0       	rjmp	.+4      	; 0x2126 <free+0x104>
    2122:	13 82       	std	Z+3, r1	; 0x03
    2124:	12 82       	std	Z+2, r1	; 0x02
    2126:	b0 93 58 02 	sts	0x0258, r27	; 0x800258 <__brkval+0x1>
    212a:	a0 93 57 02 	sts	0x0257, r26	; 0x800257 <__brkval>
    212e:	df 91       	pop	r29
    2130:	cf 91       	pop	r28
    2132:	08 95       	ret

00002134 <strnlen_P>:
    2134:	fc 01       	movw	r30, r24
    2136:	05 90       	lpm	r0, Z+
    2138:	61 50       	subi	r22, 0x01	; 1
    213a:	70 40       	sbci	r23, 0x00	; 0
    213c:	01 10       	cpse	r0, r1
    213e:	d8 f7       	brcc	.-10     	; 0x2136 <strnlen_P+0x2>
    2140:	80 95       	com	r24
    2142:	90 95       	com	r25
    2144:	8e 0f       	add	r24, r30
    2146:	9f 1f       	adc	r25, r31
    2148:	08 95       	ret

0000214a <memset>:
    214a:	dc 01       	movw	r26, r24
    214c:	01 c0       	rjmp	.+2      	; 0x2150 <memset+0x6>
    214e:	6d 93       	st	X+, r22
    2150:	41 50       	subi	r20, 0x01	; 1
    2152:	50 40       	sbci	r21, 0x00	; 0
    2154:	e0 f7       	brcc	.-8      	; 0x214e <memset+0x4>
    2156:	08 95       	ret

00002158 <strnlen>:
    2158:	fc 01       	movw	r30, r24
    215a:	61 50       	subi	r22, 0x01	; 1
    215c:	70 40       	sbci	r23, 0x00	; 0
    215e:	01 90       	ld	r0, Z+
    2160:	01 10       	cpse	r0, r1
    2162:	d8 f7       	brcc	.-10     	; 0x215a <strnlen+0x2>
    2164:	80 95       	com	r24
    2166:	90 95       	com	r25
    2168:	8e 0f       	add	r24, r30
    216a:	9f 1f       	adc	r25, r31
    216c:	08 95       	ret

0000216e <fputc>:
    216e:	0f 93       	push	r16
    2170:	1f 93       	push	r17
    2172:	cf 93       	push	r28
    2174:	df 93       	push	r29
    2176:	fb 01       	movw	r30, r22
    2178:	23 81       	ldd	r18, Z+3	; 0x03
    217a:	21 fd       	sbrc	r18, 1
    217c:	03 c0       	rjmp	.+6      	; 0x2184 <fputc+0x16>
    217e:	8f ef       	ldi	r24, 0xFF	; 255
    2180:	9f ef       	ldi	r25, 0xFF	; 255
    2182:	2c c0       	rjmp	.+88     	; 0x21dc <fputc+0x6e>
    2184:	22 ff       	sbrs	r18, 2
    2186:	16 c0       	rjmp	.+44     	; 0x21b4 <fputc+0x46>
    2188:	46 81       	ldd	r20, Z+6	; 0x06
    218a:	57 81       	ldd	r21, Z+7	; 0x07
    218c:	24 81       	ldd	r18, Z+4	; 0x04
    218e:	35 81       	ldd	r19, Z+5	; 0x05
    2190:	42 17       	cp	r20, r18
    2192:	53 07       	cpc	r21, r19
    2194:	44 f4       	brge	.+16     	; 0x21a6 <fputc+0x38>
    2196:	a0 81       	ld	r26, Z
    2198:	b1 81       	ldd	r27, Z+1	; 0x01
    219a:	9d 01       	movw	r18, r26
    219c:	2f 5f       	subi	r18, 0xFF	; 255
    219e:	3f 4f       	sbci	r19, 0xFF	; 255
    21a0:	31 83       	std	Z+1, r19	; 0x01
    21a2:	20 83       	st	Z, r18
    21a4:	8c 93       	st	X, r24
    21a6:	26 81       	ldd	r18, Z+6	; 0x06
    21a8:	37 81       	ldd	r19, Z+7	; 0x07
    21aa:	2f 5f       	subi	r18, 0xFF	; 255
    21ac:	3f 4f       	sbci	r19, 0xFF	; 255
    21ae:	37 83       	std	Z+7, r19	; 0x07
    21b0:	26 83       	std	Z+6, r18	; 0x06
    21b2:	14 c0       	rjmp	.+40     	; 0x21dc <fputc+0x6e>
    21b4:	8b 01       	movw	r16, r22
    21b6:	ec 01       	movw	r28, r24
    21b8:	fb 01       	movw	r30, r22
    21ba:	00 84       	ldd	r0, Z+8	; 0x08
    21bc:	f1 85       	ldd	r31, Z+9	; 0x09
    21be:	e0 2d       	mov	r30, r0
    21c0:	09 95       	icall
    21c2:	89 2b       	or	r24, r25
    21c4:	e1 f6       	brne	.-72     	; 0x217e <fputc+0x10>
    21c6:	d8 01       	movw	r26, r16
    21c8:	16 96       	adiw	r26, 0x06	; 6
    21ca:	8d 91       	ld	r24, X+
    21cc:	9c 91       	ld	r25, X
    21ce:	17 97       	sbiw	r26, 0x07	; 7
    21d0:	01 96       	adiw	r24, 0x01	; 1
    21d2:	17 96       	adiw	r26, 0x07	; 7
    21d4:	9c 93       	st	X, r25
    21d6:	8e 93       	st	-X, r24
    21d8:	16 97       	sbiw	r26, 0x06	; 6
    21da:	ce 01       	movw	r24, r28
    21dc:	df 91       	pop	r29
    21de:	cf 91       	pop	r28
    21e0:	1f 91       	pop	r17
    21e2:	0f 91       	pop	r16
    21e4:	08 95       	ret

000021e6 <__ultoa_invert>:
    21e6:	fa 01       	movw	r30, r20
    21e8:	aa 27       	eor	r26, r26
    21ea:	28 30       	cpi	r18, 0x08	; 8
    21ec:	51 f1       	breq	.+84     	; 0x2242 <__ultoa_invert+0x5c>
    21ee:	20 31       	cpi	r18, 0x10	; 16
    21f0:	81 f1       	breq	.+96     	; 0x2252 <__ultoa_invert+0x6c>
    21f2:	e8 94       	clt
    21f4:	6f 93       	push	r22
    21f6:	6e 7f       	andi	r22, 0xFE	; 254
    21f8:	6e 5f       	subi	r22, 0xFE	; 254
    21fa:	7f 4f       	sbci	r23, 0xFF	; 255
    21fc:	8f 4f       	sbci	r24, 0xFF	; 255
    21fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2200:	af 4f       	sbci	r26, 0xFF	; 255
    2202:	b1 e0       	ldi	r27, 0x01	; 1
    2204:	3e d0       	rcall	.+124    	; 0x2282 <__ultoa_invert+0x9c>
    2206:	b4 e0       	ldi	r27, 0x04	; 4
    2208:	3c d0       	rcall	.+120    	; 0x2282 <__ultoa_invert+0x9c>
    220a:	67 0f       	add	r22, r23
    220c:	78 1f       	adc	r23, r24
    220e:	89 1f       	adc	r24, r25
    2210:	9a 1f       	adc	r25, r26
    2212:	a1 1d       	adc	r26, r1
    2214:	68 0f       	add	r22, r24
    2216:	79 1f       	adc	r23, r25
    2218:	8a 1f       	adc	r24, r26
    221a:	91 1d       	adc	r25, r1
    221c:	a1 1d       	adc	r26, r1
    221e:	6a 0f       	add	r22, r26
    2220:	71 1d       	adc	r23, r1
    2222:	81 1d       	adc	r24, r1
    2224:	91 1d       	adc	r25, r1
    2226:	a1 1d       	adc	r26, r1
    2228:	20 d0       	rcall	.+64     	; 0x226a <__ultoa_invert+0x84>
    222a:	09 f4       	brne	.+2      	; 0x222e <__ultoa_invert+0x48>
    222c:	68 94       	set
    222e:	3f 91       	pop	r19
    2230:	2a e0       	ldi	r18, 0x0A	; 10
    2232:	26 9f       	mul	r18, r22
    2234:	11 24       	eor	r1, r1
    2236:	30 19       	sub	r19, r0
    2238:	30 5d       	subi	r19, 0xD0	; 208
    223a:	31 93       	st	Z+, r19
    223c:	de f6       	brtc	.-74     	; 0x21f4 <__ultoa_invert+0xe>
    223e:	cf 01       	movw	r24, r30
    2240:	08 95       	ret
    2242:	46 2f       	mov	r20, r22
    2244:	47 70       	andi	r20, 0x07	; 7
    2246:	40 5d       	subi	r20, 0xD0	; 208
    2248:	41 93       	st	Z+, r20
    224a:	b3 e0       	ldi	r27, 0x03	; 3
    224c:	0f d0       	rcall	.+30     	; 0x226c <__ultoa_invert+0x86>
    224e:	c9 f7       	brne	.-14     	; 0x2242 <__ultoa_invert+0x5c>
    2250:	f6 cf       	rjmp	.-20     	; 0x223e <__ultoa_invert+0x58>
    2252:	46 2f       	mov	r20, r22
    2254:	4f 70       	andi	r20, 0x0F	; 15
    2256:	40 5d       	subi	r20, 0xD0	; 208
    2258:	4a 33       	cpi	r20, 0x3A	; 58
    225a:	18 f0       	brcs	.+6      	; 0x2262 <__ultoa_invert+0x7c>
    225c:	49 5d       	subi	r20, 0xD9	; 217
    225e:	31 fd       	sbrc	r19, 1
    2260:	40 52       	subi	r20, 0x20	; 32
    2262:	41 93       	st	Z+, r20
    2264:	02 d0       	rcall	.+4      	; 0x226a <__ultoa_invert+0x84>
    2266:	a9 f7       	brne	.-22     	; 0x2252 <__ultoa_invert+0x6c>
    2268:	ea cf       	rjmp	.-44     	; 0x223e <__ultoa_invert+0x58>
    226a:	b4 e0       	ldi	r27, 0x04	; 4
    226c:	a6 95       	lsr	r26
    226e:	97 95       	ror	r25
    2270:	87 95       	ror	r24
    2272:	77 95       	ror	r23
    2274:	67 95       	ror	r22
    2276:	ba 95       	dec	r27
    2278:	c9 f7       	brne	.-14     	; 0x226c <__ultoa_invert+0x86>
    227a:	00 97       	sbiw	r24, 0x00	; 0
    227c:	61 05       	cpc	r22, r1
    227e:	71 05       	cpc	r23, r1
    2280:	08 95       	ret
    2282:	9b 01       	movw	r18, r22
    2284:	ac 01       	movw	r20, r24
    2286:	0a 2e       	mov	r0, r26
    2288:	06 94       	lsr	r0
    228a:	57 95       	ror	r21
    228c:	47 95       	ror	r20
    228e:	37 95       	ror	r19
    2290:	27 95       	ror	r18
    2292:	ba 95       	dec	r27
    2294:	c9 f7       	brne	.-14     	; 0x2288 <__ultoa_invert+0xa2>
    2296:	62 0f       	add	r22, r18
    2298:	73 1f       	adc	r23, r19
    229a:	84 1f       	adc	r24, r20
    229c:	95 1f       	adc	r25, r21
    229e:	a0 1d       	adc	r26, r0
    22a0:	08 95       	ret

000022a2 <__divmodsi4>:
    22a2:	05 2e       	mov	r0, r21
    22a4:	97 fb       	bst	r25, 7
    22a6:	1e f4       	brtc	.+6      	; 0x22ae <__divmodsi4+0xc>
    22a8:	00 94       	com	r0
    22aa:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__negsi2>
    22ae:	57 fd       	sbrc	r21, 7
    22b0:	07 d0       	rcall	.+14     	; 0x22c0 <__divmodsi4_neg2>
    22b2:	0e 94 ba 11 	call	0x2374	; 0x2374 <__udivmodsi4>
    22b6:	07 fc       	sbrc	r0, 7
    22b8:	03 d0       	rcall	.+6      	; 0x22c0 <__divmodsi4_neg2>
    22ba:	4e f4       	brtc	.+18     	; 0x22ce <__divmodsi4_exit>
    22bc:	0c 94 68 11 	jmp	0x22d0	; 0x22d0 <__negsi2>

000022c0 <__divmodsi4_neg2>:
    22c0:	50 95       	com	r21
    22c2:	40 95       	com	r20
    22c4:	30 95       	com	r19
    22c6:	21 95       	neg	r18
    22c8:	3f 4f       	sbci	r19, 0xFF	; 255
    22ca:	4f 4f       	sbci	r20, 0xFF	; 255
    22cc:	5f 4f       	sbci	r21, 0xFF	; 255

000022ce <__divmodsi4_exit>:
    22ce:	08 95       	ret

000022d0 <__negsi2>:
    22d0:	90 95       	com	r25
    22d2:	80 95       	com	r24
    22d4:	70 95       	com	r23
    22d6:	61 95       	neg	r22
    22d8:	7f 4f       	sbci	r23, 0xFF	; 255
    22da:	8f 4f       	sbci	r24, 0xFF	; 255
    22dc:	9f 4f       	sbci	r25, 0xFF	; 255
    22de:	08 95       	ret

000022e0 <__muluhisi3>:
    22e0:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__umulhisi3>
    22e4:	a5 9f       	mul	r26, r21
    22e6:	90 0d       	add	r25, r0
    22e8:	b4 9f       	mul	r27, r20
    22ea:	90 0d       	add	r25, r0
    22ec:	a4 9f       	mul	r26, r20
    22ee:	80 0d       	add	r24, r0
    22f0:	91 1d       	adc	r25, r1
    22f2:	11 24       	eor	r1, r1
    22f4:	08 95       	ret

000022f6 <__mulshisi3>:
    22f6:	b7 ff       	sbrs	r27, 7
    22f8:	0c 94 70 11 	jmp	0x22e0	; 0x22e0 <__muluhisi3>

000022fc <__mulohisi3>:
    22fc:	0e 94 70 11 	call	0x22e0	; 0x22e0 <__muluhisi3>
    2300:	82 1b       	sub	r24, r18
    2302:	93 0b       	sbc	r25, r19
    2304:	08 95       	ret

00002306 <__prologue_saves__>:
    2306:	2f 92       	push	r2
    2308:	3f 92       	push	r3
    230a:	4f 92       	push	r4
    230c:	5f 92       	push	r5
    230e:	6f 92       	push	r6
    2310:	7f 92       	push	r7
    2312:	8f 92       	push	r8
    2314:	9f 92       	push	r9
    2316:	af 92       	push	r10
    2318:	bf 92       	push	r11
    231a:	cf 92       	push	r12
    231c:	df 92       	push	r13
    231e:	ef 92       	push	r14
    2320:	ff 92       	push	r15
    2322:	0f 93       	push	r16
    2324:	1f 93       	push	r17
    2326:	cf 93       	push	r28
    2328:	df 93       	push	r29
    232a:	cd b7       	in	r28, 0x3d	; 61
    232c:	de b7       	in	r29, 0x3e	; 62
    232e:	ca 1b       	sub	r28, r26
    2330:	db 0b       	sbc	r29, r27
    2332:	0f b6       	in	r0, 0x3f	; 63
    2334:	f8 94       	cli
    2336:	de bf       	out	0x3e, r29	; 62
    2338:	0f be       	out	0x3f, r0	; 63
    233a:	cd bf       	out	0x3d, r28	; 61
    233c:	09 94       	ijmp

0000233e <__epilogue_restores__>:
    233e:	2a 88       	ldd	r2, Y+18	; 0x12
    2340:	39 88       	ldd	r3, Y+17	; 0x11
    2342:	48 88       	ldd	r4, Y+16	; 0x10
    2344:	5f 84       	ldd	r5, Y+15	; 0x0f
    2346:	6e 84       	ldd	r6, Y+14	; 0x0e
    2348:	7d 84       	ldd	r7, Y+13	; 0x0d
    234a:	8c 84       	ldd	r8, Y+12	; 0x0c
    234c:	9b 84       	ldd	r9, Y+11	; 0x0b
    234e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2350:	b9 84       	ldd	r11, Y+9	; 0x09
    2352:	c8 84       	ldd	r12, Y+8	; 0x08
    2354:	df 80       	ldd	r13, Y+7	; 0x07
    2356:	ee 80       	ldd	r14, Y+6	; 0x06
    2358:	fd 80       	ldd	r15, Y+5	; 0x05
    235a:	0c 81       	ldd	r16, Y+4	; 0x04
    235c:	1b 81       	ldd	r17, Y+3	; 0x03
    235e:	aa 81       	ldd	r26, Y+2	; 0x02
    2360:	b9 81       	ldd	r27, Y+1	; 0x01
    2362:	ce 0f       	add	r28, r30
    2364:	d1 1d       	adc	r29, r1
    2366:	0f b6       	in	r0, 0x3f	; 63
    2368:	f8 94       	cli
    236a:	de bf       	out	0x3e, r29	; 62
    236c:	0f be       	out	0x3f, r0	; 63
    236e:	cd bf       	out	0x3d, r28	; 61
    2370:	ed 01       	movw	r28, r26
    2372:	08 95       	ret

00002374 <__udivmodsi4>:
    2374:	a1 e2       	ldi	r26, 0x21	; 33
    2376:	1a 2e       	mov	r1, r26
    2378:	aa 1b       	sub	r26, r26
    237a:	bb 1b       	sub	r27, r27
    237c:	fd 01       	movw	r30, r26
    237e:	0d c0       	rjmp	.+26     	; 0x239a <__udivmodsi4_ep>

00002380 <__udivmodsi4_loop>:
    2380:	aa 1f       	adc	r26, r26
    2382:	bb 1f       	adc	r27, r27
    2384:	ee 1f       	adc	r30, r30
    2386:	ff 1f       	adc	r31, r31
    2388:	a2 17       	cp	r26, r18
    238a:	b3 07       	cpc	r27, r19
    238c:	e4 07       	cpc	r30, r20
    238e:	f5 07       	cpc	r31, r21
    2390:	20 f0       	brcs	.+8      	; 0x239a <__udivmodsi4_ep>
    2392:	a2 1b       	sub	r26, r18
    2394:	b3 0b       	sbc	r27, r19
    2396:	e4 0b       	sbc	r30, r20
    2398:	f5 0b       	sbc	r31, r21

0000239a <__udivmodsi4_ep>:
    239a:	66 1f       	adc	r22, r22
    239c:	77 1f       	adc	r23, r23
    239e:	88 1f       	adc	r24, r24
    23a0:	99 1f       	adc	r25, r25
    23a2:	1a 94       	dec	r1
    23a4:	69 f7       	brne	.-38     	; 0x2380 <__udivmodsi4_loop>
    23a6:	60 95       	com	r22
    23a8:	70 95       	com	r23
    23aa:	80 95       	com	r24
    23ac:	90 95       	com	r25
    23ae:	9b 01       	movw	r18, r22
    23b0:	ac 01       	movw	r20, r24
    23b2:	bd 01       	movw	r22, r26
    23b4:	cf 01       	movw	r24, r30
    23b6:	08 95       	ret

000023b8 <__umulhisi3>:
    23b8:	a2 9f       	mul	r26, r18
    23ba:	b0 01       	movw	r22, r0
    23bc:	b3 9f       	mul	r27, r19
    23be:	c0 01       	movw	r24, r0
    23c0:	a3 9f       	mul	r26, r19
    23c2:	70 0d       	add	r23, r0
    23c4:	81 1d       	adc	r24, r1
    23c6:	11 24       	eor	r1, r1
    23c8:	91 1d       	adc	r25, r1
    23ca:	b2 9f       	mul	r27, r18
    23cc:	70 0d       	add	r23, r0
    23ce:	81 1d       	adc	r24, r1
    23d0:	11 24       	eor	r1, r1
    23d2:	91 1d       	adc	r25, r1
    23d4:	08 95       	ret

000023d6 <_exit>:
    23d6:	f8 94       	cli

000023d8 <__stop_program>:
    23d8:	ff cf       	rjmp	.-2      	; 0x23d8 <__stop_program>
